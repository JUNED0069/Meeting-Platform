/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/videoMeet/conference",{

/***/ "./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js":
/*!****************************************************************!*\
  !*** ./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/**\n * AgoraWebSDK_N-v4.19.3-0-gb2ca8ca7 Copyright AgoraInc.\n */\n\n!function(e,t){ true?module.exports=t():0}(this,(function(){\"use strict\";function e(e,t){return t.forEach((function(t){t&&\"string\"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(i){if(\"default\"!==i&&!(i in e)){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}}))})),Object.freeze(e)}let t=!0,i=!0;function n(e,t,i){const n=e.match(t);return n&&n.length>=i&&parseInt(n[i],10)}function r(e,t,i){if(!e.RTCPeerConnection)return;const n=e.RTCPeerConnection.prototype,r=n.addEventListener;n.addEventListener=function(e,n){if(e!==t)return r.apply(this,arguments);const s=e=>{const t=i(e);t&&(n.handleEvent?n.handleEvent(t):n(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(n,s),r.apply(this,[e,s])};const s=n.removeEventListener;n.removeEventListener=function(e,i){if(e!==t||!this._eventMap||!this._eventMap[t])return s.apply(this,arguments);if(!this._eventMap[t].has(i))return s.apply(this,arguments);const n=this._eventMap[t].get(i);return this._eventMap[t].delete(i),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,s.apply(this,[e,n])},Object.defineProperty(n,\"on\"+t,{get(){return this[\"_on\"+t]},set(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}function s(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(t=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")}function o(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(i=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))}function a(){if(\"object\"==typeof window){if(t)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}}function c(e,t){i&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")}function d(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function l(e){return d(e)?Object.keys(e).reduce((function(t,i){const n=d(e[i]),r=n?l(e[i]):e[i],s=n&&!Object.keys(r).length;return void 0===r||s?t:Object.assign(t,{[i]:r})}),{}):e}function h(e,t,i){t&&!i.has(t.id)&&(i.set(t.id,t),Object.keys(t).forEach((n=>{n.endsWith(\"Id\")?h(e,e.get(t[n]),i):n.endsWith(\"Ids\")&&t[n].forEach((t=>{h(e,e.get(t),i)}))})))}function u(e,t,i){const n=i?\"outbound-rtp\":\"inbound-rtp\",r=new Map;if(null===t)return r;const s=[];return e.forEach((e=>{\"track\"===e.type&&e.trackIdentifier===t.id&&s.push(e)})),s.forEach((t=>{e.forEach((i=>{i.type===n&&i.trackId===t.id&&h(e,i,r)}))})),r}const p=a;function _(e,t){const i=e&&e.navigator;if(!i.mediaDevices)return;const n=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;const t={};return Object.keys(e).forEach((i=>{if(\"require\"===i||\"advanced\"===i||\"mediaSource\"===i)return;const n=\"object\"==typeof e[i]?e[i]:{ideal:e[i]};void 0!==n.exact&&\"number\"==typeof n.exact&&(n.min=n.max=n.exact);const r=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==n.ideal){t.optional=t.optional||[];let e={};\"number\"==typeof n.ideal?(e[r(\"min\",i)]=n.ideal,t.optional.push(e),e={},e[r(\"max\",i)]=n.ideal,t.optional.push(e)):(e[r(\"\",i)]=n.ideal,t.optional.push(e))}void 0!==n.exact&&\"number\"!=typeof n.exact?(t.mandatory=t.mandatory||{},t.mandatory[r(\"\",i)]=n.exact):[\"min\",\"max\"].forEach((e=>{void 0!==n[e]&&(t.mandatory=t.mandatory||{},t.mandatory[r(e,i)]=n[e])}))})),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},r=function(e,r){if(t.version>=61)return r(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"==typeof e.audio){const t=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),t(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=n(e.audio)}if(e&&\"object\"==typeof e.video){let s=e.video.facingMode;s=s&&(\"object\"==typeof s?s:{ideal:s});const o=t.version<66;if(s&&(\"user\"===s.exact||\"environment\"===s.exact||\"user\"===s.ideal||\"environment\"===s.ideal)&&(!i.mediaDevices.getSupportedConstraints||!i.mediaDevices.getSupportedConstraints().facingMode||o)){let t;if(delete e.video.facingMode,\"environment\"===s.exact||\"environment\"===s.ideal?t=[\"back\",\"rear\"]:\"user\"!==s.exact&&\"user\"!==s.ideal||(t=[\"front\"]),t)return i.mediaDevices.enumerateDevices().then((i=>{let o=(i=i.filter((e=>\"videoinput\"===e.kind))).find((e=>t.some((t=>e.label.toLowerCase().includes(t)))));return!o&&i.length&&t.includes(\"back\")&&(o=i[i.length-1]),o&&(e.video.deviceId=s.exact?{exact:o.deviceId}:{ideal:o.deviceId}),e.video=n(e.video),p(\"chrome: \"+JSON.stringify(e)),r(e)}))}e.video=n(e.video)}return p(\"chrome: \"+JSON.stringify(e)),r(e)},s=function(e){return t.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&\": \")+this.message}}};if(i.getUserMedia=function(e,t,n){r(e,(e=>{i.webkitGetUserMedia(e,t,(e=>{n&&n(s(e))}))}))}.bind(i),i.mediaDevices.getUserMedia){const e=i.mediaDevices.getUserMedia.bind(i.mediaDevices);i.mediaDevices.getUserMedia=function(t){return r(t,(t=>e(t).then((e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach((e=>{e.stop()})),new DOMException(\"\",\"NotFoundError\");return e}),(e=>Promise.reject(s(e))))))}}}function E(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function m(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener(\"addtrack\",(i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.track.id)):{track:i.track};const r=new Event(\"track\");r.track=i.track,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)})),t.stream.getTracks().forEach((i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.id)):{track:i};const r=new Event(\"track\");r.track=i,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)}))},this.addEventListener(\"addstream\",this._ontrackpoly)),t.apply(this,arguments)}}else r(e,\"track\",(e=>(e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e)))}function f(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){const t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const i=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){let r=i.apply(this,arguments);return r||(r=t(this,e),this._senders.push(r)),r};const n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){n.apply(this,arguments);const t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach((e=>{this._senders.push(t(this,e))}))};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],n.apply(this,[e]),e.getTracks().forEach((e=>{const t=this._senders.find((t=>t.track===e));t&&this._senders.splice(this._senders.indexOf(t),1)}))}}else if(\"object\"==typeof e&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function g(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,i,n]=arguments;if(arguments.length>0&&\"function\"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||\"function\"!=typeof e))return t.apply(this,[]);const r=function(e){const t={};return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t[i.id]=i})),t},s=function(e){return new Map(Object.keys(e).map((t=>[t,e[t]])))};if(arguments.length>=2){const n=function(e){i(s(r(e)))};return t.apply(this,[n,e])}return new Promise(((e,i)=>{t.apply(this,[function(t){e(s(r(t)))},i])})).then(i,n)}}function T(e){if(!(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!(\"getStats\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>u(t,e.track,!0)))}}if(!(\"getStats\"in e.RTCRtpReceiver.prototype)){const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),r(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>u(t,e.track,!1)))}}if(!(\"getStats\"in e.RTCRtpSender.prototype)||!(\"getStats\"in e.RTCRtpReceiver.prototype))return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){const e=arguments[0];let t,i,n;return this.getSenders().forEach((i=>{i.track===e&&(t?n=!0:t=i)})),this.getReceivers().forEach((t=>(t.track===e&&(i?n=!0:i=t),t.track===e))),n||t&&i?Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):t?t.getStats():i?i.getStats():Promise.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return t.apply(this,arguments)}}function S(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map((e=>this._shimmedLocalStreams[e][0]))};const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,i){if(!i)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const n=t.apply(this,arguments);return this._shimmedLocalStreams[i.id]?-1===this._shimmedLocalStreams[i.id].indexOf(n)&&this._shimmedLocalStreams[i.id].push(n):this._shimmedLocalStreams[i.id]=[i,n],n};const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach((e=>{if(this.getSenders().find((t=>t.track===e)))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}));const t=this.getSenders();i.apply(this,arguments);const n=this.getSenders().filter((e=>-1===t.indexOf(e)));this._shimmedLocalStreams[e.id]=[e].concat(n)};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],n.apply(this,arguments)};const r=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach((t=>{const i=this._shimmedLocalStreams[t].indexOf(e);-1!==i&&this._shimmedLocalStreams[t].splice(i,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]})),r.apply(this,arguments)}}function R(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return S(e);const i=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){const e=i.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map((e=>this._reverseStreams[e.id]))};const n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach((e=>{if(this.getSenders().find((t=>t.track===e)))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")})),!this._reverseStreams[t.id]){const i=new e.MediaStream(t.getTracks());this._streams[t.id]=i,this._reverseStreams[i.id]=t,t=i}n.apply(this,[t])};const r=e.RTCPeerConnection.prototype.removeStream;function s(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(r.id,\"g\"),n.id)})),new RTCSessionDescription({type:t.type,sdp:i})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},r.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,i){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");const n=[].slice.call(arguments,1);if(1!==n.length||!n[0].getTracks().find((e=>e===t)))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");if(this.getSenders().find((e=>e.track===t)))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const r=this._streams[i.id];if(r)r.addTrack(t),Promise.resolve().then((()=>{this.dispatchEvent(new Event(\"negotiationneeded\"))}));else{const n=new e.MediaStream([t]);this._streams[i.id]=n,this._reverseStreams[n.id]=i,this.addStream(n)}return this.getSenders().find((e=>e.track===t))},[\"createOffer\",\"createAnswer\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){const e=arguments;return arguments.length&&\"function\"==typeof arguments[0]?i.apply(this,[t=>{const i=s(this,t);e[0].apply(null,[i])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):i.apply(this,arguments).then((e=>s(this,e)))}};e.RTCPeerConnection.prototype[t]=n[t]}));const o=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(n.id,\"g\"),r.id)})),new RTCSessionDescription({type:t.type,sdp:i})}(this,arguments[0]),o.apply(this,arguments)):o.apply(this,arguments)};const a=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get(){const e=a.get.apply(this);return\"\"===e.type?e:s(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===this))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach((i=>{this._streams[i].getTracks().find((t=>e.track===t))&&(t=this._streams[i])})),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event(\"negotiationneeded\")))}}function C(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}))}function v(e,t){r(e,\"negotiationneeded\",(e=>{const i=e.target;if(!(t.version<72||i.getConfiguration&&\"plan-b\"===i.getConfiguration().sdpSemantics)||\"stable\"===i.signalingState)return e}))}var I=Object.freeze({__proto__:null,fixNegotiationNeeded:v,shimAddTrackRemoveTrack:R,shimAddTrackRemoveTrackWithNative:S,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(\"function\"==typeof t?e.navigator.mediaDevices.getDisplayMedia=function(i){return t(i).then((t=>{const n=i.video&&i.video.width,r=i.video&&i.video.height,s=i.video&&i.video.frameRate;return i.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:t,maxFrameRate:s||3}},n&&(i.video.mandatory.maxWidth=n),r&&(i.video.mandatory.maxHeight=r),e.navigator.mediaDevices.getUserMedia(i)}))}:console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"))},shimGetSendersWithDtmf:f,shimGetStats:g,shimGetUserMedia:_,shimMediaStream:E,shimOnTrack:m,shimPeerConnection:C,shimSenderReceiverGetStats:T});function y(e,t){const i=e&&e.navigator,n=e&&e.MediaStreamTrack;if(i.getUserMedia=function(e,t,n){c(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),i.mediaDevices.getUserMedia(e).then(t,n)},!(t.version>55&&\"autoGainControl\"in i.mediaDevices.getSupportedConstraints())){const e=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])},t=i.mediaDevices.getUserMedia.bind(i.mediaDevices);if(i.mediaDevices.getUserMedia=function(i){return\"object\"==typeof i&&\"object\"==typeof i.audio&&(i=JSON.parse(JSON.stringify(i)),e(i.audio,\"autoGainControl\",\"mozAutoGainControl\"),e(i.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),t(i)},n&&n.prototype.getSettings){const t=n.prototype.getSettings;n.prototype.getSettings=function(){const i=t.apply(this,arguments);return e(i,\"mozAutoGainControl\",\"autoGainControl\"),e(i,\"mozNoiseSuppression\",\"noiseSuppression\"),i}}if(n&&n.prototype.applyConstraints){const t=n.prototype.applyConstraints;n.prototype.applyConstraints=function(i){return\"audio\"===this.kind&&\"object\"==typeof i&&(i=JSON.parse(JSON.stringify(i)),e(i,\"autoGainControl\",\"mozAutoGainControl\"),e(i,\"noiseSuppression\",\"mozNoiseSuppression\")),t.apply(this,[i])}}}}function A(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function b(e,t){if(\"object\"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}));const i={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},n=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,r,s]=arguments;return n.apply(this,[e||null]).then((e=>{if(t.version<53&&!r)try{e.forEach((e=>{e.type=i[e.type]||e.type}))}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(((t,n)=>{e.set(n,Object.assign({},t,{type:i[t.type]||t.type}))}))}return e})).then(r,s)}}function w(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)return;const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}function O(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpReceiver.prototype)return;const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),r(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function N(e){e.RTCPeerConnection&&!(\"removeStream\"in e.RTCPeerConnection.prototype)&&(e.RTCPeerConnection.prototype.removeStream=function(e){c(\"removeStream\",\"removeTrack\"),this.getSenders().forEach((t=>{t.track&&e.getTracks().includes(t.track)&&this.removeTrack(t)}))})}function D(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function P(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];let e=arguments[1]&&arguments[1].sendEncodings;void 0===e&&(e=[]),e=[...e];const i=e.length>0;i&&e.forEach((e=>{if(\"rid\"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError(\"Invalid RID value provided.\")}if(\"scaleResolutionDownBy\"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");if(\"maxFramerate\"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError(\"max_framerate must be >= 0.0\")}));const n=t.apply(this,arguments);if(i){const{sender:t}=n,i=t.getParameters();(!(\"encodings\"in i)||1===i.encodings.length&&0===Object.keys(i.encodings[0]).length)&&(i.encodings=e,t.sendEncodings=e,this.setParametersPromises.push(t.setParameters(i).then((()=>{delete t.sendEncodings})).catch((()=>{delete t.sendEncodings}))))}return n})}function L(e){if(\"object\"!=typeof e||!e.RTCRtpSender)return;const t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){const e=t.apply(this,arguments);return\"encodings\"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function k(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}function M(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}var U=Object.freeze({__proto__:null,shimAddTransceiver:P,shimCreateAnswer:M,shimCreateOffer:k,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(i){if(!i||!i.video){const e=new DOMException(\"getDisplayMedia without video constraints is undefined\");return e.name=\"NotFoundError\",e.code=8,Promise.reject(e)}return!0===i.video?i.video={mediaSource:t}:i.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(i)})},shimGetParameters:L,shimGetUserMedia:y,shimOnTrack:A,shimPeerConnection:b,shimRTCDataChannel:D,shimReceiverGetStats:O,shimRemoveStream:N,shimSenderGetStats:w});function x(e){if(\"object\"==typeof e&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!(\"addStream\"in e.RTCPeerConnection.prototype)){const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),this._localStreams.includes(e)||this._localStreams.push(e),e.getAudioTracks().forEach((i=>t.call(this,i,e))),e.getVideoTracks().forEach((i=>t.call(this,i,e)))},e.RTCPeerConnection.prototype.addTrack=function(e,...i){return i&&i.forEach((e=>{this._localStreams?this._localStreams.includes(e)||this._localStreams.push(e):this._localStreams=[e]})),t.apply(this,arguments)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);const t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);const i=e.getTracks();this.getSenders().forEach((e=>{i.includes(e.track)&&this.removeTrack(e)}))})}}function V(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=e=>{e.streams.forEach((e=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(e))return;this._remoteStreams.push(e);const t=new Event(\"addstream\");t.stream=e,this.dispatchEvent(t)}))})}});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){const e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach((t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);const i=new Event(\"addstream\");i.stream=t,e.dispatchEvent(i)}))}),t.apply(e,arguments)}}}function F(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype,i=t.createOffer,n=t.createAnswer,r=t.setLocalDescription,s=t.setRemoteDescription,o=t.addIceCandidate;t.createOffer=function(e,t){const n=arguments.length>=2?arguments[2]:arguments[0],r=i.apply(this,[n]);return t?(r.then(e,t),Promise.resolve()):r},t.createAnswer=function(e,t){const i=arguments.length>=2?arguments[2]:arguments[0],r=n.apply(this,[i]);return t?(r.then(e,t),Promise.resolve()):r};let a=function(e,t,i){const n=r.apply(this,[e]);return i?(n.then(t,i),Promise.resolve()):n};t.setLocalDescription=a,a=function(e,t,i){const n=s.apply(this,[e]);return i?(n.then(t,i),Promise.resolve()):n},t.setRemoteDescription=a,a=function(e,t,i){const n=o.apply(this,[e]);return i?(n.then(t,i),Promise.resolve()):n},t.addIceCandidate=a}function B(e){const t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){const e=t.mediaDevices,i=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>i(j(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,i,n){t.mediaDevices.getUserMedia(e).then(i,n)}.bind(t))}function j(e){return e&&void 0!==e.video?Object.assign({},e,{video:l(e.video)}):e}function G(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,i){if(e&&e.iceServers){const t=[];for(let i=0;i<e.iceServers.length;i++){let n=e.iceServers[i];!n.hasOwnProperty(\"urls\")&&n.hasOwnProperty(\"url\")?(c(\"RTCIceServer.url\",\"RTCIceServer.urls\"),n=JSON.parse(JSON.stringify(n)),n.urls=n.url,delete n.url,t.push(n)):t.push(e.iceServers[i])}e.iceServers=t}return new t(e,i)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in t&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:()=>t.generateCertificate})}function W(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function H(e){const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);const t=this.getTransceivers().find((e=>\"audio\"===e.receiver.track.kind));!1===e.offerToReceiveAudio&&t?\"sendrecv\"===t.direction?t.setDirection?t.setDirection(\"sendonly\"):t.direction=\"sendonly\":\"recvonly\"===t.direction&&(t.setDirection?t.setDirection(\"inactive\"):t.direction=\"inactive\"):!0!==e.offerToReceiveAudio||t||this.addTransceiver(\"audio\",{direction:\"recvonly\"}),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);const i=this.getTransceivers().find((e=>\"video\"===e.receiver.track.kind));!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection?i.setDirection(\"sendonly\"):i.direction=\"sendonly\":\"recvonly\"===i.direction&&(i.setDirection?i.setDirection(\"inactive\"):i.direction=\"inactive\"):!0!==e.offerToReceiveVideo||i||this.addTransceiver(\"video\",{direction:\"recvonly\"})}return t.apply(this,arguments)}}function K(e){\"object\"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}var Y=Object.freeze({__proto__:null,shimAudioContext:K,shimCallbacksAPI:F,shimConstraints:j,shimCreateOfferLegacy:H,shimGetUserMedia:B,shimLocalStreamsAPI:x,shimRTCIceServerUrls:G,shimRemoteStreamsAPI:V,shimTrackEventTransceiver:W}),q=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:{};function J(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var z={exports:{}};!function(e){const t={generateIdentifier:function(){return Math.random().toString(36).substring(2,12)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return e.trim().split(\"\\n\").map((e=>e.trim()))},t.splitSections=function(e){return e.split(\"\\nm=\").map(((e,t)=>(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"))},t.getDescription=function(e){const i=t.splitSections(e);return i&&i[0]},t.getMediaSections=function(e){const i=t.splitSections(e);return i.shift(),i},t.matchPrefix=function(e,i){return t.splitLines(e).filter((e=>0===e.indexOf(i)))},t.parseCandidate=function(e){let t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");const i={foundation:t[0],component:{1:\"rtp\",2:\"rtcp\"}[t[1]]||t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]};for(let e=8;e<t.length;e+=2)switch(t[e]){case\"raddr\":i.relatedAddress=t[e+1];break;case\"rport\":i.relatedPort=parseInt(t[e+1],10);break;case\"tcptype\":i.tcpType=t[e+1];break;case\"ufrag\":i.ufrag=t[e+1],i.usernameFragment=t[e+1];break;default:void 0===i[t[e]]&&(i[t[e]]=t[e+1])}return i},t.writeCandidate=function(e){const t=[];t.push(e.foundation);const i=e.component;\"rtp\"===i?t.push(1):\"rtcp\"===i?t.push(2):t.push(i),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);const n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},t.parseIceOptions=function(e){return e.substring(14).split(\" \")},t.parseRtpMap=function(e){let t=e.substring(9).split(\" \");const i={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),i.name=t[0],i.clockRate=parseInt(t[1],10),i.channels=3===t.length?parseInt(t[2],10):1,i.numChannels=i.channels,i},t.writeRtpMap=function(e){let t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);const i=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==i?\"/\"+i:\"\")+\"\\r\\n\"},t.parseExtmap=function(e){const t=e.substring(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1],attributes:t.slice(2).join(\" \")}},t.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+(e.attributes?\" \"+e.attributes:\"\")+\"\\r\\n\"},t.parseFmtp=function(e){const t={};let i;const n=e.substring(e.indexOf(\" \")+1).split(\";\");for(let e=0;e<n.length;e++)i=n[e].trim().split(\"=\"),t[i[0].trim()]=i[1];return t},t.writeFmtp=function(e){let t=\"\",i=e.payloadType;if(void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){const n=[];Object.keys(e.parameters).forEach((t=>{void 0!==e.parameters[t]?n.push(t+\"=\"+e.parameters[t]):n.push(t)})),t+=\"a=fmtp:\"+i+\" \"+n.join(\";\")+\"\\r\\n\"}return t},t.parseRtcpFb=function(e){const t=e.substring(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},t.writeRtcpFb=function(e){let t=\"\",i=e.payloadType;return void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((e=>{t+=\"a=rtcp-fb:\"+i+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"})),t},t.parseSsrcMedia=function(e){const t=e.indexOf(\" \"),i={ssrc:parseInt(e.substring(7,t),10)},n=e.indexOf(\":\",t);return n>-1?(i.attribute=e.substring(t+1,n),i.value=e.substring(n+1)):i.attribute=e.substring(t+1),i},t.parseSsrcGroup=function(e){const t=e.substring(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map((e=>parseInt(e,10)))}},t.getMid=function(e){const i=t.matchPrefix(e,\"a=mid:\")[0];if(i)return i.substring(6)},t.parseFingerprint=function(e){const t=e.substring(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1].toUpperCase()}},t.getDtlsParameters=function(e,i){return{role:\"auto\",fingerprints:t.matchPrefix(e+i,\"a=fingerprint:\").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){let i=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach((e=>{i+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"})),i},t.parseCryptoLine=function(e){const t=e.substring(9).split(\" \");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},t.writeCryptoLine=function(e){return\"a=crypto:\"+e.tag+\" \"+e.cryptoSuite+\" \"+(\"object\"==typeof e.keyParams?t.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?\" \"+e.sessionParams.join(\" \"):\"\")+\"\\r\\n\"},t.parseCryptoKeyParams=function(e){if(0!==e.indexOf(\"inline:\"))return null;const t=e.substring(7).split(\"|\");return{keyMethod:\"inline\",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(\":\")[0]:void 0,mkiLength:t[2]?t[2].split(\":\")[1]:void 0}},t.writeCryptoKeyParams=function(e){return e.keyMethod+\":\"+e.keySalt+(e.lifeTime?\"|\"+e.lifeTime:\"\")+(e.mkiValue&&e.mkiLength?\"|\"+e.mkiValue+\":\"+e.mkiLength:\"\")},t.getCryptoParameters=function(e,i){return t.matchPrefix(e+i,\"a=crypto:\").map(t.parseCryptoLine)},t.getIceParameters=function(e,i){const n=t.matchPrefix(e+i,\"a=ice-ufrag:\")[0],r=t.matchPrefix(e+i,\"a=ice-pwd:\")[0];return n&&r?{usernameFragment:n.substring(12),password:r.substring(10)}:null},t.writeIceParameters=function(e){let t=\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\";return e.iceLite&&(t+=\"a=ice-lite\\r\\n\"),t},t.parseRtpParameters=function(e){const i={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=t.splitLines(e)[0].split(\" \");i.profile=n[2];for(let r=3;r<n.length;r++){const s=n[r],o=t.matchPrefix(e,\"a=rtpmap:\"+s+\" \")[0];if(o){const n=t.parseRtpMap(o),r=t.matchPrefix(e,\"a=fmtp:\"+s+\" \");switch(n.parameters=r.length?t.parseFmtp(r[0]):{},n.rtcpFeedback=t.matchPrefix(e,\"a=rtcp-fb:\"+s+\" \").map(t.parseRtcpFb),i.codecs.push(n),n.name.toUpperCase()){case\"RED\":case\"ULPFEC\":i.fecMechanisms.push(n.name.toUpperCase())}}}t.matchPrefix(e,\"a=extmap:\").forEach((e=>{i.headerExtensions.push(t.parseExtmap(e))}));const r=t.matchPrefix(e,\"a=rtcp-fb:* \").map(t.parseRtcpFb);return i.codecs.forEach((e=>{r.forEach((t=>{e.rtcpFeedback.find((e=>e.type===t.type&&e.parameter===t.parameter))||e.rtcpFeedback.push(t)}))})),i},t.writeRtpDescription=function(e,i){let n=\"\";n+=\"m=\"+e+\" \",n+=i.codecs.length>0?\"9\":\"0\",n+=\" \"+(i.profile||\"UDP/TLS/RTP/SAVPF\")+\" \",n+=i.codecs.map((e=>void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType)).join(\" \")+\"\\r\\n\",n+=\"c=IN IP4 0.0.0.0\\r\\n\",n+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",i.codecs.forEach((e=>{n+=t.writeRtpMap(e),n+=t.writeFmtp(e),n+=t.writeRtcpFb(e)}));let r=0;return i.codecs.forEach((e=>{e.maxptime>r&&(r=e.maxptime)})),r>0&&(n+=\"a=maxptime:\"+r+\"\\r\\n\"),i.headerExtensions&&i.headerExtensions.forEach((e=>{n+=t.writeExtmap(e)})),n},t.parseRtpEncodingParameters=function(e){const i=[],n=t.parseRtpParameters(e),r=-1!==n.fecMechanisms.indexOf(\"RED\"),s=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),o=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute)),a=o.length>0&&o[0].ssrc;let c;const d=t.matchPrefix(e,\"a=ssrc-group:FID\").map((e=>e.substring(17).split(\" \").map((e=>parseInt(e,10)))));d.length>0&&d[0].length>1&&d[0][0]===a&&(c=d[0][1]),n.codecs.forEach((e=>{if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){let t={ssrc:a,codecPayloadType:parseInt(e.parameters.apt,10)};a&&c&&(t.rtx={ssrc:c}),i.push(t),r&&(t=JSON.parse(JSON.stringify(t)),t.fec={ssrc:a,mechanism:s?\"red+ulpfec\":\"red\"},i.push(t))}})),0===i.length&&a&&i.push({ssrc:a});let l=t.matchPrefix(e,\"b=\");return l.length&&(l=0===l[0].indexOf(\"b=TIAS:\")?parseInt(l[0].substring(7),10):0===l[0].indexOf(\"b=AS:\")?1e3*parseInt(l[0].substring(5),10)*.95-16e3:void 0,i.forEach((e=>{e.maxBitrate=l}))),i},t.parseRtcpParameters=function(e){const i={},n=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute))[0];n&&(i.cname=n.value,i.ssrc=n.ssrc);const r=t.matchPrefix(e,\"a=rtcp-rsize\");i.reducedSize=r.length>0,i.compound=0===r.length;const s=t.matchPrefix(e,\"a=rtcp-mux\");return i.mux=s.length>0,i},t.writeRtcpParameters=function(e){let t=\"\";return e.reducedSize&&(t+=\"a=rtcp-rsize\\r\\n\"),e.mux&&(t+=\"a=rtcp-mux\\r\\n\"),void 0!==e.ssrc&&e.cname&&(t+=\"a=ssrc:\"+e.ssrc+\" cname:\"+e.cname+\"\\r\\n\"),t},t.parseMsid=function(e){let i;const n=t.matchPrefix(e,\"a=msid:\");if(1===n.length)return i=n[0].substring(7).split(\" \"),{stream:i[0],track:i[1]};const r=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"msid\"===e.attribute));return r.length>0?(i=r[0].value.split(\" \"),{stream:i[0],track:i[1]}):void 0},t.parseSctpDescription=function(e){const i=t.parseMLine(e),n=t.matchPrefix(e,\"a=max-message-size:\");let r;n.length>0&&(r=parseInt(n[0].substring(19),10)),isNaN(r)&&(r=65536);const s=t.matchPrefix(e,\"a=sctp-port:\");if(s.length>0)return{port:parseInt(s[0].substring(12),10),protocol:i.fmt,maxMessageSize:r};const o=t.matchPrefix(e,\"a=sctpmap:\");if(o.length>0){const e=o[0].substring(10).split(\" \");return{port:parseInt(e[0],10),protocol:e[1],maxMessageSize:r}}},t.writeSctpDescription=function(e,t){let i=[];return i=\"DTLS/SCTP\"!==e.protocol?[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.protocol+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctp-port:\"+t.port+\"\\r\\n\"]:[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.port+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctpmap:\"+t.port+\" \"+t.protocol+\" 65535\\r\\n\"],void 0!==t.maxMessageSize&&i.push(\"a=max-message-size:\"+t.maxMessageSize+\"\\r\\n\"),i.join(\"\")},t.generateSessionId=function(){return Math.random().toString().substr(2,22)},t.writeSessionBoilerplate=function(e,i,n){let r;const s=void 0!==i?i:2;r=e||t.generateSessionId();return\"v=0\\r\\no=\"+(n||\"thisisadapterortc\")+\" \"+r+\" \"+s+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},t.getDirection=function(e,i){const n=t.splitLines(e);for(let e=0;e<n.length;e++)switch(n[e]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return n[e].substring(2)}return i?t.getDirection(i):\"sendrecv\"},t.getKind=function(e){return t.splitLines(e)[0].split(\" \")[0].substring(2)},t.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},t.parseMLine=function(e){const i=t.splitLines(e)[0].substring(2).split(\" \");return{kind:i[0],port:parseInt(i[1],10),protocol:i[2],fmt:i.slice(3).join(\" \")}},t.parseOLine=function(e){const i=t.matchPrefix(e,\"o=\")[0].substring(2).split(\" \");return{username:i[0],sessionId:i[1],sessionVersion:parseInt(i[2],10),netType:i[3],addressType:i[4],address:i[5]}},t.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;const i=t.splitLines(e);for(let e=0;e<i.length;e++)if(i[e].length<2||\"=\"!==i[e].charAt(1))return!1;return!0},e.exports=t}(z);var X=z.exports,Q=J(X),Z=e({__proto__:null,default:Q},[X]);function $(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)return;const t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if(\"object\"==typeof e&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){const i=new t(e),n=Q.parseCandidate(e.candidate),r=Object.assign(i,n);return r.toJSON=function(){return{candidate:r.candidate,sdpMid:r.sdpMid,sdpMLineIndex:r.sdpMLineIndex,usernameFragment:r.usernameFragment}},r}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,r(e,\"icecandidate\",(t=>(t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t)))}function ee(e){!e.RTCIceCandidate||e.RTCIceCandidate&&\"relayProtocol\"in e.RTCIceCandidate.prototype||r(e,\"icecandidate\",(e=>{if(e.candidate){const t=Q.parseCandidate(e.candidate.candidate);\"relay\"===t.type&&(e.candidate.relayProtocol={0:\"tls\",1:\"tcp\",2:\"udp\"}[t.priority>>24])}return e}))}function te(e,t){if(!e.RTCPeerConnection)return;\"sctp\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp}});const i=function(e){if(!e||!e.sdp)return!1;const t=Q.splitSections(e.sdp);return t.shift(),t.some((e=>{const t=Q.parseMLine(e);return t&&\"application\"===t.kind&&-1!==t.protocol.indexOf(\"SCTP\")}))},n=function(e){const t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;const i=parseInt(t[1],10);return i!=i?-1:i},r=function(e){let i=65536;return\"firefox\"===t.browser&&(i=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),i},s=function(e,i){let n=65536;\"firefox\"===t.browser&&57===t.version&&(n=65535);const r=Q.matchPrefix(e.sdp,\"a=max-message-size:\");return r.length>0?n=parseInt(r[0].substr(19),10):\"firefox\"===t.browser&&-1!==i&&(n=2147483637),n},o=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,\"chrome\"===t.browser&&t.version>=76){const{sdpSemantics:e}=this.getConfiguration();\"plan-b\"===e&&Object.defineProperty(this,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(i(arguments[0])){const e=n(arguments[0]),t=r(e),i=s(arguments[0],e);let o;o=0===t&&0===i?Number.POSITIVE_INFINITY:0===t||0===i?Math.max(t,i):Math.min(t,i);const a={};Object.defineProperty(a,\"maxMessageSize\",{get:()=>o}),this._sctp=a}return o.apply(this,arguments)}}function ie(e){if(!e.RTCPeerConnection||!(\"createDataChannel\"in e.RTCPeerConnection.prototype))return;function t(e,t){const i=e.send;e.send=function(){const n=arguments[0],r=n.length||n.size||n.byteLength;if(\"open\"===e.readyState&&t.sctp&&r>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return i.apply(e,arguments)}}const i=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){const e=i.apply(this,arguments);return t(e,this),e},r(e,\"datachannel\",(e=>(t(e.channel,e.target),e)))}function ne(e){if(!e.RTCPeerConnection||\"connectionState\"in e.RTCPeerConnection.prototype)return;const t=e.RTCPeerConnection.prototype;Object.defineProperty(t,\"connectionState\",{get(){return{completed:\"connected\",checking:\"connecting\"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"onconnectionstatechange\",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener(\"connectionstatechange\",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener(\"connectionstatechange\",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),[\"setLocalDescription\",\"setRemoteDescription\"].forEach((e=>{const i=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;const i=new Event(\"connectionstatechange\",e);t.dispatchEvent(i)}return e},this.addEventListener(\"iceconnectionstatechange\",this._connectionstatechangepoly)),i.apply(this,arguments)}}))}function re(e,t){if(!e.RTCPeerConnection)return;if(\"chrome\"===t.browser&&t.version>=71)return;if(\"safari\"===t.browser&&t.version>=605)return;const i=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf(\"\\na=extmap-allow-mixed\")){const i=t.sdp.split(\"\\n\").filter((e=>\"a=extmap-allow-mixed\"!==e.trim())).join(\"\\n\");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:i}):t.sdp=i}return i.apply(this,arguments)}}function se(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.addIceCandidate;i&&0!==i.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?(\"chrome\"===t.browser&&t.version<78||\"firefox\"===t.browser&&t.version<68||\"safari\"===t.browser)&&arguments[0]&&\"\"===arguments[0].candidate?Promise.resolve():i.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())})}function oe(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.setLocalDescription;i&&0!==i.length&&(e.RTCPeerConnection.prototype.setLocalDescription=function(){let e=arguments[0]||{};if(\"object\"!=typeof e||e.type&&e.sdp)return i.apply(this,arguments);if(e={type:e.type,sdp:e.sdp},!e.type)switch(this.signalingState){case\"stable\":case\"have-local-offer\":case\"have-remote-pranswer\":e.type=\"offer\";break;default:e.type=\"answer\"}if(e.sdp||\"offer\"!==e.type&&\"answer\"!==e.type)return i.apply(this,[e]);return(\"offer\"===e.type?this.createOffer:this.createAnswer).apply(this).then((e=>i.apply(this,[e])))})}var ae=Object.freeze({__proto__:null,removeExtmapAllowMixed:re,shimAddIceCandidateNullOrEmpty:se,shimConnectionState:ne,shimMaxMessageSize:te,shimParameterlessSetLocalDescription:oe,shimRTCIceCandidate:$,shimRTCIceCandidateRelayProtocol:ee,shimSendThrowTypeError:ie});!function({window:e}={},t={shimChrome:!0,shimFirefox:!0,shimSafari:!0}){const i=a,r=function(e){const t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser=\"Not a browser.\",t;const{navigator:i}=e;if(i.mozGetUserMedia)t.browser=\"firefox\",t.version=n(i.userAgent,/Firefox\\/(\\d+)\\./,1);else if(i.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection)t.browser=\"chrome\",t.version=n(i.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else{if(!e.RTCPeerConnection||!i.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return t.browser=\"Not a supported browser.\",t;t.browser=\"safari\",t.version=n(i.userAgent,/AppleWebKit\\/(\\d+)\\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&\"currentDirection\"in e.RTCRtpTransceiver.prototype}return t}(e),c={browserDetails:r,commonShim:ae,extractVersion:n,disableLog:s,disableWarnings:o,sdp:Z};switch(r.browser){case\"chrome\":if(!I||!C||!t.shimChrome)return i(\"Chrome shim is not included in this adapter release.\"),c;if(null===r.version)return i(\"Chrome shim can not determine version, not shimming.\"),c;i(\"adapter.js shimming chrome.\"),c.browserShim=I,se(e,r),oe(e),_(e,r),E(e),C(e,r),m(e),R(e,r),f(e),g(e),T(e),v(e,r),$(e),ee(e),ne(e),te(e,r),ie(e),re(e,r);break;case\"firefox\":if(!U||!b||!t.shimFirefox)return i(\"Firefox shim is not included in this adapter release.\"),c;i(\"adapter.js shimming firefox.\"),c.browserShim=U,se(e,r),oe(e),y(e,r),b(e,r),A(e),N(e),w(e),O(e),D(e),P(e),L(e),k(e),M(e),$(e),ne(e),te(e,r),ie(e);break;case\"safari\":if(!Y||!t.shimSafari)return i(\"Safari shim is not included in this adapter release.\"),c;i(\"adapter.js shimming safari.\"),c.browserShim=Y,se(e,r),oe(e),G(e),H(e),F(e),x(e),V(e),W(e),B(e),K(e),$(e),ee(e),te(e,r),ie(e),re(e,r);break;default:i(\"Unsupported browser!\")}}({window:\"undefined\"==typeof window?void 0:window});var ce=function(e){try{return!!e()}catch(e){return!0}},de=!ce((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")})),le=de,he=Function.prototype,ue=he.call,pe=le&&he.bind.bind(ue,ue),_e=le?pe:function(e){return function(){return ue.apply(e,arguments)}},Ee=_e({}.isPrototypeOf),me=function(e){return e&&e.Math==Math&&e},fe=me(\"object\"==typeof globalThis&&globalThis)||me(\"object\"==typeof window&&window)||me(\"object\"==typeof self&&self)||me(\"object\"==typeof q&&q)||function(){return this}()||q||Function(\"return this\")(),ge=de,Te=Function.prototype,Se=Te.apply,Re=Te.call,Ce=\"object\"==typeof Reflect&&Reflect.apply||(ge?Re.bind(Se):function(){return Re.apply(Se,arguments)}),ve=_e,Ie=ve({}.toString),ye=ve(\"\".slice),Ae=function(e){return ye(Ie(e),8,-1)},be=Ae,we=_e,Oe=function(e){if(\"Function\"===be(e))return we(e)},Ne=\"object\"==typeof document&&document.all,De={all:Ne,IS_HTMLDDA:void 0===Ne&&void 0!==Ne},Pe=De.all,Le=De.IS_HTMLDDA?function(e){return\"function\"==typeof e||e===Pe}:function(e){return\"function\"==typeof e},ke={},Me=!ce((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Ue=de,xe=Function.prototype.call,Ve=Ue?xe.bind(xe):function(){return xe.apply(xe,arguments)},Fe={},Be={}.propertyIsEnumerable,je=Object.getOwnPropertyDescriptor,Ge=je&&!Be.call({1:2},1);Fe.f=Ge?function(e){var t=je(this,e);return!!t&&t.enumerable}:Be;var We,He,Ke=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},Ye=ce,qe=Ae,Je=Object,ze=_e(\"\".split),Xe=Ye((function(){return!Je(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==qe(e)?ze(e,\"\"):Je(e)}:Je,Qe=function(e){return null==e},Ze=Qe,$e=TypeError,et=function(e){if(Ze(e))throw $e(\"Can't call method on \"+e);return e},tt=Xe,it=et,nt=function(e){return tt(it(e))},rt=Le,st=De.all,ot=De.IS_HTMLDDA?function(e){return\"object\"==typeof e?null!==e:rt(e)||e===st}:function(e){return\"object\"==typeof e?null!==e:rt(e)},at={},ct=at,dt=fe,lt=Le,ht=function(e){return lt(e)?e:void 0},ut=function(e,t){return arguments.length<2?ht(ct[e])||ht(dt[e]):ct[e]&&ct[e][t]||dt[e]&&dt[e][t]},pt=\"undefined\"!=typeof navigator&&String(navigator.userAgent)||\"\",_t=fe,Et=pt,mt=_t.process,ft=_t.Deno,gt=mt&&mt.versions||ft&&ft.version,Tt=gt&&gt.v8;Tt&&(He=(We=Tt.split(\".\"))[0]>0&&We[0]<4?1:+(We[0]+We[1])),!He&&Et&&(!(We=Et.match(/Edge\\/(\\d+)/))||We[1]>=74)&&(We=Et.match(/Chrome\\/(\\d+)/))&&(He=+We[1]);var St=He,Rt=St,Ct=ce,vt=fe.String,It=!!Object.getOwnPropertySymbols&&!Ct((function(){var e=Symbol();return!vt(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Rt&&Rt<41})),yt=It&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator,At=ut,bt=Le,wt=Ee,Ot=Object,Nt=yt?function(e){return\"symbol\"==typeof e}:function(e){var t=At(\"Symbol\");return bt(t)&&wt(t.prototype,Ot(e))},Dt=String,Pt=function(e){try{return Dt(e)}catch(e){return\"Object\"}},Lt=Le,kt=Pt,Mt=TypeError,Ut=function(e){if(Lt(e))return e;throw Mt(kt(e)+\" is not a function\")},xt=Ut,Vt=Qe,Ft=function(e,t){var i=e[t];return Vt(i)?void 0:xt(i)},Bt=Ve,jt=Le,Gt=ot,Wt=TypeError,Ht={exports:{}},Kt=fe,Yt=Object.defineProperty,qt=function(e,t){try{Yt(Kt,e,{value:t,configurable:!0,writable:!0})}catch(i){Kt[e]=t}return t},Jt=\"__core-js_shared__\",zt=fe[Jt]||qt(Jt,{}),Xt=zt;(Ht.exports=function(e,t){return Xt[e]||(Xt[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.31.1\",mode:\"pure\",copyright:\"© 2014-2023 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.31.1/LICENSE\",source:\"https://github.com/zloirock/core-js\"});var Qt=Ht.exports,Zt=et,$t=Object,ei=function(e){return $t(Zt(e))},ti=ei,ii=_e({}.hasOwnProperty),ni=Object.hasOwn||function(e,t){return ii(ti(e),t)},ri=_e,si=0,oi=Math.random(),ai=ri(1..toString),ci=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+ai(++si+oi,36)},di=Qt,li=ni,hi=ci,ui=It,pi=yt,_i=fe.Symbol,Ei=di(\"wks\"),mi=pi?_i.for||_i:_i&&_i.withoutSetter||hi,fi=function(e){return li(Ei,e)||(Ei[e]=ui&&li(_i,e)?_i[e]:mi(\"Symbol.\"+e)),Ei[e]},gi=Ve,Ti=ot,Si=Nt,Ri=Ft,Ci=function(e,t){var i,n;if(\"string\"===t&&jt(i=e.toString)&&!Gt(n=Bt(i,e)))return n;if(jt(i=e.valueOf)&&!Gt(n=Bt(i,e)))return n;if(\"string\"!==t&&jt(i=e.toString)&&!Gt(n=Bt(i,e)))return n;throw Wt(\"Can't convert object to primitive value\")},vi=TypeError,Ii=fi(\"toPrimitive\"),yi=function(e,t){if(!Ti(e)||Si(e))return e;var i,n=Ri(e,Ii);if(n){if(void 0===t&&(t=\"default\"),i=gi(n,e,t),!Ti(i)||Si(i))return i;throw vi(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),Ci(e,t)},Ai=Nt,bi=function(e){var t=yi(e,\"string\");return Ai(t)?t:t+\"\"},wi=ot,Oi=fe.document,Ni=wi(Oi)&&wi(Oi.createElement),Di=function(e){return Ni?Oi.createElement(e):{}},Pi=Di,Li=!Me&&!ce((function(){return 7!=Object.defineProperty(Pi(\"div\"),\"a\",{get:function(){return 7}}).a})),ki=Me,Mi=Ve,Ui=Fe,xi=Ke,Vi=nt,Fi=bi,Bi=ni,ji=Li,Gi=Object.getOwnPropertyDescriptor;ke.f=ki?Gi:function(e,t){if(e=Vi(e),t=Fi(t),ji)try{return Gi(e,t)}catch(e){}if(Bi(e,t))return xi(!Mi(Ui.f,e,t),e[t])};var Wi=ce,Hi=Le,Ki=/#|\\.prototype\\./,Yi=function(e,t){var i=Ji[qi(e)];return i==Xi||i!=zi&&(Hi(t)?Wi(t):!!t)},qi=Yi.normalize=function(e){return String(e).replace(Ki,\".\").toLowerCase()},Ji=Yi.data={},zi=Yi.NATIVE=\"N\",Xi=Yi.POLYFILL=\"P\",Qi=Yi,Zi=Ut,$i=de,en=Oe(Oe.bind),tn=function(e,t){return Zi(e),void 0===t?e:$i?en(e,t):function(){return e.apply(t,arguments)}},nn={},rn=Me&&ce((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype})),sn=ot,on=String,an=TypeError,cn=function(e){if(sn(e))return e;throw an(on(e)+\" is not an object\")},dn=Me,ln=Li,hn=rn,un=cn,pn=bi,_n=TypeError,En=Object.defineProperty,mn=Object.getOwnPropertyDescriptor,fn=\"enumerable\",gn=\"configurable\",Tn=\"writable\";nn.f=dn?hn?function(e,t,i){if(un(e),t=pn(t),un(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&Tn in i&&!i[Tn]){var n=mn(e,t);n&&n[Tn]&&(e[t]=i.value,i={configurable:gn in i?i[gn]:n[gn],enumerable:fn in i?i[fn]:n[fn],writable:!1})}return En(e,t,i)}:En:function(e,t,i){if(un(e),t=pn(t),un(i),ln)try{return En(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw _n(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e};var Sn=nn,Rn=Ke,Cn=Me?function(e,t,i){return Sn.f(e,t,Rn(1,i))}:function(e,t,i){return e[t]=i,e},vn=fe,In=Ce,yn=Oe,An=Le,bn=ke.f,wn=Qi,On=at,Nn=tn,Dn=Cn,Pn=ni,Ln=function(e){var t=function(i,n,r){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(i);case 2:return new e(i,n)}return new e(i,n,r)}return In(e,this,arguments)};return t.prototype=e.prototype,t},kn=function(e,t){var i,n,r,s,o,a,c,d,l,h=e.target,u=e.global,p=e.stat,_=e.proto,E=u?vn:p?vn[h]:(vn[h]||{}).prototype,m=u?On:On[h]||Dn(On,h,{})[h],f=m.prototype;for(s in t)n=!(i=wn(u?s:h+(p?\".\":\"#\")+s,e.forced))&&E&&Pn(E,s),a=m[s],n&&(c=e.dontCallGetSet?(l=bn(E,s))&&l.value:E[s]),o=n&&c?c:t[s],n&&typeof a==typeof o||(d=e.bind&&n?Nn(o,vn):e.wrap&&n?Ln(o):_&&An(o)?yn(o):o,(e.sham||o&&o.sham||a&&a.sham)&&Dn(d,\"sham\",!0),Dn(m,s,d),_&&(Pn(On,r=h+\"Prototype\")||Dn(On,r,{}),Dn(On[r],s,o),e.real&&f&&(i||!f[s])&&Dn(f,s,o)))},Mn=Math.ceil,Un=Math.floor,xn=Math.trunc||function(e){var t=+e;return(t>0?Un:Mn)(t)},Vn=function(e){var t=+e;return t!=t||0===t?0:xn(t)},Fn=Vn,Bn=Math.max,jn=Math.min,Gn=function(e,t){var i=Fn(e);return i<0?Bn(i+t,0):jn(i,t)},Wn=Vn,Hn=Math.min,Kn=function(e){return e>0?Hn(Wn(e),9007199254740991):0},Yn=function(e){return Kn(e.length)},qn=nt,Jn=Gn,zn=Yn,Xn=function(e){return function(t,i,n){var r,s=qn(t),o=zn(s),a=Jn(n,o);if(e&&i!=i){for(;o>a;)if((r=s[a++])!=r)return!0}else for(;o>a;a++)if((e||a in s)&&s[a]===i)return e||a||0;return!e&&-1}},Qn={includes:Xn(!0),indexOf:Xn(!1)},Zn=Qn.includes;kn({target:\"Array\",proto:!0,forced:ce((function(){return!Array(1).includes()}))},{includes:function(e){return Zn(this,e,arguments.length>1?arguments[1]:void 0)}});var $n=at,er=function(e){return $n[e+\"Prototype\"]},tr=er(\"Array\").includes,ir=ot,nr=Ae,rr=fi(\"match\"),sr=function(e){var t;return ir(e)&&(void 0!==(t=e[rr])?!!t:\"RegExp\"==nr(e))},or=TypeError,ar={};ar[fi(\"toStringTag\")]=\"z\";var cr=\"[object z]\"===String(ar),dr=cr,lr=Le,hr=Ae,ur=fi(\"toStringTag\"),pr=Object,_r=\"Arguments\"==hr(function(){return arguments}()),Er=dr?hr:function(e){var t,i,n;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=pr(e),ur))?i:_r?hr(t):\"Object\"==(n=hr(t))&&lr(t.callee)?\"Arguments\":n},mr=Er,fr=String,gr=function(e){if(\"Symbol\"===mr(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return fr(e)},Tr=fi(\"match\"),Sr=kn,Rr=function(e){if(sr(e))throw or(\"The method doesn't accept regular expressions\");return e},Cr=et,vr=gr,Ir=function(e){var t=/./;try{\"/./\"[e](t)}catch(i){try{return t[Tr]=!1,\"/./\"[e](t)}catch(e){}}return!1},yr=_e(\"\".indexOf);Sr({target:\"String\",proto:!0,forced:!Ir(\"includes\")},{includes:function(e){return!!~yr(vr(Cr(this)),vr(Rr(e)),arguments.length>1?arguments[1]:void 0)}});var Ar=er(\"String\").includes,br=Ee,wr=tr,Or=Ar,Nr=Array.prototype,Dr=String.prototype,Pr=J((function(e){var t=e.includes;return e===Nr||br(Nr,e)&&t===Nr.includes?wr:\"string\"==typeof e||e===Dr||br(Dr,e)&&t===Dr.includes?Or:t})),Lr={exports:{}},kr=kn,Mr=Me,Ur=nn.f;kr({target:\"Object\",stat:!0,forced:Object.defineProperty!==Ur,sham:!Mr},{defineProperty:Ur});var xr=at.Object,Vr=Lr.exports=function(e,t,i){return xr.defineProperty(e,t,i)};xr.defineProperty.sham&&(Vr.sham=!0);var Fr=J(Lr.exports),Br=Ae,jr=Array.isArray||function(e){return\"Array\"==Br(e)},Gr=TypeError,Wr=bi,Hr=nn,Kr=Ke,Yr=function(e,t,i){var n=Wr(t);n in e?Hr.f(e,n,Kr(0,i)):e[n]=i},qr=Le,Jr=zt,zr=_e(Function.toString);qr(Jr.inspectSource)||(Jr.inspectSource=function(e){return zr(e)});var Xr=Jr.inspectSource,Qr=_e,Zr=ce,$r=Le,es=Er,ts=Xr,is=function(){},ns=[],rs=ut(\"Reflect\",\"construct\"),ss=/^\\s*(?:class|function)\\b/,os=Qr(ss.exec),as=!ss.exec(is),cs=function(e){if(!$r(e))return!1;try{return rs(is,ns,e),!0}catch(e){return!1}},ds=function(e){if(!$r(e))return!1;switch(es(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return as||!!os(ss,ts(e))}catch(e){return!0}};ds.sham=!0;var ls=!rs||Zr((function(){var e;return cs(cs.call)||!cs(Object)||!cs((function(){e=!0}))||e}))?ds:cs,hs=jr,us=ls,ps=ot,_s=fi(\"species\"),Es=Array,ms=function(e){var t;return hs(e)&&(t=e.constructor,(us(t)&&(t===Es||hs(t.prototype))||ps(t)&&null===(t=t[_s]))&&(t=void 0)),void 0===t?Es:t},fs=function(e,t){return new(ms(e))(0===t?0:t)},gs=ce,Ts=St,Ss=fi(\"species\"),Rs=kn,Cs=ce,vs=jr,Is=ot,ys=ei,As=Yn,bs=function(e){if(e>9007199254740991)throw Gr(\"Maximum allowed index exceeded\");return e},ws=Yr,Os=fs,Ns=function(e){return Ts>=51||!gs((function(){var t=[];return(t.constructor={})[Ss]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Ds=St,Ps=fi(\"isConcatSpreadable\"),Ls=Ds>=51||!Cs((function(){var e=[];return e[Ps]=!1,e.concat()[0]!==e})),ks=function(e){if(!Is(e))return!1;var t=e[Ps];return void 0!==t?!!t:vs(e)};Rs({target:\"Array\",proto:!0,arity:1,forced:!Ls||!Ns(\"concat\")},{concat:function(e){var t,i,n,r,s,o=ys(this),a=Os(o,0),c=0;for(t=-1,n=arguments.length;t<n;t++)if(ks(s=-1===t?o:arguments[t]))for(r=As(s),bs(c+r),i=0;i<r;i++,c++)i in s&&ws(a,c,s[i]);else bs(c+1),ws(a,c++,s);return a.length=c,a}});var Ms={},Us={},xs=ni,Vs=nt,Fs=Qn.indexOf,Bs=Us,js=_e([].push),Gs=function(e,t){var i,n=Vs(e),r=0,s=[];for(i in n)!xs(Bs,i)&&xs(n,i)&&js(s,i);for(;t.length>r;)xs(n,i=t[r++])&&(~Fs(s,i)||js(s,i));return s},Ws=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"],Hs=Gs,Ks=Ws,Ys=Object.keys||function(e){return Hs(e,Ks)},qs=Me,Js=rn,zs=nn,Xs=cn,Qs=nt,Zs=Ys;Ms.f=qs&&!Js?Object.defineProperties:function(e,t){Xs(e);for(var i,n=Qs(t),r=Zs(t),s=r.length,o=0;s>o;)zs.f(e,i=r[o++],n[i]);return e};var $s,eo=ut(\"document\",\"documentElement\"),to=ci,io=Qt(\"keys\"),no=function(e){return io[e]||(io[e]=to(e))},ro=cn,so=Ms,oo=Ws,ao=Us,co=eo,lo=Di,ho=\"prototype\",uo=\"script\",po=no(\"IE_PROTO\"),_o=function(){},Eo=function(e){return\"<\"+uo+\">\"+e+\"</\"+uo+\">\"},mo=function(e){e.write(Eo(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},fo=function(){try{$s=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t,i;fo=\"undefined\"!=typeof document?document.domain&&$s?mo($s):(t=lo(\"iframe\"),i=\"java\"+uo+\":\",t.style.display=\"none\",co.appendChild(t),t.src=String(i),(e=t.contentWindow.document).open(),e.write(Eo(\"document.F=Object\")),e.close(),e.F):mo($s);for(var n=oo.length;n--;)delete fo[ho][oo[n]];return fo()};ao[po]=!0;var go=Object.create||function(e,t){var i;return null!==e?(_o[ho]=ro(e),i=new _o,_o[ho]=null,i[po]=e):i=fo(),void 0===t?i:so.f(i,t)},To={},So=Gs,Ro=Ws.concat(\"length\",\"prototype\");To.f=Object.getOwnPropertyNames||function(e){return So(e,Ro)};var Co={},vo=Gn,Io=Yn,yo=Yr,Ao=Array,bo=Math.max,wo=function(e,t,i){for(var n=Io(e),r=vo(t,n),s=vo(void 0===i?n:i,n),o=Ao(bo(s-r,0)),a=0;r<s;r++,a++)yo(o,a,e[r]);return o.length=a,o},Oo=Ae,No=nt,Do=To.f,Po=wo,Lo=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];Co.f=function(e){return Lo&&\"Window\"==Oo(e)?function(e){try{return Do(e)}catch(e){return Po(Lo)}}(e):Do(No(e))};var ko={};ko.f=Object.getOwnPropertySymbols;var Mo=Cn,Uo=function(e,t,i,n){return n&&n.enumerable?e[t]=i:Mo(e,t,i),e},xo=nn,Vo=function(e,t,i){return xo.f(e,t,i)},Fo={},Bo=fi;Fo.f=Bo;var jo,Go,Wo,Ho=at,Ko=ni,Yo=Fo,qo=nn.f,Jo=function(e){var t=Ho.Symbol||(Ho.Symbol={});Ko(t,e)||qo(t,e,{value:Yo.f(e)})},zo=Ve,Xo=ut,Qo=fi,Zo=Uo,$o=function(){var e=Xo(\"Symbol\"),t=e&&e.prototype,i=t&&t.valueOf,n=Qo(\"toPrimitive\");t&&!t[n]&&Zo(t,n,(function(e){return zo(i,this)}),{arity:1})},ea=Er,ta=cr?{}.toString:function(){return\"[object \"+ea(this)+\"]\"},ia=cr,na=nn.f,ra=Cn,sa=ni,oa=ta,aa=fi(\"toStringTag\"),ca=function(e,t,i,n){if(e){var r=i?e:e.prototype;sa(r,aa)||na(r,aa,{configurable:!0,value:t}),n&&!ia&&ra(r,\"toString\",oa)}},da=Le,la=fe.WeakMap,ha=da(la)&&/native code/.test(String(la)),ua=fe,pa=ot,_a=Cn,Ea=ni,ma=zt,fa=no,ga=Us,Ta=\"Object already initialized\",Sa=ua.TypeError,Ra=ua.WeakMap;if(ha||ma.state){var Ca=ma.state||(ma.state=new Ra);Ca.get=Ca.get,Ca.has=Ca.has,Ca.set=Ca.set,jo=function(e,t){if(Ca.has(e))throw Sa(Ta);return t.facade=e,Ca.set(e,t),t},Go=function(e){return Ca.get(e)||{}},Wo=function(e){return Ca.has(e)}}else{var va=fa(\"state\");ga[va]=!0,jo=function(e,t){if(Ea(e,va))throw Sa(Ta);return t.facade=e,_a(e,va,t),t},Go=function(e){return Ea(e,va)?e[va]:{}},Wo=function(e){return Ea(e,va)}}var Ia={set:jo,get:Go,has:Wo,enforce:function(e){return Wo(e)?Go(e):jo(e,{})},getterFor:function(e){return function(t){var i;if(!pa(t)||(i=Go(t)).type!==e)throw Sa(\"Incompatible receiver, \"+e+\" required\");return i}}},ya=tn,Aa=Xe,ba=ei,wa=Yn,Oa=fs,Na=_e([].push),Da=function(e){var t=1==e,i=2==e,n=3==e,r=4==e,s=6==e,o=7==e,a=5==e||s;return function(c,d,l,h){for(var u,p,_=ba(c),E=Aa(_),m=ya(d,l),f=wa(E),g=0,T=h||Oa,S=t?T(c,f):i||o?T(c,0):void 0;f>g;g++)if((a||g in E)&&(p=m(u=E[g],g,_),e))if(t)S[g]=p;else if(p)switch(e){case 3:return!0;case 5:return u;case 6:return g;case 2:Na(S,u)}else switch(e){case 4:return!1;case 7:Na(S,u)}return s?-1:n||r?r:S}},Pa={forEach:Da(0),map:Da(1),filter:Da(2),some:Da(3),every:Da(4),find:Da(5),findIndex:Da(6),filterReject:Da(7)},La=kn,ka=fe,Ma=Ve,Ua=_e,xa=Me,Va=It,Fa=ce,Ba=ni,ja=Ee,Ga=cn,Wa=nt,Ha=bi,Ka=gr,Ya=Ke,qa=go,Ja=Ys,za=To,Xa=Co,Qa=ko,Za=ke,$a=nn,ec=Ms,tc=Fe,ic=Uo,nc=Vo,rc=Qt,sc=Us,oc=ci,ac=fi,cc=Fo,dc=Jo,lc=$o,hc=ca,uc=Ia,pc=Pa.forEach,_c=no(\"hidden\"),Ec=\"Symbol\",mc=\"prototype\",fc=uc.set,gc=uc.getterFor(Ec),Tc=Object[mc],Sc=ka.Symbol,Rc=Sc&&Sc[mc],Cc=ka.TypeError,vc=ka.QObject,Ic=Za.f,yc=$a.f,Ac=Xa.f,bc=tc.f,wc=Ua([].push),Oc=rc(\"symbols\"),Nc=rc(\"op-symbols\"),Dc=rc(\"wks\"),Pc=!vc||!vc[mc]||!vc[mc].findChild,Lc=xa&&Fa((function(){return 7!=qa(yc({},\"a\",{get:function(){return yc(this,\"a\",{value:7}).a}})).a}))?function(e,t,i){var n=Ic(Tc,t);n&&delete Tc[t],yc(e,t,i),n&&e!==Tc&&yc(Tc,t,n)}:yc,kc=function(e,t){var i=Oc[e]=qa(Rc);return fc(i,{type:Ec,tag:e,description:t}),xa||(i.description=t),i},Mc=function(e,t,i){e===Tc&&Mc(Nc,t,i),Ga(e);var n=Ha(t);return Ga(i),Ba(Oc,n)?(i.enumerable?(Ba(e,_c)&&e[_c][n]&&(e[_c][n]=!1),i=qa(i,{enumerable:Ya(0,!1)})):(Ba(e,_c)||yc(e,_c,Ya(1,{})),e[_c][n]=!0),Lc(e,n,i)):yc(e,n,i)},Uc=function(e,t){Ga(e);var i=Wa(t),n=Ja(i).concat(Bc(i));return pc(n,(function(t){xa&&!Ma(xc,i,t)||Mc(e,t,i[t])})),e},xc=function(e){var t=Ha(e),i=Ma(bc,this,t);return!(this===Tc&&Ba(Oc,t)&&!Ba(Nc,t))&&(!(i||!Ba(this,t)||!Ba(Oc,t)||Ba(this,_c)&&this[_c][t])||i)},Vc=function(e,t){var i=Wa(e),n=Ha(t);if(i!==Tc||!Ba(Oc,n)||Ba(Nc,n)){var r=Ic(i,n);return!r||!Ba(Oc,n)||Ba(i,_c)&&i[_c][n]||(r.enumerable=!0),r}},Fc=function(e){var t=Ac(Wa(e)),i=[];return pc(t,(function(e){Ba(Oc,e)||Ba(sc,e)||wc(i,e)})),i},Bc=function(e){var t=e===Tc,i=Ac(t?Nc:Wa(e)),n=[];return pc(i,(function(e){!Ba(Oc,e)||t&&!Ba(Tc,e)||wc(n,Oc[e])})),n};Va||(Sc=function(){if(ja(Rc,this))throw Cc(\"Symbol is not a constructor\");var e=arguments.length&&void 0!==arguments[0]?Ka(arguments[0]):void 0,t=oc(e),i=function(e){this===Tc&&Ma(i,Nc,e),Ba(this,_c)&&Ba(this[_c],t)&&(this[_c][t]=!1),Lc(this,t,Ya(1,e))};return xa&&Pc&&Lc(Tc,t,{configurable:!0,set:i}),kc(t,e)},ic(Rc=Sc[mc],\"toString\",(function(){return gc(this).tag})),ic(Sc,\"withoutSetter\",(function(e){return kc(oc(e),e)})),tc.f=xc,$a.f=Mc,ec.f=Uc,Za.f=Vc,za.f=Xa.f=Fc,Qa.f=Bc,cc.f=function(e){return kc(ac(e),e)},xa&&nc(Rc,\"description\",{configurable:!0,get:function(){return gc(this).description}})),La({global:!0,constructor:!0,wrap:!0,forced:!Va,sham:!Va},{Symbol:Sc}),pc(Ja(Dc),(function(e){dc(e)})),La({target:Ec,stat:!0,forced:!Va},{useSetter:function(){Pc=!0},useSimple:function(){Pc=!1}}),La({target:\"Object\",stat:!0,forced:!Va,sham:!xa},{create:function(e,t){return void 0===t?qa(e):Uc(qa(e),t)},defineProperty:Mc,defineProperties:Uc,getOwnPropertyDescriptor:Vc}),La({target:\"Object\",stat:!0,forced:!Va},{getOwnPropertyNames:Fc}),lc(),hc(Sc,Ec),sc[_c]=!0;var jc=It&&!!Symbol.for&&!!Symbol.keyFor,Gc=kn,Wc=ut,Hc=ni,Kc=gr,Yc=Qt,qc=jc,Jc=Yc(\"string-to-symbol-registry\"),zc=Yc(\"symbol-to-string-registry\");Gc({target:\"Symbol\",stat:!0,forced:!qc},{for:function(e){var t=Kc(e);if(Hc(Jc,t))return Jc[t];var i=Wc(\"Symbol\")(t);return Jc[t]=i,zc[i]=t,i}});var Xc=kn,Qc=ni,Zc=Nt,$c=Pt,ed=jc,td=Qt(\"symbol-to-string-registry\");Xc({target:\"Symbol\",stat:!0,forced:!ed},{keyFor:function(e){if(!Zc(e))throw TypeError($c(e)+\" is not a symbol\");if(Qc(td,e))return td[e]}});var id=_e([].slice),nd=jr,rd=Le,sd=Ae,od=gr,ad=_e([].push),cd=kn,dd=ut,ld=Ce,hd=Ve,ud=_e,pd=ce,_d=Le,Ed=Nt,md=id,fd=function(e){if(rd(e))return e;if(nd(e)){for(var t=e.length,i=[],n=0;n<t;n++){var r=e[n];\"string\"==typeof r?ad(i,r):\"number\"!=typeof r&&\"Number\"!=sd(r)&&\"String\"!=sd(r)||ad(i,od(r))}var s=i.length,o=!0;return function(e,t){if(o)return o=!1,t;if(nd(this))return t;for(var n=0;n<s;n++)if(i[n]===e)return t}}},gd=It,Td=String,Sd=dd(\"JSON\",\"stringify\"),Rd=ud(/./.exec),Cd=ud(\"\".charAt),vd=ud(\"\".charCodeAt),Id=ud(\"\".replace),yd=ud(1..toString),Ad=/[\\uD800-\\uDFFF]/g,bd=/^[\\uD800-\\uDBFF]$/,wd=/^[\\uDC00-\\uDFFF]$/,Od=!gd||pd((function(){var e=dd(\"Symbol\")();return\"[null]\"!=Sd([e])||\"{}\"!=Sd({a:e})||\"{}\"!=Sd(Object(e))})),Nd=pd((function(){return'\"\\\\udf06\\\\ud834\"'!==Sd(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==Sd(\"\\udead\")})),Dd=function(e,t){var i=md(arguments),n=fd(t);if(_d(n)||void 0!==e&&!Ed(e))return i[1]=function(e,t){if(_d(n)&&(t=hd(n,this,Td(e),t)),!Ed(t))return t},ld(Sd,null,i)},Pd=function(e,t,i){var n=Cd(i,t-1),r=Cd(i,t+1);return Rd(bd,e)&&!Rd(wd,r)||Rd(wd,e)&&!Rd(bd,n)?\"\\\\u\"+yd(vd(e,0),16):e};Sd&&cd({target:\"JSON\",stat:!0,arity:3,forced:Od||Nd},{stringify:function(e,t,i){var n=md(arguments),r=ld(Od?Dd:Sd,null,n);return Nd&&\"string\"==typeof r?Id(r,Ad,Pd):r}});var Ld=ko,kd=ei;kn({target:\"Object\",stat:!0,forced:!It||ce((function(){Ld.f(1)}))},{getOwnPropertySymbols:function(e){var t=Ld.f;return t?t(kd(e)):[]}}),Jo(\"asyncIterator\"),Jo(\"hasInstance\"),Jo(\"isConcatSpreadable\"),Jo(\"iterator\"),Jo(\"match\"),Jo(\"matchAll\"),Jo(\"replace\"),Jo(\"search\"),Jo(\"species\"),Jo(\"split\");var Md=$o;Jo(\"toPrimitive\"),Md();var Ud=ut,xd=ca;Jo(\"toStringTag\"),xd(Ud(\"Symbol\"),\"Symbol\"),Jo(\"unscopables\"),ca(fe.JSON,\"JSON\",!0);var Vd,Fd,Bd,jd=at.Symbol,Gd={},Wd=Me,Hd=ni,Kd=Function.prototype,Yd=Wd&&Object.getOwnPropertyDescriptor,qd=Hd(Kd,\"name\"),Jd={EXISTS:qd,PROPER:qd&&\"something\"===function(){}.name,CONFIGURABLE:qd&&(!Wd||Wd&&Yd(Kd,\"name\").configurable)},zd=!ce((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Xd=ni,Qd=Le,Zd=ei,$d=zd,el=no(\"IE_PROTO\"),tl=Object,il=tl.prototype,nl=$d?tl.getPrototypeOf:function(e){var t=Zd(e);if(Xd(t,el))return t[el];var i=t.constructor;return Qd(i)&&t instanceof i?i.prototype:t instanceof tl?il:null},rl=ce,sl=Le,ol=ot,al=go,cl=nl,dl=Uo,ll=fi(\"iterator\"),hl=!1;[].keys&&(\"next\"in(Bd=[].keys())?(Fd=cl(cl(Bd)))!==Object.prototype&&(Vd=Fd):hl=!0);var ul=!ol(Vd)||rl((function(){var e={};return Vd[ll].call(e)!==e}));sl((Vd=ul?{}:al(Vd))[ll])||dl(Vd,ll,(function(){return this}));var pl={IteratorPrototype:Vd,BUGGY_SAFARI_ITERATORS:hl},_l=pl.IteratorPrototype,El=go,ml=Ke,fl=ca,gl=Gd,Tl=function(){return this},Sl=_e,Rl=Ut,Cl=Le,vl=String,Il=TypeError,yl=function(e,t,i){try{return Sl(Rl(Object.getOwnPropertyDescriptor(e,t)[i]))}catch(e){}},Al=cn,bl=function(e){if(\"object\"==typeof e||Cl(e))return e;throw Il(\"Can't set \"+vl(e)+\" as a prototype\")},wl=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=yl(Object.prototype,\"__proto__\",\"set\"))(i,[]),t=i instanceof Array}catch(e){}return function(i,n){return Al(i),bl(n),t?e(i,n):i.__proto__=n,i}}():void 0),Ol=kn,Nl=Ve,Dl=Jd,Pl=function(e,t,i,n){var r=t+\" Iterator\";return e.prototype=El(_l,{next:ml(+!n,i)}),fl(e,r,!1,!0),gl[r]=Tl,e},Ll=nl,kl=ca,Ml=Uo,Ul=Gd,xl=pl,Vl=Dl.PROPER,Fl=xl.BUGGY_SAFARI_ITERATORS,Bl=fi(\"iterator\"),jl=\"keys\",Gl=\"values\",Wl=\"entries\",Hl=function(){return this},Kl=function(e,t,i,n,r,s,o){Pl(i,t,n);var a,c,d,l=function(e){if(e===r&&E)return E;if(!Fl&&e in p)return p[e];switch(e){case jl:case Gl:case Wl:return function(){return new i(this,e)}}return function(){return new i(this)}},h=t+\" Iterator\",u=!1,p=e.prototype,_=p[Bl]||p[\"@@iterator\"]||r&&p[r],E=!Fl&&_||l(r),m=\"Array\"==t&&p.entries||_;if(m&&(a=Ll(m.call(new e)))!==Object.prototype&&a.next&&(kl(a,h,!0,!0),Ul[h]=Hl),Vl&&r==Gl&&_&&_.name!==Gl&&(u=!0,E=function(){return Nl(_,this)}),r)if(c={values:l(Gl),keys:s?E:l(jl),entries:l(Wl)},o)for(d in c)(Fl||u||!(d in p))&&Ml(p,d,c[d]);else Ol({target:t,proto:!0,forced:Fl||u},c);return o&&p[Bl]!==E&&Ml(p,Bl,E,{name:r}),Ul[t]=E,c},Yl=function(e,t){return{value:e,done:t}},ql=nt,Jl=Gd,zl=Ia;nn.f;var Xl=Kl,Ql=Yl,Zl=\"Array Iterator\",$l=zl.set,eh=zl.getterFor(Zl);Xl(Array,\"Array\",(function(e,t){$l(this,{type:Zl,target:ql(e),index:0,kind:t})}),(function(){var e=eh(this),t=e.target,i=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,Ql(void 0,!0)):Ql(\"keys\"==i?n:\"values\"==i?t[n]:[n,t[n]],!1)}),\"values\"),Jl.Arguments=Jl.Array;var th={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},ih=fe,nh=Er,rh=Cn,sh=Gd,oh=fi(\"toStringTag\");for(var ah in th){var ch=ih[ah],dh=ch&&ch.prototype;dh&&nh(dh)!==oh&&rh(dh,oh,ah),sh[ah]=sh.Array}var lh=jd,hh=fi,uh=nn.f,ph=hh(\"metadata\"),_h=Function.prototype;void 0===_h[ph]&&uh(_h,ph,{value:null}),Jo(\"dispose\"),Jo(\"metadata\");var Eh=lh;Jo(\"asyncDispose\");var mh=_e,fh=ut(\"Symbol\"),gh=fh.keyFor,Th=mh(fh.prototype.valueOf),Sh=fh.isRegisteredSymbol||function(e){try{return void 0!==gh(Th(e))}catch(e){return!1}};kn({target:\"Symbol\",stat:!0},{isRegisteredSymbol:Sh});for(var Rh=Qt,Ch=ut,vh=_e,Ih=Nt,yh=fi,Ah=Ch(\"Symbol\"),bh=Ah.isWellKnownSymbol,wh=Ch(\"Object\",\"getOwnPropertyNames\"),Oh=vh(Ah.prototype.valueOf),Nh=Rh(\"wks\"),Dh=0,Ph=wh(Ah),Lh=Ph.length;Dh<Lh;Dh++)try{var kh=Ph[Dh];Ih(Ah[kh])&&yh(kh)}catch(e){}var Mh=function(e){if(bh&&bh(e))return!0;try{for(var t=Oh(e),i=0,n=wh(Nh),r=n.length;i<r;i++)if(Nh[n[i]]==t)return!0}catch(e){}return!1};kn({target:\"Symbol\",stat:!0,forced:!0},{isWellKnownSymbol:Mh}),Jo(\"matcher\"),Jo(\"observable\"),kn({target:\"Symbol\",stat:!0,name:\"isRegisteredSymbol\"},{isRegistered:Sh}),kn({target:\"Symbol\",stat:!0,name:\"isWellKnownSymbol\",forced:!0},{isWellKnown:Mh}),Jo(\"metadataKey\"),Jo(\"patternMatch\"),Jo(\"replaceAll\");var Uh=J(Eh),xh=_e,Vh=Vn,Fh=gr,Bh=et,jh=xh(\"\".charAt),Gh=xh(\"\".charCodeAt),Wh=xh(\"\".slice),Hh=function(e){return function(t,i){var n,r,s=Fh(Bh(t)),o=Vh(i),a=s.length;return o<0||o>=a?e?\"\":void 0:(n=Gh(s,o))<55296||n>56319||o+1===a||(r=Gh(s,o+1))<56320||r>57343?e?jh(s,o):n:e?Wh(s,o,o+2):r-56320+(n-55296<<10)+65536}},Kh={codeAt:Hh(!1),charAt:Hh(!0)}.charAt,Yh=gr,qh=Ia,Jh=Kl,zh=Yl,Xh=\"String Iterator\",Qh=qh.set,Zh=qh.getterFor(Xh);Jh(String,\"String\",(function(e){Qh(this,{type:Xh,string:Yh(e),index:0})}),(function(){var e,t=Zh(this),i=t.string,n=t.index;return n>=i.length?zh(void 0,!0):(e=Kh(i,n),t.index+=e.length,zh(e,!1))}));var $h=J(Fo.f(\"iterator\"));function eu(e){return eu=\"function\"==typeof Uh&&\"symbol\"==typeof $h?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Uh&&e.constructor===Uh&&e!==Uh.prototype?\"symbol\":typeof e},eu(e)}var tu=J(Fo.f(\"toPrimitive\"));function iu(e){var t=function(e,t){if(\"object\"!==eu(e)||null===e)return e;var i=e[tu];if(void 0!==i){var n=i.call(e,t||\"default\");if(\"object\"!==eu(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===eu(t)?t:String(t)}function nu(e,t,i){return(t=iu(t))in e?Fr(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var ru=er(\"Array\").keys,su=Er,ou=ni,au=Ee,cu=ru,du=Array.prototype,lu={DOMTokenList:!0,NodeList:!0},hu=J((function(e){var t=e.keys;return e===du||au(du,e)&&t===du.keys||ou(lu,su(e))?cu:t})),uu=Pt,pu=TypeError,_u=wo,Eu=Math.floor,mu=function(e,t){var i=e.length,n=Eu(i/2);return i<8?fu(e,t):gu(e,mu(_u(e,0,n),t),mu(_u(e,n),t),t)},fu=function(e,t){for(var i,n,r=e.length,s=1;s<r;){for(n=s,i=e[s];n&&t(e[n-1],i)>0;)e[n]=e[--n];n!==s++&&(e[n]=i)}return e},gu=function(e,t,i,n){for(var r=t.length,s=i.length,o=0,a=0;o<r||a<s;)e[o+a]=o<r&&a<s?n(t[o],i[a])<=0?t[o++]:i[a++]:o<r?t[o++]:i[a++];return e},Tu=mu,Su=ce,Ru=function(e,t){var i=[][e];return!!i&&Su((function(){i.call(null,t||function(){return 1},1)}))},Cu=pt.match(/firefox\\/(\\d+)/i),vu=!!Cu&&+Cu[1],Iu=/MSIE|Trident/.test(pt),yu=pt.match(/AppleWebKit\\/(\\d+)\\./),Au=!!yu&&+yu[1],bu=kn,wu=_e,Ou=Ut,Nu=ei,Du=Yn,Pu=function(e,t){if(!delete e[t])throw pu(\"Cannot delete property \"+uu(t)+\" of \"+uu(e))},Lu=gr,ku=ce,Mu=Tu,Uu=Ru,xu=vu,Vu=Iu,Fu=St,Bu=Au,ju=[],Gu=wu(ju.sort),Wu=wu(ju.push),Hu=ku((function(){ju.sort(void 0)})),Ku=ku((function(){ju.sort(null)})),Yu=Uu(\"sort\"),qu=!ku((function(){if(Fu)return Fu<70;if(!(xu&&xu>3)){if(Vu)return!0;if(Bu)return Bu<603;var e,t,i,n,r=\"\";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:i=3;break;case 68:case 71:i=4;break;default:i=2}for(n=0;n<47;n++)ju.push({k:t+n,v:i})}for(ju.sort((function(e,t){return t.v-e.v})),n=0;n<ju.length;n++)t=ju[n].k.charAt(0),r.charAt(r.length-1)!==t&&(r+=t);return\"DGBEFHACIJK\"!==r}}));bu({target:\"Array\",proto:!0,forced:Hu||!Ku||!Yu||!qu},{sort:function(e){void 0!==e&&Ou(e);var t=Nu(this);if(qu)return void 0===e?Gu(t):Gu(t,e);var i,n,r=[],s=Du(t);for(n=0;n<s;n++)n in t&&Wu(r,t[n]);for(Mu(r,function(e){return function(t,i){return void 0===i?-1:void 0===t?1:void 0!==e?+e(t,i)||0:Lu(t)>Lu(i)?1:-1}}(e)),i=Du(r),n=0;n<i;)t[n]=r[n++];for(;n<s;)Pu(t,n++);return t}});var Ju=er(\"Array\").sort,zu=Ee,Xu=Ju,Qu=Array.prototype,Zu=J((function(e){var t=e.sort;return e===Qu||zu(Qu,e)&&t===Qu.sort?Xu:t})),$u=ut,ep=To,tp=ko,ip=cn,np=_e([].concat),rp=$u(\"Reflect\",\"ownKeys\")||function(e){var t=ep.f(ip(e)),i=tp.f;return i?np(t,i(e)):t},sp=ni,op=rp,ap=ke,cp=nn,dp=ot,lp=Cn,hp=Error,up=_e(\"\".replace),pp=String(hp(\"zxcasd\").stack),_p=/\\n\\s*at [^:]*:[^\\n]*/,Ep=_p.test(pp),mp=Ke,fp=!ce((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",mp(1,7)),7!==e.stack)})),gp=Cn,Tp=function(e,t){if(Ep&&\"string\"==typeof e&&!hp.prepareStackTrace)for(;t--;)e=up(e,_p,\"\");return e},Sp=fp,Rp=Error.captureStackTrace,Cp=Gd,vp=fi(\"iterator\"),Ip=Array.prototype,yp=Er,Ap=Ft,bp=Qe,wp=Gd,Op=fi(\"iterator\"),Np=function(e){if(!bp(e))return Ap(e,Op)||Ap(e,\"@@iterator\")||wp[yp(e)]},Dp=Ve,Pp=Ut,Lp=cn,kp=Pt,Mp=Np,Up=TypeError,xp=Ve,Vp=cn,Fp=Ft,Bp=tn,jp=Ve,Gp=cn,Wp=Pt,Hp=function(e){return void 0!==e&&(Cp.Array===e||Ip[vp]===e)},Kp=Yn,Yp=Ee,qp=function(e,t){var i=arguments.length<2?Mp(e):t;if(Pp(i))return Lp(Dp(i,e));throw Up(kp(e)+\" is not iterable\")},Jp=Np,zp=function(e,t,i){var n,r;Vp(e);try{if(!(n=Fp(e,\"return\"))){if(\"throw\"===t)throw i;return i}n=xp(n,e)}catch(e){r=!0,n=e}if(\"throw\"===t)throw i;if(r)throw n;return Vp(n),i},Xp=TypeError,Qp=function(e,t){this.stopped=e,this.result=t},Zp=Qp.prototype,$p=function(e,t,i){var n,r,s,o,a,c,d,l=i&&i.that,h=!(!i||!i.AS_ENTRIES),u=!(!i||!i.IS_RECORD),p=!(!i||!i.IS_ITERATOR),_=!(!i||!i.INTERRUPTED),E=Bp(t,l),m=function(e){return n&&zp(n,\"normal\",e),new Qp(!0,e)},f=function(e){return h?(Gp(e),_?E(e[0],e[1],m):E(e[0],e[1])):_?E(e,m):E(e)};if(u)n=e.iterator;else if(p)n=e;else{if(!(r=Jp(e)))throw Xp(Wp(e)+\" is not iterable\");if(Hp(r)){for(s=0,o=Kp(e);o>s;s++)if((a=f(e[s]))&&Yp(Zp,a))return a;return new Qp(!1)}n=qp(e,r)}for(c=u?e.next:n.next;!(d=jp(c,n)).done;){try{a=f(d.value)}catch(e){zp(n,\"throw\",e)}if(\"object\"==typeof a&&a&&Yp(Zp,a))return a}return new Qp(!1)},e_=gr,t_=kn,i_=Ee,n_=nl,r_=wl,s_=function(e,t,i){for(var n=op(t),r=cp.f,s=ap.f,o=0;o<n.length;o++){var a=n[o];sp(e,a)||i&&sp(i,a)||r(e,a,s(t,a))}},o_=go,a_=Cn,c_=Ke,d_=function(e,t){dp(t)&&\"cause\"in t&&lp(e,\"cause\",t.cause)},l_=function(e,t,i,n){Sp&&(Rp?Rp(e,t):gp(e,\"stack\",Tp(i,n)))},h_=$p,u_=function(e,t){return void 0===e?arguments.length<2?\"\":t:e_(e)},p_=fi(\"toStringTag\"),__=Error,E_=[].push,m_=function(e,t){var i,n=i_(f_,this);r_?i=r_(__(),n?n_(this):f_):(i=n?this:o_(f_),a_(i,p_,\"Error\")),void 0!==t&&a_(i,\"message\",u_(t)),l_(i,m_,i.stack,1),arguments.length>2&&d_(i,arguments[2]);var r=[];return h_(e,E_,{that:r}),a_(i,\"errors\",r),i};r_?r_(m_,__):s_(m_,__,{name:!0});var f_=m_.prototype=o_(__.prototype,{constructor:c_(1,m_),message:c_(1,\"\"),name:c_(1,\"AggregateError\")});t_({global:!0,constructor:!0,arity:2},{AggregateError:m_});var g_,T_,S_,R_,C_=\"undefined\"!=typeof process&&\"process\"==Ae(process),v_=ut,I_=Vo,y_=Me,A_=fi(\"species\"),b_=Ee,w_=TypeError,O_=ls,N_=Pt,D_=TypeError,P_=cn,L_=function(e){if(O_(e))return e;throw D_(N_(e)+\" is not a constructor\")},k_=Qe,M_=fi(\"species\"),U_=function(e,t){var i,n=P_(e).constructor;return void 0===n||k_(i=P_(n)[M_])?t:L_(i)},x_=TypeError,V_=/(?:ipad|iphone|ipod).*applewebkit/i.test(pt),F_=fe,B_=Ce,j_=tn,G_=Le,W_=ni,H_=ce,K_=eo,Y_=id,q_=Di,J_=function(e,t){if(e<t)throw x_(\"Not enough arguments\");return e},z_=V_,X_=C_,Q_=F_.setImmediate,Z_=F_.clearImmediate,$_=F_.process,eE=F_.Dispatch,tE=F_.Function,iE=F_.MessageChannel,nE=F_.String,rE=0,sE={},oE=\"onreadystatechange\";H_((function(){g_=F_.location}));var aE=function(e){if(W_(sE,e)){var t=sE[e];delete sE[e],t()}},cE=function(e){return function(){aE(e)}},dE=function(e){aE(e.data)},lE=function(e){F_.postMessage(nE(e),g_.protocol+\"//\"+g_.host)};Q_&&Z_||(Q_=function(e){J_(arguments.length,1);var t=G_(e)?e:tE(e),i=Y_(arguments,1);return sE[++rE]=function(){B_(t,void 0,i)},T_(rE),rE},Z_=function(e){delete sE[e]},X_?T_=function(e){$_.nextTick(cE(e))}:eE&&eE.now?T_=function(e){eE.now(cE(e))}:iE&&!z_?(R_=(S_=new iE).port2,S_.port1.onmessage=dE,T_=j_(R_.postMessage,R_)):F_.addEventListener&&G_(F_.postMessage)&&!F_.importScripts&&g_&&\"file:\"!==g_.protocol&&!H_(lE)?(T_=lE,F_.addEventListener(\"message\",dE,!1)):T_=oE in q_(\"script\")?function(e){K_.appendChild(q_(\"script\"))[oE]=function(){K_.removeChild(this),aE(e)}}:function(e){setTimeout(cE(e),0)});var hE={set:Q_,clear:Z_},uE=function(){this.head=null,this.tail=null};uE.prototype={add:function(e){var t={item:e,next:null},i=this.tail;i?i.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}};var pE,_E,EE,mE,fE,gE=uE,TE=/ipad|iphone|ipod/i.test(pt)&&\"undefined\"!=typeof Pebble,SE=/web0s(?!.*chrome)/i.test(pt),RE=fe,CE=tn,vE=ke.f,IE=hE.set,yE=gE,AE=V_,bE=TE,wE=SE,OE=C_,NE=RE.MutationObserver||RE.WebKitMutationObserver,DE=RE.document,PE=RE.process,LE=RE.Promise,kE=vE(RE,\"queueMicrotask\"),ME=kE&&kE.value;if(!ME){var UE=new yE,xE=function(){var e,t;for(OE&&(e=PE.domain)&&e.exit();t=UE.get();)try{t()}catch(e){throw UE.head&&pE(),e}e&&e.enter()};AE||OE||wE||!NE||!DE?!bE&&LE&&LE.resolve?((mE=LE.resolve(void 0)).constructor=LE,fE=CE(mE.then,mE),pE=function(){fE(xE)}):OE?pE=function(){PE.nextTick(xE)}:(IE=CE(IE,RE),pE=function(){IE(xE)}):(_E=!0,EE=DE.createTextNode(\"\"),new NE(xE).observe(EE,{characterData:!0}),pE=function(){EE.data=_E=!_E}),ME=function(e){UE.head||pE(),UE.add(e)}}var VE=ME,FE=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},BE=fe.Promise,jE=\"object\"==typeof Deno&&Deno&&\"object\"==typeof Deno.version,GE=!jE&&!C_&&\"object\"==typeof window&&\"object\"==typeof document,WE=fe,HE=BE,KE=Le,YE=Qi,qE=Xr,JE=fi,zE=GE,XE=jE,QE=St,ZE=HE&&HE.prototype,$E=JE(\"species\"),em=!1,tm=KE(WE.PromiseRejectionEvent),im=YE(\"Promise\",(function(){var e=qE(HE),t=e!==String(HE);if(!t&&66===QE)return!0;if(!ZE.catch||!ZE.finally)return!0;if(!QE||QE<51||!/native code/.test(e)){var i=new HE((function(e){e(1)})),n=function(e){e((function(){}),(function(){}))};if((i.constructor={})[$E]=n,!(em=i.then((function(){}))instanceof n))return!0}return!t&&(zE||XE)&&!tm})),nm={CONSTRUCTOR:im,REJECTION_EVENT:tm,SUBCLASSING:em},rm={},sm=Ut,om=TypeError,am=function(e){var t,i;this.promise=new e((function(e,n){if(void 0!==t||void 0!==i)throw om(\"Bad Promise constructor\");t=e,i=n})),this.resolve=sm(t),this.reject=sm(i)};rm.f=function(e){return new am(e)};var cm,dm,lm=kn,hm=C_,um=fe,pm=Ve,_m=Uo,Em=ca,mm=function(e){var t=v_(e);y_&&t&&!t[A_]&&I_(t,A_,{configurable:!0,get:function(){return this}})},fm=Ut,gm=Le,Tm=ot,Sm=function(e,t){if(b_(t,e))return e;throw w_(\"Incorrect invocation\")},Rm=U_,Cm=hE.set,vm=VE,Im=function(e,t){try{1==arguments.length?console.error(e):console.error(e,t)}catch(e){}},ym=FE,Am=gE,bm=Ia,wm=BE,Om=nm,Nm=rm,Dm=\"Promise\",Pm=Om.CONSTRUCTOR,Lm=Om.REJECTION_EVENT,km=bm.getterFor(Dm),Mm=bm.set,Um=wm&&wm.prototype,xm=wm,Vm=Um,Fm=um.TypeError,Bm=um.document,jm=um.process,Gm=Nm.f,Wm=Gm,Hm=!!(Bm&&Bm.createEvent&&um.dispatchEvent),Km=\"unhandledrejection\",Ym=function(e){var t;return!(!Tm(e)||!gm(t=e.then))&&t},qm=function(e,t){var i,n,r,s=t.value,o=1==t.state,a=o?e.ok:e.fail,c=e.resolve,d=e.reject,l=e.domain;try{a?(o||(2===t.rejection&&Zm(t),t.rejection=1),!0===a?i=s:(l&&l.enter(),i=a(s),l&&(l.exit(),r=!0)),i===e.promise?d(Fm(\"Promise-chain cycle\")):(n=Ym(i))?pm(n,i,c,d):c(i)):d(s)}catch(e){l&&!r&&l.exit(),d(e)}},Jm=function(e,t){e.notified||(e.notified=!0,vm((function(){for(var i,n=e.reactions;i=n.get();)qm(i,e);e.notified=!1,t&&!e.rejection&&Xm(e)})))},zm=function(e,t,i){var n,r;Hm?((n=Bm.createEvent(\"Event\")).promise=t,n.reason=i,n.initEvent(e,!1,!0),um.dispatchEvent(n)):n={promise:t,reason:i},!Lm&&(r=um[\"on\"+e])?r(n):e===Km&&Im(\"Unhandled promise rejection\",i)},Xm=function(e){pm(Cm,um,(function(){var t,i=e.facade,n=e.value;if(Qm(e)&&(t=ym((function(){hm?jm.emit(\"unhandledRejection\",n,i):zm(Km,i,n)})),e.rejection=hm||Qm(e)?2:1,t.error))throw t.value}))},Qm=function(e){return 1!==e.rejection&&!e.parent},Zm=function(e){pm(Cm,um,(function(){var t=e.facade;hm?jm.emit(\"rejectionHandled\",t):zm(\"rejectionhandled\",t,e.value)}))},$m=function(e,t,i){return function(n){e(t,n,i)}},ef=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,Jm(e,!0))},tf=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw Fm(\"Promise can't be resolved itself\");var n=Ym(t);n?vm((function(){var i={done:!1};try{pm(n,t,$m(tf,i,e),$m(ef,i,e))}catch(t){ef(i,t,e)}})):(e.value=t,e.state=1,Jm(e,!1))}catch(t){ef({done:!1},t,e)}}};Pm&&(Vm=(xm=function(e){Sm(this,Vm),fm(e),pm(cm,this);var t=km(this);try{e($m(tf,t),$m(ef,t))}catch(e){ef(t,e)}}).prototype,(cm=function(e){Mm(this,{type:Dm,done:!1,notified:!1,parent:!1,reactions:new Am,rejection:!1,state:0,value:void 0})}).prototype=_m(Vm,\"then\",(function(e,t){var i=km(this),n=Gm(Rm(this,xm));return i.parent=!0,n.ok=!gm(e)||e,n.fail=gm(t)&&t,n.domain=hm?jm.domain:void 0,0==i.state?i.reactions.add(n):vm((function(){qm(n,i)})),n.promise})),dm=function(){var e=new cm,t=km(e);this.promise=e,this.resolve=$m(tf,t),this.reject=$m(ef,t)},Nm.f=Gm=function(e){return e===xm||undefined===e?new dm(e):Wm(e)}),lm({global:!0,constructor:!0,wrap:!0,forced:Pm},{Promise:xm}),Em(xm,Dm,!1,!0),mm(Dm);var nf=fi(\"iterator\"),rf=!1;try{var sf=0,of={next:function(){return{done:!!sf++}},return:function(){rf=!0}};of[nf]=function(){return this},Array.from(of,(function(){throw 2}))}catch(e){}var af=BE,cf=function(e,t){if(!t&&!rf)return!1;var i=!1;try{var n={};n[nf]=function(){return{next:function(){return{done:i=!0}}}},e(n)}catch(e){}return i},df=nm.CONSTRUCTOR||!cf((function(e){af.all(e).then(void 0,(function(){}))})),lf=Ve,hf=Ut,uf=rm,pf=FE,_f=$p;kn({target:\"Promise\",stat:!0,forced:df},{all:function(e){var t=this,i=uf.f(t),n=i.resolve,r=i.reject,s=pf((function(){var i=hf(t.resolve),s=[],o=0,a=1;_f(e,(function(e){var c=o++,d=!1;a++,lf(i,t,e).then((function(e){d||(d=!0,s[c]=e,--a||n(s))}),r)})),--a||n(s)}));return s.error&&r(s.value),i.promise}});var Ef=kn,mf=nm.CONSTRUCTOR;BE&&BE.prototype,Ef({target:\"Promise\",proto:!0,forced:mf,real:!0},{catch:function(e){return this.then(void 0,e)}});var ff=Ve,gf=Ut,Tf=rm,Sf=FE,Rf=$p;kn({target:\"Promise\",stat:!0,forced:df},{race:function(e){var t=this,i=Tf.f(t),n=i.reject,r=Sf((function(){var r=gf(t.resolve);Rf(e,(function(e){ff(r,t,e).then(i.resolve,n)}))}));return r.error&&n(r.value),i.promise}});var Cf=Ve,vf=rm;kn({target:\"Promise\",stat:!0,forced:nm.CONSTRUCTOR},{reject:function(e){var t=vf.f(this);return Cf(t.reject,void 0,e),t.promise}});var If=cn,yf=ot,Af=rm,bf=function(e,t){if(If(e),yf(t)&&t.constructor===e)return t;var i=Af.f(e);return(0,i.resolve)(t),i.promise},wf=kn,Of=BE,Nf=nm.CONSTRUCTOR,Df=bf,Pf=ut(\"Promise\"),Lf=!Nf;wf({target:\"Promise\",stat:!0,forced:true},{resolve:function(e){return Df(Lf&&this===Pf?Of:this,e)}});var kf=Ve,Mf=Ut,Uf=rm,xf=FE,Vf=$p;kn({target:\"Promise\",stat:!0,forced:df},{allSettled:function(e){var t=this,i=Uf.f(t),n=i.resolve,r=i.reject,s=xf((function(){var i=Mf(t.resolve),r=[],s=0,o=1;Vf(e,(function(e){var a=s++,c=!1;o++,kf(i,t,e).then((function(e){c||(c=!0,r[a]={status:\"fulfilled\",value:e},--o||n(r))}),(function(e){c||(c=!0,r[a]={status:\"rejected\",reason:e},--o||n(r))}))})),--o||n(r)}));return s.error&&r(s.value),i.promise}});var Ff=Ve,Bf=Ut,jf=ut,Gf=rm,Wf=FE,Hf=$p,Kf=\"No one promise resolved\";kn({target:\"Promise\",stat:!0,forced:df},{any:function(e){var t=this,i=jf(\"AggregateError\"),n=Gf.f(t),r=n.resolve,s=n.reject,o=Wf((function(){var n=Bf(t.resolve),o=[],a=0,c=1,d=!1;Hf(e,(function(e){var l=a++,h=!1;c++,Ff(n,t,e).then((function(e){h||d||(d=!0,r(e))}),(function(e){h||d||(h=!0,o[l]=e,--c||s(new i(o,Kf)))}))})),--c||s(new i(o,Kf))}));return o.error&&s(o.value),n.promise}});var Yf=kn,qf=BE,Jf=ce,zf=ut,Xf=Le,Qf=U_,Zf=bf,$f=qf&&qf.prototype;Yf({target:\"Promise\",proto:!0,real:!0,forced:!!qf&&Jf((function(){$f.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=Qf(this,zf(\"Promise\")),i=Xf(e);return this.then(i?function(i){return Zf(t,e()).then((function(){return i}))}:e,i?function(i){return Zf(t,e()).then((function(){throw i}))}:e)}});var eg=at.Promise,tg=J(eg);const ig=()=>{};function ng(){const e={promise:void 0,isResolved:!1,isRejected:!1,isFinished:!1,resolve:void 0,reject:void 0,cancel:ig};return e.promise=new tg(((t,i)=>{e.resolve=i=>{e.isFinished||(e.isResolved=!0,e.isFinished=!0,t(i),e.value=i)},e.reject=t=>{e.isFinished||(e.isRejected=!0,e.isFinished=!0,i(t))}})),e}const rg=new Map,sg=new Map,og=new Map;var ag,cg;!function(e){e.WIN_10=\"Windows 10\",e.WIN_81=\"Windows 8.1\",e.WIN_8=\"Windows 8\",e.WIN_7=\"Windows 7\",e.WIN_VISTA=\"Windows Vista\",e.WIN_SERVER_2003=\"Windows Server 2003\",e.WIN_XP=\"Windows XP\",e.WIN_2000=\"Windows 2000\",e.ANDROID=\"Android\",e.HARMONY_OS=\"HarmonyOS\",e.OPEN_BSD=\"Open BSD\",e.SUN_OS=\"Sun OS\",e.LINUX=\"Linux\",e.IOS=\"iOS\",e.MAC_OS=\"Mac OS\",e.QNX=\"QNX\",e.UNIX=\"UNIX\",e.BEOS=\"BeOS\",e.OS_2=\"OS/2\",e.SEARCH_BOT=\"Search Bot\"}(ag||(ag={})),function(e){e.CHROME=\"Chrome\",e.SAFARI=\"Safari\",e.EDGE=\"Edge\",e.FIREFOX=\"Firefox\",e.OPERA=\"OPR\",e.QQ=\"QQBrowser\",e.WECHAT=\"MicroMessenger\"}(cg||(cg={}));var dg={exports:{}};!function(e,t){!function(i,n){var r=\"function\",s=\"undefined\",o=\"object\",a=\"string\",c=\"major\",d=\"model\",l=\"name\",h=\"type\",u=\"vendor\",p=\"version\",_=\"architecture\",E=\"console\",m=\"mobile\",f=\"tablet\",g=\"smarttv\",T=\"wearable\",S=\"embedded\",R=\"Amazon\",C=\"Apple\",v=\"ASUS\",I=\"BlackBerry\",y=\"Browser\",A=\"Chrome\",b=\"Firefox\",w=\"Google\",O=\"Huawei\",N=\"LG\",D=\"Microsoft\",P=\"Motorola\",L=\"Opera\",k=\"Samsung\",M=\"Sharp\",U=\"Sony\",x=\"Xiaomi\",V=\"Zebra\",F=\"Facebook\",B=\"Chromium OS\",j=\"Mac OS\",G=function(e){for(var t={},i=0;i<e.length;i++)t[e[i].toUpperCase()]=e[i];return t},W=function(e,t){return typeof e===a&&-1!==H(t).indexOf(H(e))},H=function(e){return e.toLowerCase()},K=function(e,t){if(typeof e===a)return e=e.replace(/^\\s\\s*/,\"\"),typeof t===s?e:e.substring(0,350)},Y=function(e,t){for(var i,s,a,c,d,l,h=0;h<t.length&&!d;){var u=t[h],p=t[h+1];for(i=s=0;i<u.length&&!d&&u[i];)if(d=u[i++].exec(e))for(a=0;a<p.length;a++)l=d[++s],typeof(c=p[a])===o&&c.length>0?2===c.length?typeof c[1]==r?this[c[0]]=c[1].call(this,l):this[c[0]]=c[1]:3===c.length?typeof c[1]!==r||c[1].exec&&c[1].test?this[c[0]]=l?l.replace(c[1],c[2]):n:this[c[0]]=l?c[1].call(this,l,c[2]):n:4===c.length&&(this[c[0]]=l?c[3].call(this,l.replace(c[1],c[2])):n):this[c]=l||n;h+=2}},q=function(e,t){for(var i in t)if(typeof t[i]===o&&t[i].length>0){for(var r=0;r<t[i].length;r++)if(W(t[i][r],e))return\"?\"===i?n:i}else if(W(t[i],e))return\"?\"===i?n:i;return e},J={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"},z={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[p,[l,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[p,[l,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[l,p],[/opios[\\/ ]+([\\w\\.]+)/i],[p,[l,L+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[p,[l,L]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[l,p],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[p,[l,\"UC\"+y]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[p,[l,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[p,[l,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[p,[l,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[p,[l,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[p,[l,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[l,/(.+)/,\"$1 Secure \"+y],p],[/\\bfocus\\/([\\w\\.]+)/i],[p,[l,b+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[p,[l,L+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[p,[l,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[p,[l,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[p,[l,L+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[p,[l,\"MIUI \"+y]],[/fxios\\/([-\\w\\.]+)/i],[p,[l,b]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[l,\"360 \"+y]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[l,/(.+)/,\"$1 \"+y],p],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[l,/_/g,\" \"],p],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[l,p],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[l],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[l,F],p],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[l,p],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[p,[l,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[p,[l,A+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[l,A+\" WebView\"],p],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[p,[l,\"Android \"+y]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[l,p],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[p,[l,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[p,l],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[l,[p,q,{\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"}]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[l,p],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[l,\"Netscape\"],p],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[p,[l,b+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[l,p],[/(cobalt)\\/([\\w\\.]+)/i],[l,[p,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[_,\"amd64\"]],[/(ia32(?=;))/i],[[_,H]],[/((?:i[346]|x)86)[;\\)]/i],[[_,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[_,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[_,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[_,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[_,/ower/,\"\",H]],[/(sun4\\w)[;\\)]/i],[[_,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[_,H]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[d,[u,k],[h,f]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[d,[u,k],[h,m]],[/\\((ip(?:hone|od)[\\w ]*);/i],[d,[u,C],[h,m]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[d,[u,C],[h,f]],[/(macintosh);/i],[d,[u,C]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[d,[u,M],[h,m]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[d,[u,O],[h,f]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[d,[u,O],[h,m]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[d,/_/g,\" \"],[u,x],[h,m]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[d,/_/g,\" \"],[u,x],[h,f]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[d,[u,\"OPPO\"],[h,m]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[d,[u,\"Vivo\"],[h,m]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[d,[u,\"Realme\"],[h,m]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[d,[u,P],[h,m]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[d,[u,P],[h,f]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[d,[u,N],[h,f]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[d,[u,N],[h,m]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[d,[u,\"Lenovo\"],[h,f]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[d,/_/g,\" \"],[u,\"Nokia\"],[h,m]],[/(pixel c)\\b/i],[d,[u,w],[h,f]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[d,[u,w],[h,m]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[d,[u,U],[h,m]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[d,\"Xperia Tablet\"],[u,U],[h,f]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[d,[u,\"OnePlus\"],[h,m]],[/(alexa)webm/i,/(kf[a-z]{2}wi)( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[d,[u,R],[h,f]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[d,/(.+)/g,\"Fire Phone $1\"],[u,R],[h,m]],[/(playbook);[-\\w\\),; ]+(rim)/i],[d,u,[h,f]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[d,[u,I],[h,m]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[d,[u,v],[h,f]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[d,[u,v],[h,m]],[/(nexus 9)/i],[d,[u,\"HTC\"],[h,f]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[u,[d,/_/g,\" \"],[h,m]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[d,[u,\"Acer\"],[h,f]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[d,[u,\"Meizu\"],[h,m]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[u,d,[h,m]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[u,d,[h,f]],[/(surface duo)/i],[d,[u,D],[h,f]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[d,[u,\"Fairphone\"],[h,m]],[/(u304aa)/i],[d,[u,\"AT&T\"],[h,m]],[/\\bsie-(\\w*)/i],[d,[u,\"Siemens\"],[h,m]],[/\\b(rct\\w+) b/i],[d,[u,\"RCA\"],[h,f]],[/\\b(venue[\\d ]{2,7}) b/i],[d,[u,\"Dell\"],[h,f]],[/\\b(q(?:mv|ta)\\w+) b/i],[d,[u,\"Verizon\"],[h,f]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[d,[u,\"Barnes & Noble\"],[h,f]],[/\\b(tm\\d{3}\\w+) b/i],[d,[u,\"NuVision\"],[h,f]],[/\\b(k88) b/i],[d,[u,\"ZTE\"],[h,f]],[/\\b(nx\\d{3}j) b/i],[d,[u,\"ZTE\"],[h,m]],[/\\b(gen\\d{3}) b.+49h/i],[d,[u,\"Swiss\"],[h,m]],[/\\b(zur\\d{3}) b/i],[d,[u,\"Swiss\"],[h,f]],[/\\b((zeki)?tb.*\\b) b/i],[d,[u,\"Zeki\"],[h,f]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[u,\"Dragon Touch\"],d,[h,f]],[/\\b(ns-?\\w{0,9}) b/i],[d,[u,\"Insignia\"],[h,f]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[d,[u,\"NextBook\"],[h,f]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[u,\"Voice\"],d,[h,m]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[u,\"LvTel\"],d,[h,m]],[/\\b(ph-1) /i],[d,[u,\"Essential\"],[h,m]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[d,[u,\"Envizen\"],[h,f]],[/\\b(trio[-\\w\\. ]+) b/i],[d,[u,\"MachSpeed\"],[h,f]],[/\\btu_(1491) b/i],[d,[u,\"Rotor\"],[h,f]],[/(shield[\\w ]+) b/i],[d,[u,\"Nvidia\"],[h,f]],[/(sprint) (\\w+)/i],[u,d,[h,m]],[/(kin\\.[onetw]{3})/i],[[d,/\\./g,\" \"],[u,D],[h,m]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[d,[u,V],[h,f]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[d,[u,V],[h,m]],[/smart-tv.+(samsung)/i],[u,[h,g]],[/hbbtv.+maple;(\\d+)/i],[[d,/^/,\"SmartTV\"],[u,k],[h,g]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[u,N],[h,g]],[/(apple) ?tv/i],[u,[d,C+\" TV\"],[h,g]],[/crkey/i],[[d,A+\"cast\"],[u,w],[h,g]],[/droid.+aft(\\w)( bui|\\))/i],[d,[u,R],[h,g]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[d,[u,M],[h,g]],[/(bravia[\\w ]+)( bui|\\))/i],[d,[u,U],[h,g]],[/(mitv-\\w{5}) bui/i],[d,[u,x],[h,g]],[/Hbbtv.*(technisat) (.*);/i],[u,d,[h,g]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[u,K],[d,K],[h,g]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[h,g]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[u,d,[h,E]],[/droid.+; (shield) bui/i],[d,[u,\"Nvidia\"],[h,E]],[/(playstation [345portablevi]+)/i],[d,[u,U],[h,E]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[d,[u,D],[h,E]],[/((pebble))app/i],[u,d,[h,T]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[d,[u,C],[h,T]],[/droid.+; (glass) \\d/i],[d,[u,w],[h,T]],[/droid.+; (wt63?0{2,3})\\)/i],[d,[u,V],[h,T]],[/(quest( 2| pro)?)/i],[d,[u,F],[h,T]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[u,[h,S]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[d,[h,m]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[d,[h,f]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[h,f]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[h,m]],[/(android[-\\w\\. ]{0,9});.+buil/i],[d,[u,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[p,[l,\"EdgeHTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[p,[l,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i],[l,p],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[p,l]],os:[[/microsoft (windows) (vista|xp)/i],[l,p],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[l,[p,q,J]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[l,\"Windows\"],[p,q,J]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/cfnetwork\\/.+darwin/i],[[p,/_/g,\".\"],[l,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[l,j],[p,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[p,l],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[l,p],[/\\(bb(10);/i],[p,[l,I]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[p,[l,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[p,[l,b+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[p,[l,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[p,[l,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[p,[l,A+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[l,B],p],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[l,p],[/(sunos) ?([\\w\\.\\d]*)/i],[[l,\"Solaris\"],p],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,/(unix) ?([\\w\\.]*)/i],[l,p]]},X=function(e,t){if(typeof e===o&&(t=e,e=n),!(this instanceof X))return new X(e,t).getResult();var E=typeof i!==s&&i.navigator?i.navigator:n,g=e||(E&&E.userAgent?E.userAgent:\"\"),T=E&&E.userAgentData?E.userAgentData:n,S=t?function(e,t){var i={};for(var n in e)t[n]&&t[n].length%2==0?i[n]=t[n].concat(e[n]):i[n]=e[n];return i}(z,t):z;return this.getBrowser=function(){var e={};return e[l]=n,e[p]=n,Y.call(e,g,S.browser),e[c]=function(e){return typeof e===a?e.replace(/[^\\d\\.]/g,\"\").split(\".\")[0]:n}(e[p]),E&&E.brave&&typeof E.brave.isBrave==r&&(e[l]=\"Brave\"),e},this.getCPU=function(){var e={};return e[_]=n,Y.call(e,g,S.cpu),e},this.getDevice=function(){var e={};return e[u]=n,e[d]=n,e[h]=n,Y.call(e,g,S.device),!e[h]&&T&&T.mobile&&(e[h]=m),\"Macintosh\"==e[d]&&E&&typeof E.standalone!==s&&E.maxTouchPoints&&E.maxTouchPoints>2&&(e[d]=\"iPad\",e[h]=f),e},this.getEngine=function(){var e={};return e[l]=n,e[p]=n,Y.call(e,g,S.engine),e},this.getOS=function(){var e={};return e[l]=n,e[p]=n,Y.call(e,g,S.os),!e[l]&&T&&\"Unknown\"!=T.platform&&(e[l]=T.platform.replace(/chrome os/i,B).replace(/macos/i,j)),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return g},this.setUA=function(e){return g=typeof e===a&&e.length>350?K(e,350):e,this},this.setUA(g),this};X.VERSION=\"0.7.34\",X.BROWSER=G([l,p,c]),X.CPU=G([_]),X.DEVICE=G([d,u,h,E,m,g,f,T,S]),X.ENGINE=X.OS=G([l,p]),e.exports&&(t=e.exports=X),t.UAParser=X;var Q=typeof i!==s&&(i.jQuery||i.Zepto);if(Q&&!Q.ua){var Z=new X;Q.ua=Z.getResult(),Q.ua.get=function(){return Z.getUA()},Q.ua.set=function(e){Z.setUA(e);var t=Z.getResult();for(var i in t)Q.ua[i]=t[i]}}}(\"object\"==typeof window?window:q)}(dg,dg.exports);const lg=new(J(dg.exports));let hg=lg.getResult(),ug=null;function pg(e){if(!ug){e&&lg.setUA(e),hg=lg.getResult();const t=function(e){if(\"Blink\"===e.engine.name&&\"WeChat\"!==e.browser.name)return cg.CHROME;switch(e.browser.name){case\"Chrome Headless\":case\"Chrome\":case\"Chromium\":return cg.CHROME;case\"Safari\":case\"Mobile Safari\":return cg.SAFARI;case\"Edge\":return cg.EDGE;case\"Firefox\":return cg.FIREFOX;case\"QQBrowser\":return cg.QQ;case\"Opera\":return cg.OPERA;case\"WeChat\":return cg.WECHAT;default:return e.browser.name||\"\"}}(hg),i=function(e){let t;t=\"Blink\"===e.engine.name?e.engine.version||\"\":e.browser.version||\"\";return t.split(\".\")[0]}(hg),n=function(e){if(\"Windows\"===e.os.name)return e.os.version?e.os.name+\" \"+e.os.version:e.os.name;return e.os.name||\"\"}(hg),r=hg.os.version;if(!(t&&i&&n&&r))return{name:t,version:i,os:n,osVersion:r};ug={name:t,version:i,os:n,osVersion:r}}return ug}function _g(){return pg().os}function Eg(){const e=pg();return\"\".concat(e.os,\" \").concat(e.osVersion)}function mg(){const e=pg();return!!(\"WebKit\"===hg.engine.name&&e.os===ag.MAC_OS&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0&&e.name!==cg.SAFARI||Cg()&&e.name!==cg.SAFARI)}function fg(){const e=pg();if(mg()){if(e.os===ag.MAC_OS)return!0;if(e.os===ag.IOS){const e=hg.os.version&&hg.os.version.split(\".\");if(e&&14===Number(e[0])&&e[1]&&Number(e[1])>=3)return!0;if(e&&Number(e[0])>14)return!0}}return!1}function gg(){return\"WebKit\"===hg.engine.name}function Tg(){return pg().name===cg.CHROME}function Sg(){return pg().name===cg.SAFARI}function Rg(){return pg().name===cg.FIREFOX}function Cg(){return pg().os===ag.IOS}function vg(e){const t=pg();return!(t.name!==cg.CHROME||!t.osVersion)&&Number(t.version)>=e}function Ig(e){const t=pg();return!(t.name!==cg.EDGE||!t.osVersion)&&Number(t.version)>=e}function yg(e){const t=pg();return!(t.name!==cg.OPERA||!t.osVersion)&&Number(t.version)>=e}function Ag(){const e=pg();return!(e.name!==cg.CHROME||!e.osVersion)&&Number(e.version)<=90}function bg(){const e=pg();if(e.os!==ag.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return Number(t[0])<14||14===Number(t[0])&&Number(t[1])<=6}function wg(){const e=pg();if(e.os!==ag.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])}function Og(){const e=pg();if(e.os!==ag.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 16===Number(t[0])}function Ng(){const e=pg();if(e.os!==ag.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=1}function Dg(){return Sg()&&navigator.maxTouchPoints>0}function Pg(){return pg().name===cg.WECHAT}function Lg(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)&&window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1]<=35}function kg(){const e=pg();if(e.name===cg.EDGE||e.name===cg.SAFARI)return!1;return!!navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]./i)}function Mg(){return _g()===ag.ANDROID}function Ug(){const e=pg();return Mg()&&(e.name===cg.CHROME||e.name===cg.WECHAT||/chrome|chromium/i.test(navigator.userAgent))}var xg;!function(e){e.UNEXPECTED_ERROR=\"UNEXPECTED_ERROR\",e.UNEXPECTED_RESPONSE=\"UNEXPECTED_RESPONSE\",e.TIMEOUT=\"TIMEOUT\",e.INVALID_PARAMS=\"INVALID_PARAMS\",e.NOT_READABLE=\"NOT_READABLE\",e.NOT_SUPPORTED=\"NOT_SUPPORTED\",e.INVALID_OPERATION=\"INVALID_OPERATION\",e.OPERATION_ABORTED=\"OPERATION_ABORTED\",e.WEB_SECURITY_RESTRICT=\"WEB_SECURITY_RESTRICT\",e.EXCHANGE_SDP_FAILED=\"EXCHANGE_SDP_FAILED\",e.ADD_CANDIDATE_FAILED=\"ADD_CANDIDATE_FAILED\",e.DATACHANNEL_FAILED=\"DATACHANNEL_FAILED\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.NETWORK_TIMEOUT=\"NETWORK_TIMEOUT\",e.NETWORK_RESPONSE_ERROR=\"NETWORK_RESPONSE_ERROR\",e.API_INVOKE_TIMEOUT=\"API_INVOKE_TIMEOUT\",e.ENUMERATE_DEVICES_FAILED=\"ENUMERATE_DEVICES_FAILED\",e.DEVICE_NOT_FOUND=\"DEVICE_NOT_FOUND\",e.ELECTRON_IS_NULL=\"ELECTRON_IS_NULL\",e.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR=\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",e.CHROME_PLUGIN_NO_RESPONSE=\"CHROME_PLUGIN_NO_RESPONSE\",e.CHROME_PLUGIN_NOT_INSTALL=\"CHROME_PLUGIN_NOT_INSTALL\",e.MEDIA_OPTION_INVALID=\"MEDIA_OPTION_INVALID\",e.PERMISSION_DENIED=\"PERMISSION_DENIED\",e.CONSTRAINT_NOT_SATISFIED=\"CONSTRAINT_NOT_SATISFIED\",e.TRACK_IS_DISABLED=\"TRACK_IS_DISABLED\",e.GET_VIDEO_ELEMENT_VISIBLE_ERROR=\"GET_VIDEO_ELEMENT_VISIBLE_ERROR\",e.SHARE_AUDIO_NOT_ALLOWED=\"SHARE_AUDIO_NOT_ALLOWED\",e.LOW_STREAM_ENCODING_ERROR=\"LOW_STREAM_ENCODING_ERROR\",e.SET_ENCODING_PARAMETER_ERROR=\"SET_ENCODING_PARAMETER_ERROR\",e.TRACK_STATE_UNREACHABLE=\"TRACK_STATE_UNREACHABLE\",e.INVALID_UINT_UID_FROM_STRING_UID=\"INVALID_UINT_UID_FROM_STRING_UID\",e.CAN_NOT_GET_PROXY_SERVER=\"CAN_NOT_GET_PROXY_SERVER\",e.CAN_NOT_GET_GATEWAY_SERVER=\"CAN_NOT_GET_GATEWAY_SERVER\",e.VOID_GATEWAY_ADDRESS=\"VOID_GATEWAY_ADDRESS\",e.UID_CONFLICT=\"UID_CONFLICT\",e.MULTI_UNILBS_RESPONSE_ERROR=\"MULTI_UNILBS_RESPONSE_ERROR\",e.UPDATE_TICKET_FAILED=\"UPDATE_TICKET_FAILED\",e.INVALID_LOCAL_TRACK=\"INVALID_LOCAL_TRACK\",e.INVALID_TRACK=\"INVALID_TRACK\",e.SENDER_NOT_FOUND=\"SENDER_NOT_FOUND\",e.CREATE_OFFER_FAILED=\"CREATE_OFFER_FAILED\",e.SET_ANSWER_FAILED=\"SET_ANSWER_FAILED\",e.ICE_FAILED=\"ICE_FAILED\",e.PC_CLOSED=\"PC_CLOSED\",e.SENDER_REPLACE_FAILED=\"SENDER_REPLACE_FAILED\",e.GET_LOCAL_CAPABILITIES_FAILED=\"GET_LOCAL_CAPABILITIES_FAILED\",e.GET_LOCAL_CONNECTION_PARAMS_FAILED=\"GET_LOCAL_CONNECTION_PARAMS_FAILED\",e.SUBSCRIBE_FAILED=\"SUBSCRIBE_FAILED\",e.UNSUBSCRIBE_FAILED=\"UNSUBSCRIBE_FAILED\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NO_ICE_CANDIDATE=\"NO_ICE_CANDIDATE\",e.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS=\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",e.EXIST_DISABLED_VIDEO_TRACK=\"EXIST_DISABLED_VIDEO_TRACK\",e.INVALID_REMOTE_USER=\"INVALID_REMOTE_USER\",e.REMOTE_USER_IS_NOT_PUBLISHED=\"REMOTE_USER_IS_NOT_PUBLISHED\",e.CUSTOM_REPORT_SEND_FAILED=\"CUSTOM_REPORT_SEND_FAILED\",e.CUSTOM_REPORT_FREQUENCY_TOO_HIGH=\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",e.FETCH_AUDIO_FILE_FAILED=\"FETCH_AUDIO_FILE_FAILED\",e.READ_LOCAL_AUDIO_FILE_ERROR=\"READ_LOCAL_AUDIO_FILE_ERROR\",e.DECODE_AUDIO_FILE_FAILED=\"DECODE_AUDIO_FILE_FAILED\",e.WS_ABORT=\"WS_ABORT\",e.WS_DISCONNECT=\"WS_DISCONNECT\",e.WS_ERR=\"WS_ERR\",e.LIVE_STREAMING_TASK_CONFLICT=\"LIVE_STREAMING_TASK_CONFLICT\",e.LIVE_STREAMING_INVALID_ARGUMENT=\"LIVE_STREAMING_INVALID_ARGUMENT\",e.LIVE_STREAMING_INTERNAL_SERVER_ERROR=\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",e.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED=\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",e.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED=\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",e.LIVE_STREAMING_CDN_ERROR=\"LIVE_STREAMING_CDN_ERROR\",e.LIVE_STREAMING_INVALID_RAW_STREAM=\"LIVE_STREAMING_INVALID_RAW_STREAM\",e.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT=\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",e.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE=\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",e.LIVE_STREAMING_WARN_FREQUENT_REQUEST=\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",e.WEBGL_INTERNAL_ERROR=\"WEBGL_INTERNAL_ERROR\",e.BEAUTY_PROCESSOR_INTERNAL_ERROR=\"BEAUTY_PROCESSOR_INTERNAL_ERROR\",e.CROSS_CHANNEL_WAIT_STATUS_ERROR=\"CROSS_CHANNEL_WAIT_STATUS_ERROR\",e.CROSS_CHANNEL_FAILED_JOIN_SRC=\"CROSS_CHANNEL_FAILED_JOIN_SEC\",e.CROSS_CHANNEL_FAILED_JOIN_DEST=\"CROSS_CHANNEL_FAILED_JOIN_DEST\",e.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST=\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",e.CROSS_CHANNEL_SERVER_ERROR_RESPONSE=\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",e.METADATA_OUT_OF_RANGE=\"METADATA_OUT_OF_RANGE\",e.LOCAL_AEC_ERROR=\"LOCAL_AEC_ERROR\",e.INVALID_PLUGIN=\"INVALID_PLUGIN\",e.DISCONNECT_P2P=\"DISCONNECT_P2P\",e.INIT_WEBSOCKET_TIMEOUT=\"INIT_WEBSOCKET_TIMEOUT\",e.CONVERTING_IMAGEDATA_TO_BLOB_FAILED=\"CONVERTING_IMAGEDATA_TO_BLOB_FAILED\",e.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED=\"CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED\",e.INIT_DATACHANNEL_TIMEOUT=\"INIT_DATACHANNEL_TIMEOUT\",e.DATACHANNEL_CONNECTION_TIMEOUT=\"DATACHANNEL_CONNECTION_TIMEOUT\",e.PROHIBITED_OPERATION=\"PROHIBITED_OPERATION\",e.IMAGE_MODERATION_UPLOAD_FAILED=\"IMAGE_MODERATION_UPLOAD_FAILED\"}(xg||(xg={}));let Vg=class extends Error{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",i=arguments.length>2?arguments[2]:void 0;super(t),nu(this,\"code\",void 0),nu(this,\"message\",void 0),nu(this,\"data\",void 0),nu(this,\"name\",\"AgoraRTCException\"),this.code=e,this.message=\"AgoraRTCError \".concat(this.code,\": \").concat(t),this.data=i}toString(){return this.data?\"data: \".concat(JSON.stringify(this.data),\"\\n\").concat(this.stack):\"\".concat(this.stack)}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\",t=arguments.length>1?arguments[1]:void 0;return\"error\"===e&&(t||console).error(this.toString()),\"warning\"===e&&(t||console).warn(this.toString()),this}throw(e){throw this.print(\"error\",e),this}};function Fg(e,t){if(\"boolean\"!=typeof e)throw new Vg(xg.INVALID_PARAMS,\"Invalid \".concat(t,\": The value is of the boolean type.\"))}function Bg(e,t,i){if(Pr(i).call(i,e))return;throw new Vg(xg.INVALID_PARAMS,\"\".concat(t,\" can only be set as \").concat(JSON.stringify(i)))}function jg(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e4;if(e<i||e>n||(!(arguments.length>4&&void 0!==arguments[4])||arguments[4])&&!function(e){return\"number\"==typeof e&&e%1==0}(e)){throw new Vg(xg.INVALID_PARAMS,\"invalid \".concat(t,\": the value range is [\").concat(i,\", \").concat(n,\"]. integer only\"))}}function Gg(e,t){if(\"number\"!=typeof e){if(!(e.min||e.max||e.ideal||e.exact)){throw new Vg(xg.INVALID_PARAMS,\"\".concat(t,\" is not a valid ConstrainLong\"))}void 0!==e.min&&jg(e.min,\"\".concat(t,\".min\"),0,1/0),void 0!==e.max&&jg(e.max,\"\".concat(t,\".max\"),1,1/0),void 0!==e.exact&&jg(e.exact,\"\".concat(t,\".exact\"),1,1/0),void 0!==e.ideal&&jg(e.ideal,\"\".concat(t,\".ideal\"),1,1/0)}else jg(e,t,1,1/0)}function Wg(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:255,r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(null==e)throw new Vg(xg.INVALID_PARAMS,\"\".concat(t||\"param\",\" cannot be empty\"));if(!Yg(e,i,n,r))throw new Vg(xg.INVALID_PARAMS,\"Invalid \".concat(t||\"string param\",\": Length of the string: [\").concat(i,\",\").concat(n,\"].\").concat(r?\" ASCII characters only.\":\"\"))}function Hg(e,t){if(!Array.isArray(e))throw new Vg(xg.INVALID_PARAMS,\"\".concat(t,\" should be an array\"))}function Kg(e){return null==e}function Yg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:255,n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return\"string\"==typeof e&&e.length<=i&&e.length>=t&&(!n||function(e){if(\"string\"!=typeof e)return!1;for(let t=0;t<e.length;t+=1){const i=e.charCodeAt(t);if(i<0||i>255)return!1}return!0}(e))}function qg(e,t,i){if(\"getBigUint64\"in DataView.prototype)return e.getBigUint64(t,i);const n=e.getUint32(t,i),r=e.getUint32(t+4,i),s=Number(!!i),o=Number(!i);return BigInt(n*o+r*s)<<BigInt(32)|BigInt(n*s+r*o)}function Jg(e,t,i,n){if(\"setBigUint64\"in DataView.prototype)return e.setBigUint64(t,i,n);const r=Number(i>>BigInt(32)),s=Number(i&BigInt(4294967295));n?(e.setUint32(t+4,r,n),e.setUint32(t,s,n)):(e.setUint32(t,r,n),e.setUint32(t+4,s,n))}var zg,Xg;!function(e){e.COVERED=\"COVERED\",e.POSITION=\"POSITION\",e.SIZE=\"SIZE\",e.STYLE=\"STYLE\"}(zg||(zg={})),function(e){e.UNMOUNTED=\"UNMOUNTED\",e.INVALID_HTML_ELEMENT=\"INVALID_HTML_ELEMENT\"}(Xg||(Xg={}));const Qg=new class{constructor(){nu(this,\"_clientSize\",null),nu(this,\"getClientWidth\",(()=>document.documentElement?document.documentElement.clientWidth:document.body.clientWidth)),nu(this,\"getClientHeight\",(()=>document.documentElement?document.documentElement.clientHeight:document.body.clientHeight)),nu(this,\"getStyle\",(e=>window.getComputedStyle(e,null))),nu(this,\"checkCssVisibleProperty\",(e=>{var t;let i=!0;const n=this.getStyle(e),{display:r,visibility:s,opacity:o,filter:a}=n;if((\"none\"===r||Pr(t=[\"hidden\",\"collapse\"]).call(t,s)||Number(o)<.1)&&(i=!1),!i)return!1;if(a){a.split(\" \").filter((e=>{var t;const i=e.split(\"(\")[0];return Pr(t=[\"brightness\",\"blur\",\"opacity\"]).call(t,i)})).map((e=>{const[t,i]=e.split(/\\(|\\)/);return[t,Number(i.match(/^[0-9\\.]+/))]})).forEach((e=>{const[t,n]=e;switch(t){case\"brightness\":(n<.1||n>3)&&(i=!1);break;case\"blur\":n>3&&(i=!1);break;case\"opacity\":n<.1&&(i=!1)}}))}return i})),nu(this,\"checkPropertyUpToAllParentNodes\",((e,t)=>{let i=!0,n=!0;const r=e=>t(e);let s=e;for(;s&&n;){r(s)||(i=!1,n=!1),s=s.parentElement,s||(n=!1)}return i})),nu(this,\"checkActualCssVisibleIncludeInherit\",(e=>this.checkPropertyUpToAllParentNodes(e,this.checkCssVisibleProperty))),nu(this,\"getSizeAboutClient\",(e=>{const{width:t,height:i,left:n,right:r,top:s,bottom:o}=e.getBoundingClientRect(),a=this.getClientWidth(),c=this.getClientHeight();return{width:t,height:i,left:n,right:r,top:s,bottom:o,clientWidth:a,clientHeight:c,clientMin:Math.min(a,c)}})),nu(this,\"checkActualSize\",(()=>{const{width:e,height:t,clientMin:i}=this._clientSize;return this.checkSizeIsVisible(e,t,i)})),nu(this,\"elementFromPoint\",((e,t)=>document.elementFromPoint?document.elementFromPoint(e,t):null)),nu(this,\"checkCoverForAPoint\",((e,t,i)=>{const n=this.elementFromPoint(e,t);return null!==n&&n!==i})),nu(this,\"getPointPositionList\",(()=>{const{width:e,height:t,left:i,top:n}=this._clientSize,r=e/6,s=t/6,o=[],a=10**6;for(let e=0;e<5;e++)for(let t=0;t<5;t++){const c=(i*a+(0===e?.1:4===e?(r*e*a-1e5)/a:r*e)*a)/a,d=(n*a+(0===t?.1:4===t?(s*t*a-1e5)/a:s*t)*a)/a;o.push({x:c,y:d})}return[...o]})),nu(this,\"checkElementCover\",(e=>this.getPointPositionList().map((t=>this.checkCoverForAPoint(t.x,t.y,e))).filter((e=>!!e)).length>6)),nu(this,\"checkSizeIsVisible\",((e,t,i)=>(e>50||i/e<=10)&&(t>50||i/t<=10))),nu(this,\"checkSizeOfPartInClient\",(()=>{const{left:e,right:t,top:i,bottom:n,clientHeight:r,clientWidth:s,clientMin:o}=this._clientSize;let a,c,d,l;if(e<0)a=0;else{if(!(e<s))return!1;a=e}if(t<0)return!1;if(c=t<s?t:s,i<0)d=0;else{if(!(i<r))return!1;d=i}if(n<0)return!1;l=n<r?n:r;const h=c-a,u=l-d;return this.checkSizeIsVisible(h,u,o)})),nu(this,\"returnHiddenResult\",(e=>(this._clientSize=null,{visible:!1,reason:e}))),nu(this,\"checkOneElementVisible\",(e=>{if(e instanceof HTMLElement){if(this.checkElementIsMountedOnDom(e)){if(this.checkActualCssVisibleIncludeInherit(e)){if(this._clientSize=this.getSizeAboutClient(e),this.checkElementCover(e))return this.returnHiddenResult(zg.COVERED);{const e=this.checkActualSize(),t=this.checkSizeOfPartInClient();return e&&!t?this.returnHiddenResult(zg.POSITION):e?(this._clientSize=null,{visible:!0}):this.returnHiddenResult(zg.SIZE)}}return this.returnHiddenResult(zg.STYLE)}return this.returnHiddenResult(Xg.UNMOUNTED)}return this.returnHiddenResult(Xg.INVALID_HTML_ELEMENT)})),nu(this,\"checkElementIsMountedOnDom\",(e=>this.checkPropertyUpToAllParentNodes(e,(e=>\"HTML\"!==e.nodeName.toUpperCase()?null!==e.parentElement:!!document.documentElement))))}};function Zg(e){return(new TextEncoder).encode(e)}const $g=function(e,t){const i=new Uint8Array(e.byteLength+t.byteLength);return i.set(new Uint8Array(e),0),i.set(new Uint8Array(t),e.byteLength),i};const eT=async e=>{const t=function(e){const t=window.atob(e),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}(\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCMnXAHkKIGAM+x4N22gCI+Wyu\\nSTM9ztkT3uYslTT2PuKmZfPzhH6kVdO7PTjGCOZnAsyb3oTtWat0KcxQ4jxvqQV+\\nHvYl3iI1Yd4vl2c3qRMJPLtRDfNxa2Mcxgq7e9aEUibzdd0st+OJAy3tOj/Y0aVy\\nxQiYDz3vqa6bP29adwIDAQAB\"),i=await window.crypto.subtle.importKey(\"spki\",t,{name:\"RSA-OAEP\",hash:\"SHA-256\"},!0,[\"encrypt\"]),n=Zg(e),r=await window.crypto.subtle.encrypt({name:\"RSA-OAEP\"},i,n);return function(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}(new Uint8Array(r))},tT=async e=>function(e,t){let i=\"\";return new Uint8Array(e).forEach((e=>{i+=e.toString(t).padStart(2,\"0\")})),i}(await crypto.subtle.digest(\"SHA-256\",Zg(e)),16);class iT{constructor(){nu(this,\"_events\",{}),nu(this,\"addListener\",this.on)}getListeners(e){return this._events[e]?this._events[e].map((e=>e.listener)):[]}on(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const i=this._events[e],n=this._indexOfListener(i,t);-1!==n&&i.splice(n,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map((e=>e));for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];for(let i=0;i<t.length;i+=1){const r=t[i];r.once&&this.off(e,r.listener),r.listener.apply(this,n||[])}}safeEmit(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];[...this._events[e]||[]].forEach((t=>{t.once&&this.off(e,t.listener);try{t.listener.apply(this,i)}catch(t){console.error(\"safeEmit event:\".concat(e,\" error \").concat(null==t?void 0:t.toString()))}}))}_indexOfListener(e,t){let i=e.length;for(;i--;)if(e[i].listener===t)return i;return-1}}let nT=null;function rT(){if(nT)return nT;if(window.electron)return nT=window.electron;if(!window.require)return null;try{return nT=window.require(\"electron\"),nT}catch(e){return null}}var sT,oT,aT,cT,dT,lT,hT,uT;function pT(e){return jg(e.timeout,\"config.timeout\",0,1e5),jg(e.timeoutFactor,\"config.timeoutFactor\",0,100,!1),jg(e.maxRetryCount,\"config.maxRetryConfig\",0,1/0),jg(e.maxRetryTimeout,\"config.maxRetryTimeout\",0,1/0),!0}function _T(e){if(!Array.isArray(e)||e.length<1)return!1;try{e.forEach((e=>{if(!e.urls)throw Error()}))}catch(e){return!1}return!0}function ET(e){return Wg(e.turnServerURL,\"turnServerURL\"),Wg(e.username,\"username\"),Wg(e.password,\"password\"),e.udpport&&jg(e.udpport,\"udpport\",1,99999,!0),e.forceturn&&Fg(e.forceturn,\"forceturn\"),e.security&&Fg(e.security,\"security\"),e.tcpport&&jg(e.tcpport,\"tcpport\",1,99999,!0),!0}function mT(e){return void 0!==e.level&&Bg(e.level,\"level\",[1,2,3]),void 0!==e.delay&&jg(e.delay,\"delay\",0,3e3,!0),!0}function fT(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return 0===e.getListeners(t).length?tg.reject(new Vg(xg.UNEXPECTED_ERROR,\"can not emit promise\")):new tg(((i,r)=>{e.emit(t,...n,i,r)}))}function gT(e,t){if(0===e.getListeners(t).length)return tg.resolve();for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return fT(e,t,...n)}function TT(e,t){if(0===e.getListeners(t).length)return null;for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return ST(e,t,...n)}function ST(e,t){let i=null,n=null;for(var r=arguments.length,s=new Array(r>2?r-2:0),o=2;o<r;o++)s[o-2]=arguments[o];if(e.emit(t,...s,(e=>{i=e}),(e=>{n=e})),null!==n)throw n;if(null===i)throw new Vg(xg.UNEXPECTED_ERROR,\"handler is not sync\");return i}!function(e){e.CREATE_CLIENT=\"createClient\",e.CHECK_SYSTEM_REQUIREMENTS=\"checkSystemRequirements\",e.SET_AREA=\"setArea\",e.CHECK_VIDEO_TRACK_IS_ACTIVE=\"checkVideoTrackIsActive\",e.CHECK_AUDIO_TRACK_IS_ACTIVE=\"checkAudioTrackIsActive\",e.CREATE_MIC_AUDIO_TRACK=\"createMicrophoneAudioTrack\",e.CREATE_CUSTOM_AUDIO_TRACK=\"createCustomAudioTrack\",e.CREATE_BUFFER_AUDIO_TRACK=\"createBufferSourceAudioTrack\",e.CREATE_CAM_VIDEO_TRACK=\"createCameraVideoTrack\",e.CREATE_CUSTOM_VIDEO_TRACK=\"createCustomVideoTrack\",e.CREATE_MIC_AND_CAM_TRACKS=\"createMicrophoneAndCameraTracks\",e.CREATE_SCREEN_VIDEO_TRACK=\"createScreenVideoTrack\",e.SET_ENCRYPTION_CONFIG=\"Client.setEncryptionConfig\",e.START_PROXY_SERVER=\"Client.startProxyServer\",e.STOP_PROXY_SERVER=\"Client.stopProxyServer\",e.SET_PROXY_SERVER=\"Client.setProxyServer\",e.SET_TURN_SERVER=\"Client.setTurnServer\",e.SET_CLIENT_ROLE=\"Client.setClientRole\",e.SET_LOW_STREAM_PARAMETER=\"Client.setLowStreamParameter\",e.ENABLE_DUAL_STREAM=\"Client.enableDualStream\",e.DISABLE_DUAL_STREAM=\"Client.disableDualStream\",e.JOIN=\"Client.join\",e.LEAVE=\"Client.leave\",e.PUBLISH=\"Client.publish\",e.UNPUBLISH=\"Client.unpublish\",e.SUBSCRIBE=\"Client.subscribe\",e.MASS_SUBSCRIBE=\"Client.massSubscribe\",e.MASS_UNSUBSCRIBE=\"Client.massUnsubscribe\",e.UNSUBSCRIBE=\"Client.unsubscribe\",e.RENEW_TOKEN=\"Client.renewToken\",e.SET_REMOTE_VIDEO_STREAM_TYPE=\"Client.setRemoteVideoStreamType\",e.SET_STREAM_FALLBACK_OPTION=\"Client.setStreamFallbackOption\",e.ENABLE_AUDIO_VOLUME_INDICATOR=\"Client.enableAudioVolumeIndicator\",e.SEND_CUSTOM_REPORT_MESSAGE=\"Client.sendCustomReportMessage\",e.INSPECT_VIDEO_CONTENT=\"Client.inspectVideoContent\",e.STOP_INSPECT_VIDEO_CONTENT=\"Client.stopInspectVideoContent\",e.JOIN_FALLBACK_TO_PROXY=\"Client._joinFallbackToProxy\",e.DATACHANNEL_FAILBACK=\"Client._datachannelFailback\",e.ON_LIVE_STREAM_WARNING=\"Client.onLiveStreamWarning\",e.ON_LIVE_STREAM_ERROR=\"Client.onLiveStreamingError\",e.START_LIVE_STREAMING=\"Client.startLiveStreaming\",e.SET_LIVE_TRANSCODING=\"Client.setLiveTranscoding\",e.STOP_LIVE_STREAMING=\"Client.stopLiveStreaming\",e.ADD_INJECT_STREAM_URL=\"Client.addInjectStreamUrl\",e.REMOVE_INJECT_STREAM_URL=\"Client.removeInjectStreamUrl\",e.START_CHANNEL_MEDIA_RELAY=\"Client.startChannelMediaRelay\",e.UPDATE_CHANNEL_MEDIA_RELAY=\"Client.updateChannelMediaRelay\",e.STOP_CHANNEL_MEDIA_RELAY=\"Client.stopChannelMediaRelay\",e.REQUEST_CONFIG_DISTRIBUTE=\"_config-distribute-request\",e.SET_CONFIG_DISTRIBUTE=\"_configDistribute\",e.LOCAL_TRACK_SET_MUTED=\"LocalTrack.setMute\",e.LOCAL_AUDIO_TRACK_PLAY=\"LocalAudioTrack.play\",e.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT=\"LocalAudioTrack.playInElement\",e.LOCAL_AUDIO_TRACK_STOP=\"LocalAudioTrack.stop\",e.LOCAL_AUDIO_TRACK_SET_VOLUME=\"LocalAudioTrack.setVolume\",e.MIC_AUDIO_TRACK_SET_DEVICE=\"MicrophoneAudioTrack.setDevice\",e.BUFFER_AUDIO_TRACK_START=\"BufferSourceAudioTrack.startProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_STOP=\"BufferSourceAudioTrack.stopProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_PAUSE=\"BufferSourceAudioTrack.pauseProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_RESUME=\"BufferSourceAudioTrack.resumeProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_SEEK=\"BufferSourceAudioTrack.seekAudioBuffer\",e.LOCAL_VIDEO_TRACK_PLAY=\"LocalVideoTrack.play\",e.LOCAL_VIDEO_TRACK_STOP=\"LocalVideoTrack.stop\",e.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"LocalVideoTrack.getVideoElementVisibleStatus\",e.LOCAL_VIDEO_TRACK_BEAUTY=\"LocalVideoTrack.setBeautyEffect\",e.CAM_VIDEO_TRACK_SET_DEVICE=\"CameraVideoTrack.setDevice\",e.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG=\"CameraVideoTrack.setEncoderConfiguration\",e.REMOTE_VIDEO_TRACK_PLAY=\"RemoteVideoTrack.play\",e.REMOTE_VIDEO_TRACK_STOP=\"RemoteVideoTrack.stop\",e.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"RemoteVideoTrack.getVideoElementVisibleStatus\",e.REMOTE_AUDIO_TRACK_PLAY=\"RemoteAudioTrack.play\",e.REMOTE_AUDIO_TRACK_STOP=\"RemoteAudioTrack.stop\",e.REMOTE_AUDIO_SET_VOLUME=\"RemoteAudioTrack.setVolume\",e.REMOTE_AUDIO_SET_OUTPUT_DEVICE=\"RemoteAudioTrack.setOutputDevice\",e.GET_MEDIA_STREAM_TRACK=\"Track.getMediaStreamTrack\",e.STREAM_TYPE_CHANGE=\"streamTypeChange\",e.CONNECTION_STATE_CHANGE=\"connectionStateChange\",e.LOAD_CONFIG_FROM_LOCALSTORAGE=\"loadConfigFromLocalStorage\",e.IMAGE_MODERATION_UPLOAD=\"imageModerationUpload\"}(sT||(sT={})),function(e){e.TRACER=\"tracer\"}(oT||(oT={})),function(e){e[e.AUDIENCE_LEVEL_LOW_LATENCY=1]=\"AUDIENCE_LEVEL_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_ULTRA_LOW_LATENCY=2]=\"AUDIENCE_LEVEL_ULTRA_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_SYNC_LATENCY=3]=\"AUDIENCE_LEVEL_SYNC_LATENCY\"}(aT||(aT={})),function(e){e.LEAVE=\"LEAVE\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.UID_BANNED=\"UID_BANNED\",e.IP_BANNED=\"IP_BANNED\",e.CHANNEL_BANNED=\"CHANNEL_BANNED\",e.FALLBACK=\"FALLBACK\",e.LICENSE_MISSING=\"LICENSE_MISSING\",e.LICENSE_EXPIRED=\"LICENSE_EXPIRED\",e.LICENSE_MINUTES_EXCEEDED=\"LICENSE_MINUTES_EXCEEDED\",e.LICENSE_PERIOD_INVALID=\"LICENSE_PERIOD_INVALID\",e.LICENSE_MULTIPLE_SDK_SERVICE=\"LICENSE_MULTIPLE_SDK_SERVICE\",e.LICENSE_ILLEGAL=\"LICENSE_ILLEGAL\",e.TOKEN_EXPIRE=\"TOKEN_EXPIRE\"}(cT||(cT={})),function(e){e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.MEDIA_RECONNECT_START=\"media-reconnect-start\",e.MEDIA_RECONNECT_END=\"media-reconnect-end\",e.IS_USING_CLOUD_PROXY=\"is-using-cloud-proxy\",e.USER_JOINED=\"user-joined\",e.USER_LEAVED=\"user-left\",e.USER_PUBLISHED=\"user-published\",e.USER_UNPUBLISHED=\"user-unpublished\",e.USER_INFO_UPDATED=\"user-info-updated\",e.CLIENT_BANNED=\"client-banned\",e.CHANNEL_MEDIA_RELAY_STATE=\"channel-media-relay-state\",e.CHANNEL_MEDIA_RELAY_EVENT=\"channel-media-relay-event\",e.VOLUME_INDICATOR=\"volume-indicator\",e.CRYPT_ERROR=\"crypt-error\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"token-privilege-will-expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"token-privilege-did-expire\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGED=\"stream-type-changed\",e.STREAM_FALLBACK=\"stream-fallback\",e.RECEIVE_METADATA=\"receive-metadata\",e.STREAM_MESSAGE=\"stream-message\",e.LIVE_STREAMING_ERROR=\"live-streaming-error\",e.LIVE_STREAMING_WARNING=\"live-streaming-warning\",e.INJECT_STREAM_STATUS=\"stream-inject-status\",e.EXCEPTION=\"exception\",e.ERROR=\"error\",e.P2P_LOST=\"p2p_lost\",e.JOIN_FALLBACK_TO_PROXY=\"join-fallback-to-proxy\",e.CHANNEL_FALLBACK_TO_WEBSOCKET=\"channel-fallback-to-websocket\",e.MEDIA_CONNECTION_TYPE_CHANGE=\"media-connection-type-change\",e.PUBLISHED_USER_LIST=\"published-user-list\",e.CONTENT_INSPECT_CONNECTION_STATE_CHANGE=\"content-inspect-connection-state-change\",e.CONTENT_INSPECT_ERROR=\"content-inspect-error\",e.CONTENT_INSPECT_RESULT=\"content-inspect-result\",e.IMAGE_MODERATION_CONNECTION_STATE_CHANGE=\"image-moderation-connection-state-change\"}(dT||(dT={})),function(e){e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\"}(lT||(lT={})),function(e){e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\"}(hT||(hT={})),function(e){e.NETWORK_STATE_CHANGE=\"NETWORK_STATE_CHANGE\",e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\"}(uT||(uT={}));const RT=new class extends iT{set networkState(e){this.emit(uT.NETWORK_STATE_CHANGE,e,this._networkState),e===hT.ONLINE?this.emit(uT.ONLINE):e===hT.OFFLINE&&(this.onlineWaiter=new tg((e=>{this.once(uT.ONLINE,(()=>{this.onlineWaiter=void 0,e(hT.ONLINE)}))})),this.emit(uT.OFFLINE)),this._networkState=e}get networkState(){return this._networkState}get isOnline(){return this._networkState===hT.ONLINE}constructor(){super(),nu(this,\"_moduleName\",\"network-indicator\"),nu(this,\"_networkState\",hT.ONLINE),nu(this,\"onlineWaiter\",void 0),window.addEventListener(\"online\",(()=>{this.networkState=hT.ONLINE})),window.addEventListener(\"offline\",(()=>{this.networkState=hT.OFFLINE}))}};function CT(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function vT(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?CT(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):CT(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function IT(e,t){const i=e.indexOf(t);-1!==i&&e.splice(i,1)}function yT(e){const t=[];return e.forEach((e=>{-1===t.indexOf(e)&&t.push(e)})),t}function AT(e){void 0!==tg?tg.resolve().then(e):setTimeout(e,0)}function bT(e){return JSON.parse(JSON.stringify(e))}function wT(e){try{return bT(e)}catch(t){return e}}const OT={};function NT(e,t){OT[t]||(OT[t]=!0,e())}function DT(e){const t=window.atob(e),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}function PT(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}function LT(e){return window.TextEncoder?(new TextEncoder).encode(e).length:e.length}function kT(e){let t=0;return/DingTalk/i.test(navigator.userAgent)&&e.realFormData&&(e=e.realFormData),e.forEach((e=>{t+=\"string\"==typeof e?LT(e):e.size})),t+138}function MT(e){const t=new Vg(xg.TIMEOUT,\"timeout\");return new tg(((i,n)=>{window.setTimeout((()=>n(t)),e)}))}function UT(e){return new tg((t=>{window.setTimeout(t,e)}))}function xT(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const i=Math.random().toString(16).substr(2,e).toLowerCase();return i.length===e?\"\".concat(t).concat(i):\"\".concat(t).concat(i)+xT(e-i.length,\"\")}function VT(){return xT(32,\"\").toUpperCase()}const FT=()=>{};const BT=new class{constructor(){nu(this,\"fnMap\",new Map)}throttleByKey(e,t,i,n){for(var r=arguments.length,s=new Array(r>4?r-4:0),o=4;o<r;o++)s[o-4]=arguments[o];if(this.fnMap.has(t)){const r=this.fnMap.get(t);if(r.threshold!==i){r.fn(...r.args),clearTimeout(r.timer);const o=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:o,args:s,skipFn:n})}else r.skipFn&&r.skipFn(...r.args),this.fnMap.set(t,vT(vT({},r),{},{fn:e,args:s,skipFn:n}))}else{const r=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:r,args:s,skipFn:n})}}},jT=BT.throttleByKey.bind(BT);function GT(e){return\"object\"==typeof e&&null!==e&&!(e instanceof RegExp)}function WT(e,t){if(!GT(e)||!GT(t))return t;if(Array.isArray(e)&&!Array.isArray(t)||!Array.isArray(e)&&Array.isArray(t))return t;if(Array.isArray(t)&&Array.isArray(e)){const i=[...e];for(let n=0;n<t.length;n++)i[n]=WT(e[n],t[n]);return i}{const i=vT({},e);for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(Object.prototype.hasOwnProperty.call(e,n)?i[n]=WT(e[n],t[n]):i[n]=t[n]);return i}}let HT=1,KT=console;class YT{static setLogger(e){KT=e}constructor(e){nu(this,\"lockingPromise\",tg.resolve()),nu(this,\"locks\",0),nu(this,\"name\",\"\"),nu(this,\"lockId\",void 0),this.lockId=HT++,e&&(this.name=e),KT.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is created.\"))}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1,KT.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\"));const i=new tg((i=>{t=()=>{this.locks-=1,KT.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is not locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\")),i()}})),n=this.lockingPromise.then((()=>t));return this.lockingPromise=this.lockingPromise.then((()=>i)),n}}function qT(e,t){return function(i,n,r){const s=r.value;if(\"function\"!=typeof s)throw new Error(\"Cannot use mutex on object property.\");return r.value=async function(){const i=this[t];if(!i)throw new Error(\"mutex property key \".concat(t,\" doesn't exist on \").concat(e));const r=await i.lock(\"From \".concat(e,\".\").concat(n));try{for(var o=arguments.length,a=new Array(o),c=0;c<o;c++)a[c]=arguments[c];return await s.apply(this,a)}finally{r()}},r}}const JT={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1e4};function zT(e,t){const i=Math.floor(t.timeout*Math.pow(t.timeoutFactor,e));return Math.min(t.maxRetryTimeout,i)}function XT(e,t,i,n){const r=Object.assign({},JT,n);let s=r.timeout;const o=async()=>{await function(e){return new tg((t=>{window.setTimeout(t,e)}))}(s),s*=r.timeoutFactor,s=Math.min(r.maxRetryTimeout,s)};let a=!1;const c=new tg((async(n,s)=>{t=t||(()=>!1),i=i||(()=>!0);for(let c=0;c<r.maxRetryCount;c+=1){if(a)return s(new Vg(xg.OPERATION_ABORTED));try{const i=await e();if(!t(i,c))return n(i);if(c+1===r.maxRetryCount)return n(i);await o()}catch(e){if(!i(e,c))return s(e);if(c+1===r.maxRetryCount)return s(e);await o()}}}));return c.cancel=()=>a=!0,c}var QT=Ut,ZT=ei,$T=Xe,eS=Yn,tS=TypeError,iS=function(e){return function(t,i,n,r){QT(i);var s=ZT(t),o=$T(s),a=eS(s),c=e?a-1:0,d=e?-1:1;if(n<2)for(;;){if(c in o){r=o[c],c+=d;break}if(c+=d,e?c<0:a<=c)throw tS(\"Reduce of empty array with no initial value\")}for(;e?c>=0:a>c;c+=d)c in o&&(r=i(r,o[c],c,s));return r}},nS={left:iS(!1),right:iS(!0)}.left;kn({target:\"Array\",proto:!0,forced:!C_&&St>79&&St<83||!Ru(\"reduce\")},{reduce:function(e){var t=arguments.length;return nS(this,e,t,t>1?arguments[1]:void 0)}});var rS=er(\"Array\").reduce,sS=Ee,oS=rS,aS=Array.prototype,cS=J((function(e){var t=e.reduce;return e===aS||sS(aS,e)&&t===aS.reduce?oS:t}));let dS=class{constructor(e){nu(this,\"input\",[]),nu(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}mean(){var e;return 0===this.input.length?0:cS(e=this.input).call(e,((e,t)=>e+t))/this.input.length}};var lS,hS={exports:{}},uS=function(e,t){return function(){for(var i=new Array(arguments.length),n=0;n<i.length;n++)i[n]=arguments[n];return e.apply(t,i)}},pS=uS,_S=Object.prototype.toString,ES=(lS=Object.create(null),function(e){var t=_S.call(e);return lS[t]||(lS[t]=t.slice(8,-1).toLowerCase())});function mS(e){return e=e.toLowerCase(),function(t){return ES(t)===e}}function fS(e){return Array.isArray(e)}function gS(e){return void 0===e}var TS=mS(\"ArrayBuffer\");function SS(e){return null!==e&&\"object\"==typeof e}function RS(e){if(\"object\"!==ES(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var CS=mS(\"Date\"),vS=mS(\"File\"),IS=mS(\"Blob\"),yS=mS(\"FileList\");function AS(e){return\"[object Function]\"===_S.call(e)}var bS=mS(\"URLSearchParams\");function wS(e,t){if(null!=e)if(\"object\"!=typeof e&&(e=[e]),fS(e))for(var i=0,n=e.length;i<n;i++)t.call(null,e[i],i,e);else for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.call(null,e[r],r,e)}var OS,NS=(OS=\"undefined\"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(e){return OS&&e instanceof OS}),DS={isArray:fS,isArrayBuffer:TS,isBuffer:function(e){return null!==e&&!gS(e)&&null!==e.constructor&&!gS(e.constructor)&&\"function\"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){var t=\"[object FormData]\";return e&&(\"function\"==typeof FormData&&e instanceof FormData||_S.call(e)===t||AS(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&TS(e.buffer)},isString:function(e){return\"string\"==typeof e},isNumber:function(e){return\"number\"==typeof e},isObject:SS,isPlainObject:RS,isUndefined:gS,isDate:CS,isFile:vS,isBlob:IS,isFunction:AS,isStream:function(e){return SS(e)&&AS(e.pipe)},isURLSearchParams:bS,isStandardBrowserEnv:function(){return(\"undefined\"==typeof navigator||\"ReactNative\"!==navigator.product&&\"NativeScript\"!==navigator.product&&\"NS\"!==navigator.product)&&(\"undefined\"!=typeof window&&\"undefined\"!=typeof document)},forEach:wS,merge:function e(){var t={};function i(i,n){RS(t[n])&&RS(i)?t[n]=e(t[n],i):RS(i)?t[n]=e({},i):fS(i)?t[n]=i.slice():t[n]=i}for(var n=0,r=arguments.length;n<r;n++)wS(arguments[n],i);return t},extend:function(e,t,i){return wS(t,(function(t,n){e[n]=i&&\"function\"==typeof t?pS(t,i):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\\s+|\\s+$/g,\"\")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,i,n){e.prototype=Object.create(t.prototype,n),e.prototype.constructor=e,i&&Object.assign(e.prototype,i)},toFlatObject:function(e,t,i){var n,r,s,o={};t=t||{};do{for(r=(n=Object.getOwnPropertyNames(e)).length;r-- >0;)o[s=n[r]]||(t[s]=e[s],o[s]=!0);e=Object.getPrototypeOf(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:ES,kindOfTest:mS,endsWith:function(e,t,i){e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;var n=e.indexOf(t,i);return-1!==n&&n===i},toArray:function(e){if(!e)return null;var t=e.length;if(gS(t))return null;for(var i=new Array(t);t-- >0;)i[t]=e[t];return i},isTypedArray:NS,isFileList:yS},PS=DS;function LS(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}var kS=function(e,t,i){if(!t)return e;var n;if(i)n=i(t);else if(PS.isURLSearchParams(t))n=t.toString();else{var r=[];PS.forEach(t,(function(e,t){null!=e&&(PS.isArray(e)?t+=\"[]\":e=[e],PS.forEach(e,(function(e){PS.isDate(e)?e=e.toISOString():PS.isObject(e)&&(e=JSON.stringify(e)),r.push(LS(t)+\"=\"+LS(e))})))})),n=r.join(\"&\")}if(n){var s=e.indexOf(\"#\");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+n}return e},MS=DS;function US(){this.handlers=[]}US.prototype.use=function(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1},US.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},US.prototype.forEach=function(e){MS.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var xS,VS,FS=US,BS=DS;function jS(){if(VS)return xS;VS=1;var e=DS;function t(e,t,i,n,r){Error.call(this),this.message=e,this.name=\"AxiosError\",t&&(this.code=t),i&&(this.config=i),n&&(this.request=n),r&&(this.response=r)}e.inherits(t,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var i=t.prototype,n={};return[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\"].forEach((function(e){n[e]={value:e}})),Object.defineProperties(t,n),Object.defineProperty(i,\"isAxiosError\",{value:!0}),t.from=function(n,r,s,o,a,c){var d=Object.create(i);return e.toFlatObject(n,d,(function(e){return e!==Error.prototype})),t.call(d,n.message,r,s,o,a),d.name=n.name,c&&Object.assign(d,c),d},xS=t}var GS,WS,HS,KS,YS,qS,JS={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};function zS(){if(WS)return GS;WS=1;var e=DS;return GS=function(t,i){i=i||new FormData;var n=[];function r(t){return null===t?\"\":e.isDate(t)?t.toISOString():e.isArrayBuffer(t)||e.isTypedArray(t)?\"function\"==typeof Blob?new Blob([t]):Buffer.from(t):t}return function t(s,o){if(e.isPlainObject(s)||e.isArray(s)){if(-1!==n.indexOf(s))throw Error(\"Circular reference detected in \"+o);n.push(s),e.forEach(s,(function(n,s){if(!e.isUndefined(n)){var a,c=o?o+\".\"+s:s;if(n&&!o&&\"object\"==typeof n)if(e.endsWith(s,\"{}\"))n=JSON.stringify(n);else if(e.endsWith(s,\"[]\")&&(a=e.toArray(n)))return void a.forEach((function(t){!e.isUndefined(t)&&i.append(c,r(t))}));t(n,c)}})),n.pop()}else i.append(o,r(s))}(t),i},GS}function XS(){if(KS)return HS;KS=1;var e=jS();return HS=function(t,i,n){var r=n.config.validateStatus;n.status&&r&&!r(n.status)?i(new e(\"Request failed with status code \"+n.status,[e.ERR_BAD_REQUEST,e.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):t(n)}}function QS(){if(qS)return YS;qS=1;var e=DS;return YS=e.isStandardBrowserEnv()?{write:function(t,i,n,r,s,o){var a=[];a.push(t+\"=\"+encodeURIComponent(i)),e.isNumber(n)&&a.push(\"expires=\"+new Date(n).toGMTString()),e.isString(r)&&a.push(\"path=\"+r),e.isString(s)&&a.push(\"domain=\"+s),!0===o&&a.push(\"secure\"),document.cookie=a.join(\"; \")},read:function(e){var t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},YS}var ZS,$S,eR,tR,iR,nR,rR,sR,oR,aR,cR,dR,lR=function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)},hR=function(e,t){return t?e.replace(/\\/+$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e},uR=function(e,t){return e&&!lR(t)?hR(e,t):t};function pR(){if($S)return ZS;$S=1;var e=DS,t=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"];return ZS=function(i){var n,r,s,o={};return i?(e.forEach(i.split(\"\\n\"),(function(i){if(s=i.indexOf(\":\"),n=e.trim(i.substr(0,s)).toLowerCase(),r=e.trim(i.substr(s+1)),n){if(o[n]&&t.indexOf(n)>=0)return;o[n]=\"set-cookie\"===n?(o[n]?o[n]:[]).concat([r]):o[n]?o[n]+\", \"+r:r}})),o):o},ZS}function _R(){if(tR)return eR;tR=1;var e=DS;return eR=e.isStandardBrowserEnv()?function(){var t,i=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement(\"a\");function r(e){var t=e;return i&&(n.setAttribute(\"href\",t),t=n.href),n.setAttribute(\"href\",t),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,\"\"):\"\",host:n.host,search:n.search?n.search.replace(/^\\?/,\"\"):\"\",hash:n.hash?n.hash.replace(/^#/,\"\"):\"\",hostname:n.hostname,port:n.port,pathname:\"/\"===n.pathname.charAt(0)?n.pathname:\"/\"+n.pathname}}return t=r(window.location.href),function(i){var n=e.isString(i)?r(i):i;return n.protocol===t.protocol&&n.host===t.host}}():function(){return!0}}function ER(){if(nR)return iR;nR=1;var e=jS();function t(t){e.call(this,null==t?\"canceled\":t,e.ERR_CANCELED),this.name=\"CanceledError\"}return DS.inherits(t,e,{__CANCEL__:!0}),iR=t}function mR(){return sR||(sR=1,rR=function(e){var t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return t&&t[1]||\"\"}),rR}function fR(){if(aR)return oR;aR=1;var e=DS,t=XS(),i=QS(),n=kS,r=uR,s=pR(),o=_R(),a=JS,c=jS(),d=ER(),l=mR();return oR=function(h){return new Promise((function(u,p){var _,E=h.data,m=h.headers,f=h.responseType;function g(){h.cancelToken&&h.cancelToken.unsubscribe(_),h.signal&&h.signal.removeEventListener(\"abort\",_)}e.isFormData(E)&&e.isStandardBrowserEnv()&&delete m[\"Content-Type\"];var T=new XMLHttpRequest;if(h.auth){var S=h.auth.username||\"\",R=h.auth.password?unescape(encodeURIComponent(h.auth.password)):\"\";m.Authorization=\"Basic \"+btoa(S+\":\"+R)}var C=r(h.baseURL,h.url);function v(){if(T){var e=\"getAllResponseHeaders\"in T?s(T.getAllResponseHeaders()):null,i={data:f&&\"text\"!==f&&\"json\"!==f?T.response:T.responseText,status:T.status,statusText:T.statusText,headers:e,config:h,request:T};t((function(e){u(e),g()}),(function(e){p(e),g()}),i),T=null}}if(T.open(h.method.toUpperCase(),n(C,h.params,h.paramsSerializer),!0),T.timeout=h.timeout,\"onloadend\"in T?T.onloadend=v:T.onreadystatechange=function(){T&&4===T.readyState&&(0!==T.status||T.responseURL&&0===T.responseURL.indexOf(\"file:\"))&&setTimeout(v)},T.onabort=function(){T&&(p(new c(\"Request aborted\",c.ECONNABORTED,h,T)),T=null)},T.onerror=function(){p(new c(\"Network Error\",c.ERR_NETWORK,h,T,T)),T=null},T.ontimeout=function(){var e=h.timeout?\"timeout of \"+h.timeout+\"ms exceeded\":\"timeout exceeded\",t=h.transitional||a;h.timeoutErrorMessage&&(e=h.timeoutErrorMessage),p(new c(e,t.clarifyTimeoutError?c.ETIMEDOUT:c.ECONNABORTED,h,T)),T=null},e.isStandardBrowserEnv()){var I=(h.withCredentials||o(C))&&h.xsrfCookieName?i.read(h.xsrfCookieName):void 0;I&&(m[h.xsrfHeaderName]=I)}\"setRequestHeader\"in T&&e.forEach(m,(function(e,t){void 0===E&&\"content-type\"===t.toLowerCase()?delete m[t]:T.setRequestHeader(t,e)})),e.isUndefined(h.withCredentials)||(T.withCredentials=!!h.withCredentials),f&&\"json\"!==f&&(T.responseType=h.responseType),\"function\"==typeof h.onDownloadProgress&&T.addEventListener(\"progress\",h.onDownloadProgress),\"function\"==typeof h.onUploadProgress&&T.upload&&T.upload.addEventListener(\"progress\",h.onUploadProgress),(h.cancelToken||h.signal)&&(_=function(e){T&&(p(!e||e&&e.type?new d:e),T.abort(),T=null)},h.cancelToken&&h.cancelToken.subscribe(_),h.signal&&(h.signal.aborted?_():h.signal.addEventListener(\"abort\",_))),E||(E=null);var y=l(C);y&&-1===[\"http\",\"https\",\"file\"].indexOf(y)?p(new c(\"Unsupported protocol \"+y+\":\",c.ERR_BAD_REQUEST,h)):T.send(E)}))},oR}var gR=DS,TR=function(e,t){BS.forEach(e,(function(i,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=i,delete e[n])}))},SR=jS(),RR=JS,CR=zS(),vR={\"Content-Type\":\"application/x-www-form-urlencoded\"};function IR(e,t){!gR.isUndefined(e)&&gR.isUndefined(e[\"Content-Type\"])&&(e[\"Content-Type\"]=t)}var yR,AR={transitional:RR,adapter:((\"undefined\"!=typeof XMLHttpRequest||\"undefined\"!=typeof process&&\"[object process]\"===Object.prototype.toString.call(process))&&(yR=fR()),yR),transformRequest:[function(e,t){if(TR(t,\"Accept\"),TR(t,\"Content-Type\"),gR.isFormData(e)||gR.isArrayBuffer(e)||gR.isBuffer(e)||gR.isStream(e)||gR.isFile(e)||gR.isBlob(e))return e;if(gR.isArrayBufferView(e))return e.buffer;if(gR.isURLSearchParams(e))return IR(t,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString();var i,n=gR.isObject(e),r=t&&t[\"Content-Type\"];if((i=gR.isFileList(e))||n&&\"multipart/form-data\"===r){var s=this.env&&this.env.FormData;return CR(i?{\"files[]\":e}:e,s&&new s)}return n||\"application/json\"===r?(IR(t,\"application/json\"),function(e,t,i){if(gR.isString(e))try{return(t||JSON.parse)(e),gR.trim(e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(i||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||AR.transitional,i=t&&t.silentJSONParsing,n=t&&t.forcedJSONParsing,r=!i&&\"json\"===this.responseType;if(r||n&&gR.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(r){if(\"SyntaxError\"===e.name)throw SR.from(e,SR.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:dR?cR:(dR=1,cR=null)},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};gR.forEach([\"delete\",\"get\",\"head\"],(function(e){AR.headers[e]={}})),gR.forEach([\"post\",\"put\",\"patch\"],(function(e){AR.headers[e]=gR.merge(vR)}));var bR,wR,OR=AR,NR=DS,DR=OR;function PR(){return wR?bR:(wR=1,bR=function(e){return!(!e||!e.__CANCEL__)})}var LR=DS,kR=function(e,t,i){var n=this||DR;return NR.forEach(i,(function(i){e=i.call(n,e,t)})),e},MR=PR(),UR=OR,xR=ER();function VR(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new xR}var FR,BR,jR=DS,GR=function(e,t){t=t||{};var i={};function n(e,t){return jR.isPlainObject(e)&&jR.isPlainObject(t)?jR.merge(e,t):jR.isPlainObject(t)?jR.merge({},t):jR.isArray(t)?t.slice():t}function r(i){return jR.isUndefined(t[i])?jR.isUndefined(e[i])?void 0:n(void 0,e[i]):n(e[i],t[i])}function s(e){if(!jR.isUndefined(t[e]))return n(void 0,t[e])}function o(i){return jR.isUndefined(t[i])?jR.isUndefined(e[i])?void 0:n(void 0,e[i]):n(void 0,t[i])}function a(i){return i in t?n(e[i],t[i]):i in e?n(void 0,e[i]):void 0}var c={url:s,method:s,data:s,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:a};return jR.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=c[e]||r,n=t(e);jR.isUndefined(n)&&t!==a||(i[e]=n)})),i};function WR(){return BR?FR:(BR=1,FR={version:\"0.27.2\"})}var HR=WR().version,KR=jS(),YR={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach((function(e,t){YR[e]=function(i){return typeof i===e||\"a\"+(t<1?\"n \":\" \")+e}}));var qR={};YR.transitional=function(e,t,i){function n(e,t){return\"[Axios v\"+HR+\"] Transitional option '\"+e+\"'\"+t+(i?\". \"+i:\"\")}return function(i,r,s){if(!1===e)throw new KR(n(r,\" has been removed\"+(t?\" in \"+t:\"\")),KR.ERR_DEPRECATED);return t&&!qR[r]&&(qR[r]=!0,console.warn(n(r,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(i,r,s)}};var JR,zR,XR,QR,ZR,$R,eC={assertOptions:function(e,t,i){if(\"object\"!=typeof e)throw new KR(\"options must be an object\",KR.ERR_BAD_OPTION_VALUE);for(var n=Object.keys(e),r=n.length;r-- >0;){var s=n[r],o=t[s];if(o){var a=e[s],c=void 0===a||o(a,s,e);if(!0!==c)throw new KR(\"option \"+s+\" must be \"+c,KR.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new KR(\"Unknown option \"+s,KR.ERR_BAD_OPTION)}},validators:YR},tC=DS,iC=kS,nC=FS,rC=function(e){return VR(e),e.headers=e.headers||{},e.data=kR.call(e,e.data,e.headers,e.transformRequest),e.headers=LR.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),LR.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(t){delete e.headers[t]})),(e.adapter||UR.adapter)(e).then((function(t){return VR(e),t.data=kR.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return MR(t)||(VR(e),t&&t.response&&(t.response.data=kR.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},sC=GR,oC=uR,aC=eC,cC=aC.validators;function dC(e){this.defaults=e,this.interceptors={request:new nC,response:new nC}}dC.prototype.request=function(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{},(t=sC(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method=\"get\";var i=t.transitional;void 0!==i&&aC.assertOptions(i,{silentJSONParsing:cC.transitional(cC.boolean),forcedJSONParsing:cC.transitional(cC.boolean),clarifyTimeoutError:cC.transitional(cC.boolean)},!1);var n=[],r=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(r=r&&e.synchronous,n.unshift(e.fulfilled,e.rejected))}));var s,o=[];if(this.interceptors.response.forEach((function(e){o.push(e.fulfilled,e.rejected)})),!r){var a=[rC,void 0];for(Array.prototype.unshift.apply(a,n),a=a.concat(o),s=Promise.resolve(t);a.length;)s=s.then(a.shift(),a.shift());return s}for(var c=t;n.length;){var d=n.shift(),l=n.shift();try{c=d(c)}catch(e){l(e);break}}try{s=rC(c)}catch(e){return Promise.reject(e)}for(;o.length;)s=s.then(o.shift(),o.shift());return s},dC.prototype.getUri=function(e){e=sC(this.defaults,e);var t=oC(e.baseURL,e.url);return iC(t,e.params,e.paramsSerializer)},tC.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){dC.prototype[e]=function(t,i){return this.request(sC(i||{},{method:e,url:t,data:(i||{}).data}))}})),tC.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(i,n,r){return this.request(sC(r||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:i,data:n}))}}dC.prototype[e]=t(),dC.prototype[e+\"Form\"]=t(!0)}));var lC=DS,hC=uS,uC=dC,pC=GR;var _C=function e(t){var i=new uC(t),n=hC(uC.prototype.request,i);return lC.extend(n,uC.prototype,i),lC.extend(n,i),n.create=function(i){return e(pC(t,i))},n}(OR);_C.Axios=uC,_C.CanceledError=ER(),_C.CancelToken=function(){if(zR)return JR;zR=1;var e=ER();function t(t){if(\"function\"!=typeof t)throw new TypeError(\"executor must be a function.\");var i;this.promise=new Promise((function(e){i=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,i=n._listeners.length;for(t=0;t<i;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,i=new Promise((function(e){n.subscribe(e),t=e})).then(e);return i.cancel=function(){n.unsubscribe(t)},i},t((function(t){n.reason||(n.reason=new e(t),i(n.reason))}))}return t.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},t.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},t.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},t.source=function(){var e;return{token:new t((function(t){e=t})),cancel:e}},JR=t}(),_C.isCancel=PR(),_C.VERSION=WR().version,_C.toFormData=zS(),_C.AxiosError=jS(),_C.Cancel=_C.CanceledError,_C.all=function(e){return Promise.all(e)},_C.spread=QR?XR:(QR=1,XR=function(e){return function(t){return e.apply(null,t)}}),_C.isAxiosError=function(){if($R)return ZR;$R=1;var e=DS;return ZR=function(t){return e.isObject(t)&&!0===t.isAxiosError}}(),hS.exports=_C,hS.exports.default=_C;var EC=J(hS.exports);function mC(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function fC(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?mC(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):mC(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let gC,TC=0,SC=0;function RC(e,t,i,n){return new tg(((r,s)=>{t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),TC+=LT(t.data)):i&&(t.data.size?TC+=t.data.size:t.data instanceof FormData?TC+=kT(t.data):TC+=LT(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,EC.request(t).then((e=>{\"string\"==typeof e.data?SC+=LT(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?SC+=e.data.byteLength:SC+=LT(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{EC.isCancel(e)?s(new Vg(xg.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?s(new Vg(xg.NETWORK_TIMEOUT,e.message)):e.response?s(new Vg(xg.NETWORK_RESPONSE_ERROR,e.response.status)):s(new Vg(xg.NETWORK_ERROR,e.message))}))}))}async function CC(e,t){const i=new Blob([t.data],{type:\"buffer\"});return await RC(e,fC(fC({},t),{},{data:i,headers:{\"Content-Type\":\"application/octet-stream\"}}),!0)}const vC=()=>\"HTTPS\"===(gC||gC||(gC=(window.location.protocol.split(\":\")[0]||\"\").toUpperCase(),gC)),IC=()=>void 0!==window.isSecureContext;function yC(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function AC(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?yC(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):yC(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var bC;!function(e){e.SET_SESSION_ID=\"SET_SESSION_ID\",e.SET_P2P_ID=\"SET_P2P_id\",e.SET_DC_ID=\"SET_DC_id\",e.SET_UID=\"SET_UID\",e.SET_PUB_ID=\"SET_PUB_ID\",e.SET_CLOUD_PROXY_SERVER_MODE=\"SET_CLOUD_PROXY_SERVER_MODE\",e.KEY_METRIC_CLIENT_CREATED=\"KEY_METRIC_CLIENT_CREATED\",e.KEY_METRIC_JOIN_START=\"KEY_METRIC_JOIN_START\",e.AVOID_JOIN_START=\"AVOID_JOIN_START\",e.KEY_METRIC_JOIN_END=\"KEY_METRIC_JOIN_END\",e.KEY_METRIC_REQUEST_AP_START=\"KEY_METRIC_REQUEST_AP_START\",e.KEY_METRIC_REQUEST_AP_END=\"KEY_METRIC_REQUEST_AP_END\",e.KEY_METRIC_JOIN_GATEWAY_START=\"KEY_METRIC_JOIN_GATEWAY_START\",e.KEY_METRIC_JOIN_GATEWAY_END=\"KEY_METRIC_JOIN_GATEWAY_END\",e.KEY_METRIC_PEER_CONNECTION_START=\"KEY_METRIC_PEER_CONNECTION_START\",e.KEY_METRIC_PEER_CONNECTION_END=\"KEY_METRIC_PEER_CONNECTION_END\",e.KEY_METRIC_DESCRIPTION_START=\"KEY_METRIC_DESCRIPTION_START\",e.KEY_METRIC_ICE_CONNECTION_END=\"KEY_METRIC_ICE_CONNECTION_END\",e.KEY_METRIC_SIGNAL_CHANNEL_OPEN=\"KEY_METRIC_SIGNAL_CHANNEL_OPEN\",e.KEY_METRIC_PUBLISH=\"KEY_METRIC_PUBLISH\",e.KEY_METRIC_SUBSCRIBE=\"KEY_METRIC_SUBSCRIBE\",e.RECORD_JOIN_CHANNEL_SERVICE=\"RECORD_JOIN_CHANNEL_SERVICE\",e.RESET_JOIN_CHANNEL_SERVICE_RECORDS=\"RESET_JOIN_CHANNEL_SERVICE_RECORDS\",e.RESET_KEY_METRICS=\"RESET_KEY_METRICS\",e.SET_USE_DATACHANNEL=\"SET_USE_DATACHANNEL\",e.SET_USE_P2P=\"SET_USE_P2P\"}(bC||(bC={}));class wC{constructor(e,t,i,n){nu(this,\"state\",void 0),this.state={codec:e,audioCodec:t,mode:i,clientId:n,sessionId:null,p2pId:0,dcId:0,pubId:0,subId:0,avoidJoinStart:0,keyMetrics:{publish:[],subscribe:[]},joinChannelServiceRecords:[],cloudProxyServerMode:\"disabled\",useDataChannel:!1,useP2P:!1}}dispatch(e){this.state=function(e,t){switch(t.type){case bC.SET_SESSION_ID:return AC(AC({},e),{},{sessionId:t.sessionId});case bC.SET_P2P_ID:return AC(AC({},e),{},{p2pId:t.p2pId});case bC.SET_UID:return AC(AC({},e),{},{uid:t.uid});case bC.SET_PUB_ID:return AC(AC({},e),{},{pubId:t.pubId});case bC.KEY_METRIC_CLIENT_CREATED:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{clientCreated:t.metric})});case bC.KEY_METRIC_JOIN_START:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{joinStart:t.metric})});case bC.AVOID_JOIN_START:return AC(AC({},e),{},{avoidJoinStart:t.avoidJoinStart});case bC.KEY_METRIC_JOIN_END:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{joinEnd:t.metric})});case bC.KEY_METRIC_REQUEST_AP_START:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{requestAPStart:t.metric})});case bC.KEY_METRIC_REQUEST_AP_END:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{requestAPEnd:t.metric})});case bC.KEY_METRIC_JOIN_GATEWAY_START:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{joinGatewayStart:t.metric})});case bC.KEY_METRIC_JOIN_GATEWAY_END:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{joinGatewayEnd:t.metric})});case bC.KEY_METRIC_PEER_CONNECTION_START:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{peerConnectionStart:t.metric})});case bC.KEY_METRIC_PEER_CONNECTION_END:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{peerConnectionEnd:t.metric})});case bC.KEY_METRIC_DESCRIPTION_START:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{descriptionStart:t.metric})});case bC.KEY_METRIC_SIGNAL_CHANNEL_OPEN:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{signalChannelOpen:t.metric})});case bC.KEY_METRIC_ICE_CONNECTION_END:return AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{iceConnectionEnd:t.metric})});case bC.KEY_METRIC_PUBLISH:{const i=e.keyMetrics.publish,n=i.findIndex((e=>e.trackId===t.metric.trackId));return-1!==n?(i[n]=AC(AC({},i[n]),t.metric),AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{publish:[...i]})})):AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{publish:[...e.keyMetrics.publish,t.metric]})})}case bC.KEY_METRIC_SUBSCRIBE:{const i=e.keyMetrics.subscribe,n=i.findIndex((e=>e.userId===t.metric.userId&&e.type===t.metric.type));return-1!==n?(i[n]=AC(AC({},i[n]),t.metric),AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{subscribe:[...i]})})):AC(AC({},e),{},{keyMetrics:AC(AC({},e.keyMetrics),{},{subscribe:[...e.keyMetrics.subscribe,t.metric]})})}case bC.SET_CLOUD_PROXY_SERVER_MODE:return e.cloudProxyServerMode=t.mode,e;case bC.RECORD_JOIN_CHANNEL_SERVICE:return\"number\"!=typeof t.index?e.joinChannelServiceRecords=[...e.joinChannelServiceRecords,t.record]:(e.joinChannelServiceRecords[t.index]=AC(AC({},e.joinChannelServiceRecords[t.index]),t.record),e.joinChannelServiceRecords=[...e.joinChannelServiceRecords]),e;case bC.RESET_JOIN_CHANNEL_SERVICE_RECORDS:return e.joinChannelServiceRecords=[],e;case bC.RESET_KEY_METRICS:return e.keyMetrics={publish:[],subscribe:[]},e;case bC.SET_USE_DATACHANNEL:return AC(AC({},e),{},{useDataChannel:t.val});case bC.SET_USE_P2P:return AC(AC({},e),{},{useP2P:t.val});default:return e}}(this.state,e)}set sessionId(e){this.dispatch({type:bC.SET_SESSION_ID,sessionId:e})}get sessionId(){return this.state.sessionId}set codec(e){this.state.codec=e}get codec(){return this.state.codec}get audioCodec(){return this.state.audioCodec}get clientId(){return this.state.clientId}set p2pId(e){this.dispatch({type:bC.SET_P2P_ID,p2pId:e})}get p2pId(){return this.state.p2pId}set dcId(e){this.dispatch({type:bC.SET_DC_ID,dcId:e})}get dcId(){return this.state.dcId}set uid(e){this.dispatch({type:bC.SET_UID,uid:e})}get uid(){return this.state.uid}set pubId(e){this.dispatch({type:bC.SET_PUB_ID,pubId:e})}get pubId(){return this.state.pubId}set cloudProxyServerMode(e){this.dispatch({type:bC.SET_CLOUD_PROXY_SERVER_MODE,mode:e})}get cloudProxyServerMode(){return this.state.cloudProxyServerMode}set useDataChannel(e){this.dispatch({type:bC.SET_USE_DATACHANNEL,val:e})}get useDataChannel(){return this.state.useDataChannel}set useP2P(e){this.dispatch({type:bC.SET_USE_P2P,val:e})}get useP2P(){return this.state.useP2P}clientCreated(){this.dispatch({type:bC.KEY_METRIC_CLIENT_CREATED,metric:Date.now()})}joinStart(){this.dispatch({type:bC.KEY_METRIC_JOIN_START,metric:Date.now()})}joinEnd(){this.dispatch({type:bC.KEY_METRIC_JOIN_END,metric:Date.now()})}requestAPStart(){this.dispatch({type:bC.KEY_METRIC_REQUEST_AP_START,metric:Date.now()})}requestAPEnd(){this.dispatch({type:bC.KEY_METRIC_REQUEST_AP_END,metric:Date.now()})}joinGatewayStart(){this.dispatch({type:bC.KEY_METRIC_JOIN_GATEWAY_START,metric:Date.now()})}joinGatewayEnd(){this.dispatch({type:bC.KEY_METRIC_JOIN_GATEWAY_END,metric:Date.now()})}peerConnectionStart(){this.dispatch({type:bC.KEY_METRIC_PEER_CONNECTION_START,metric:Date.now()})}peerConnectionEnd(){this.dispatch({type:bC.KEY_METRIC_PEER_CONNECTION_END,metric:Date.now()})}descriptionStart(){this.dispatch({type:bC.KEY_METRIC_DESCRIPTION_START,metric:Date.now()})}signalChannelOpen(){this.dispatch({type:bC.KEY_METRIC_SIGNAL_CHANNEL_OPEN,metric:Date.now()})}iceConnectionEnd(){this.dispatch({type:bC.KEY_METRIC_ICE_CONNECTION_END,metric:Date.now()})}publish(e,t,i,n){this.dispatch({type:bC.KEY_METRIC_PUBLISH,metric:AC(AC({trackId:e,type:t},i&&{publishStart:i}),n&&{publishEnd:n})})}subscribe(e,t,i,n,r,s,o){this.dispatch({type:bC.KEY_METRIC_SUBSCRIBE,metric:AC(AC(AC(AC(AC({userId:e,type:t},i&&{subscribeStart:i}),n&&{subscribeEnd:n}),r&&{firstFrame:r}),s&&{streamAdded:s}),o&&{firstDecoded:o})})}massSubscribe(e,t,i,n){e.forEach((e=>{this.dispatch({type:bC.KEY_METRIC_SUBSCRIBE,metric:AC(AC(AC({userId:e.userId,type:e.type},t&&{subscribeStart:t}),i&&{subscribeEnd:i}),n&&{firstFrame:n})})}))}get keyMetrics(){return this.state.keyMetrics}recordJoinChannelService(e,t){\"gateway\"===e.service&&Array.isArray(e.urls)&&(e.urls=e.urls.map((e=>e.replace(/(\\d+)-\\d+-\\d+-(\\d+)/,\"$1-*-*-$2\"))));try{return\"number\"!=typeof t?(this.dispatch({type:bC.RECORD_JOIN_CHANNEL_SERVICE,record:AC(AC({},e),{},{sessionId:this.sessionId,cloudProxyMode:this.cloudProxyServerMode,uid:this.uid})}),this.state.joinChannelServiceRecords.length-1):(t<0||t>=this.state.joinChannelServiceRecords.length||this.dispatch({type:bC.RECORD_JOIN_CHANNEL_SERVICE,record:e,index:t}),t)}catch(e){return 0}}resetJoinChannelServiceRecords(){this.dispatch({type:bC.RESET_JOIN_CHANNEL_SERVICE_RECORDS})}resetKeyMetrics(){this.dispatch({type:bC.RESET_KEY_METRICS})}get joinChannelServiceRecords(){try{return this.state.joinChannelServiceRecords}catch(e){return[]}}get avoidJoinStart(){return this.state.avoidJoinStart}set avoidJoinStart(e){this.dispatch({type:bC.AVOID_JOIN_START,avoidJoinStart:e})}}const OC=function(e){if(e.match(/[0-9]+\\.[0-9]+\\.[0-9]+$/))return e;const t=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-alpha\\.([0-9]+)/);if(t&&t[1]&&t[2]){const e=t[1],i=t[2];return\"\".concat(e,\".\").concat(i)}const i=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-special\\.([0-9]+)/);if(i&&i[1]&&i[2]){const e=i[1],t=i[2];return\"\".concat(e,\".\").concat(100*(Number(t)+1))}return\"4.0.0.999\"}(\"4.19.3\"),NC=function(){try{return!0===JSON.parse(\"true\")}catch(e){return!0}}(),DC=\"v4.19.3-0-gb2ca8ca7(11/2/2023, 2:57:33 PM)\",PC={PROCESS_ID:\"\",ENCRYPT_AES:!0,AREAS:[\"CHINA\",\"GLOBAL\"],WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\",\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\",\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-web-2.ap.sd-rtn.com\",\"cds-ap-web-3.agora.io\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-web-2.ap.sd-rtn.com\",\"sua-ap-web-3.agora.io\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-web-2.ap.sd-rtn.com\",\"uap-ap-web-3.agora.io\",\"uap-web-4.ap.sd-rtn.com\"],LOG_UPLOAD_SERVER:\"logservice.agora.io\",EVENT_REPORT_DOMAIN:\"statscollector-1.agora.io\",EVENT_REPORT_BACKUP_DOMAIN:\"web-2.statscollector.sd-rtn.com\",ENABLE_EVENT_REPORT:!0,GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:\"\",LIVE_STREAMING_ADDRESS:\"\",HTTP_CONNECT_TIMEOUT:5e3,SIGNAL_REQUEST_TIMEOUT:1e4,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],SUBSCRIBE_TWCC:!1,PUBLISH_TWCC:!1,PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:3e3,CONFIG_DISTRIBUTE_INTERVAL:3e5,ENABLE_CONFIG_DISTRIBUTE:!0,CANDIDATE_TIMEOUT:5e3,SHOW_REPORT_INVOKER_LOG:!1,JOIN_EXTEND:\"\",PUB_EXTEND:\"\",SUB_EXTEND:\"\",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2e3,AJAX_REQUEST_CONCURRENT:3,REPORT_APP_SCENARIO:void 0,GATEWAY_DOMAINS:[\"edge.agora.io\",\"edge.sd-rtn.com\"],WORKER_DOMAIN:\"edge.agora.io\",TURN_DOMAIN:\"edge.agora.io\",EVENT_REPORT_RETRY:!0,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3e3,AUDIO_VOLUME_INDICATION_INTERVAL:2e3,VOLUME_VOICE_WEIGHT:10,GET_VOLUME_OF_MUTED_AUDIO_TRACK:!1,STATS_UPDATE_INTERVAL:250,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:\"webnginx-proxy.agora.io\",PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\",\"webrtc-cloud-proxy.agora.io\"],CUSTOM_PUB_ANSWER_MODIFIER:null,CUSTOM_SUB_ANSWER_MODIFIER:null,CUSTOM_PUB_OFFER_MODIFIER:null,CUSTOM_SUB_OFFER_MODIFIER:null,DSCP_TYPE:\"high\",REMOVE_NEW_CODECS:!0,FRAGEMENT_LENGTH:3,WEBSOCKET_COMPRESS:!1,SIMULCAST:!1,PRELOAD_MEDIA_COUNT:0,USE_PUB_RTX:!1,USE_SUB_RTX:!1,CHECK_VIDEO_VISIBLE_INTERVAL:3e4,CHECK_LOCAL_STATS_INTERVAL:100,PROFILE_SWITCH_INTERVAL:2e3,UNSUPPORTED_VIDEO_CODEC:[],ENUMERATE_DEVICES_INTERVAL:!1,ENUMERATE_DEVICES_INTERVAL_TIME:1e4,USE_NEW_TOKEN:!1,CLOSE_AFB_FOR_LOCAL_AP:!0,JOIN_MAX_CONCURRENCY:6,JOIN_WITH_FALLBACK_SIGNAL_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE:!1,JOIN_GATEWAY_TRY_443PORT_DURATION:2e3,JOIN_GATEWAY_USE_443PORT_ONLY:!1,JOIN_GATEWAY_USE_DUAL_DOMAIN:!0,JOIN_GATEWAY_FALLBACK_PORT:443,USE_TURN_SERVER_OF_GATEWAY:!1,H264_PROFILE_LEVEL_ID:\"\",USE_NEW_LOG:!1,LOG_VERSION:3,MEDIA_DEVICE_CONSTRAINTS:null,ENCRYPT_PROXY_USERNAME_AND_PSW:!0,SDP_LOGGING:!1,CSP_DETECTED_HOSTNAME_LIST:[\"agora.io\",\"sd-rtn.com\"],REMOTE_AUDIO_TRACK_USES_WEB_AUDIO:!1,LOCAL_AUDIO_TRACK_USES_WEB_AUDIO:!0,BITRATE_ADAPTER_TYPE:\"STANDARD_BITRATE\",AI_DENOISER_PARAMETERS:{},ADJUST_3A_FROM_PLUGINS:!0,RAISE_H264_BASELINE_PRIORITY:!0,FILTER_SEND_H264_BASELINE:!1,ENABLE_PUBLISHED_USER_LIST:!0,MAX_SUBSCRIPTION:50,X_GOOGLE_START_BITRATE:void 0,NEW_REPORT_SERVER:!1,NEW_REPORT_SERVER_DOMAINS:[\"data-reporting.agora.io\",\"data-reporting.agora.io\"],VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT:3e5,VIDEO_INSPECT_INTERVAL_MINIMUM:1e3,VIDEO_INSPECT_QUALITY_RATIO:.9,VIDEO_INSPECT_WORKER_MANAGER_HOST:\"edge.agora.io\",VIDEO_INSPECT_WORKER_MANAGER_PORT:\"\",VIDEO_INSPECT_WORKER_PORT:\"\",SHOW_VIDEO_INSPECT_WORKER_MESSAGE:!1,STATS_COLLECTOR_PORT:443,FORCE_TURN_TCP:!1,SUBSCRIBE_AUDIO_FILTER_TOPN:void 0,ENABLE_PUBLISH_AUDIO_FILTER:void 0,DISABLE_FEC:void 0,WEBAUDIO_INIT_OPTIONS:void 0,FILTER_VIDEO_FEC:!0,FILTER_AUDIO_FEC:!1,CHROME_DUAL_STREAM_USE_ENCODING:!0,DISABLE_DUAL_STREAM_USE_ENCODING:!1,EXTENSION_USAGE_UPLOAD_INTERVAL:1e4,ICE_RESTART:!0,ICE_RESTART_INTERVAL:1e4,NEW_ICE_RESTART:!1,ENABLE_USER_LICENSE_CHECK:!0,SIGNAL_CHANNEL:0,TRANSMITTER_INITIAL_RTT:30,TRANSMITTER_INITIAL_RTO:30,TRANSMITTER_MAX_BATCH_ACK_COUNT:2,TRANSMITTER_MAX_RTO:500,DATACHANNEL_COMPRESS:!1,FINGERPRINT:null,DC_JOIN_WITH_FAILBACK:5e3,ENABLE_VIDEO_FRAME_CALLBACK:!0,VIDEO_FREEZE_DURATION:500,SPATIALIZER_PARAMETERS:{},UPLOAD_LOG_INTERVAL:3e3,UPLOAD_LOG_REQUEST_RETRY_INTERVAL:2e3,UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL:2e4,UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF:5e3,UPLOAD_LOG_RETRY_INTERVAL_V1:1e4,UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1:200,UPLOAD_LOG_LENGTH_EACH_TIME:10,APP_TYPE:0,DISABLE_WEBAUDIO:!1,CHANNEL_MEDIA_RELAY_SERVERS:void 0,KEEP_LAST_FRAME:!0,FORWARD_P2P_CREATION:!0,SYNC_GROUP:!0,BLOCK_LOCAL_CLIENT:!1,AP_AREA:!0,SVC:[],ENABLE_ENCODED_TRANSFORM:!1,IMAGE_MODERATION_WORKER_HOST:\"edge.agora.io\",IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT:3e5,IMAGE_MODERATION_INTERVAL_MINIMUM:1e3,SHOW_IMAGE_MODERATION_WORKER_MESSAGE:!1,IMAGE_MODERATION_QUALITY_RATIO:.9,IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL:5e3,SHOW_GLOBAL_CLIENT_LIST:!1,RTM2_FLAG:void 0,AP_RTM:!1,ENABLE_DATASTREAM_2:!1,DATASTREAM_MAX_RETRANSMITS:10,ENABLE_USER_AUTO_REBALANCE_CHECK:!0,ENABLE_INSTANT_VIDEO:!1,ENABLE_NTP_REPORT:!1,USE_XR:!1,TCP_CANDIDATE_ONLY:!1,EXTERNAL_SIGNAL_REQUEST_TIMEOUT:1e4,P2P:!1,SHOW_P2P_LOG:!1,ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,FILEPATH_LENMAX:255,DUALSTREAM_OPERATION_CHECK:!0,MEDIA_ELEMENT_EXISTS_DEPTH:3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,STATS_FILTER:{transportId:!0,googTrackId:!0},FILTER_VIDEO_CODEC:[]};function LC(e,t,i){var n,r;Pr(n=Object.keys(PC)).call(n,e)&&(!i&&Pr(r=Object.keys(MC)).call(r,e)||(PC[e]=t))}function kC(e){return PC[e]}const MC={};var UC,xC;!function(e){e.h264=\"h264\",e.h265=\"h265\",e.vp8=\"vp8\",e.vp9=\"vp9\",e.av1=\"av1\"}(UC||(UC={})),function(e){e.opus=\"opus\",e.pcma=\"pcma\",e.pcmu=\"pcmu\",e.g722=\"g722\"}(xC||(xC={}));const VC=new class extends iT{reportLogUploadError(e){this.emit(\"REPORT_LOG_UPLOAD\",e)}};class FC{constructor(e){nu(this,\"logger\",void 0),nu(this,\"prefixLists\",[]),this.logger=e}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.debug(...this.prefixLists,...t)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.info(...this.prefixLists,...t)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.warning(...this.prefixLists,...t)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.error(...this.prefixLists,...t)}prefix(e){return this.prefixLists.push(e),this}popPrefix(){return this.prefixLists.pop(),this}}function BC(){const e=new Date;return e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}function jC(){const e=new Date,t=/((\\d+:){2}\\d+)/.exec((new Date).toUTCString());return t?(null==t?void 0:t[0])+\":\"+e.getUTCMilliseconds():e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}const GC={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},WC=Date.now(),HC=e=>{for(const t in GC)if(Object.prototype.hasOwnProperty.call(GC,t)&&GC[t]===e)return t;return\"DEFAULT\"};const KC=new class{constructor(){nu(this,\"proxyServerURL\",void 0),nu(this,\"logLevel\",GC.DEBUG),nu(this,\"uploadState\",\"collecting\"),nu(this,\"uploadLogWaitingList\",[]),nu(this,\"uploadLogUploadingList\",[]),nu(this,\"uploadErrorCount\",0),nu(this,\"currentLogID\",0),nu(this,\"url\",void 0),nu(this,\"extLog\",((e,t)=>{this.appendLogToWaitingList(e,...t)}))}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[GC.DEBUG].concat(t);this.log.apply(this,n)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[GC.INFO].concat(t);this.log.apply(this,n)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[GC.WARNING].concat(t);this.log.apply(this,n)}warn(){this.warning(...arguments)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[GC.ERROR].concat(t);this.log.apply(this,n)}upload(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[GC.DEBUG].concat(t);this.uploadLog.apply(this,n)}setLogLevel(e){e=Math.min(Math.max(0,e),4),this.logLevel=e}enableLogUpload(){LC(\"UPLOAD_LOG\",!0)}disableLogUpload(){LC(\"UPLOAD_LOG\",!1),this.uploadLogUploadingList=[],this.uploadLogWaitingList=[]}setProxyServer(e){this.proxyServerURL=e}prefix(e){return new FC(this).prefix(e)}log(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-WC<100)return void setTimeout((()=>{this.log(...t)}),Date.now()-WC);const n=Math.max(0,Math.min(4,t[0]));if(t[0]=BC()+\" Agora-SDK [\".concat(HC(n),\"]:\"),this.appendLogToWaitingList(n,...t),n<this.logLevel)return;const r=BC()+\" %cAgora-SDK [\".concat(HC(n),\"]:\");let s=[];if(!kC(\"USE_NEW_LOG\"))switch(n){case GC.DEBUG:s=[r,\"color: #64B5F6;\"].concat(t.slice(1)),console.log.apply(console,s);break;case GC.INFO:s=[r,\"color: #1E88E5; font-weight: bold;\"].concat(t.slice(1)),console.log.apply(console,s);break;case GC.WARNING:s=[r,\"color: #FB8C00; font-weight: bold;\"].concat(t.slice(1)),console.warn.apply(console,s);break;case GC.ERROR:s=[r,\"color: #B00020; font-weight: bold;\"].concat(t.slice(1)),console.error.apply(console,s)}}uploadLog(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-WC<100)return void setTimeout((()=>{this.uploadLog(...t)}),Date.now()-WC);const n=Math.max(0,Math.min(4,t[0]));t[0]=BC()+\" Agora-SDK [\".concat(HC(n),\"]:\"),this.appendLogToWaitingList(n,...t)}appendLogToWaitingList(e){if(!kC(\"UPLOAD_LOG\"))return;for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];Array.isArray(i[0])?i[0][0]=jC()+\" Agora-SDK [\".concat(HC(e),\"]:\"):i[0]=jC()+\" Agora-SDK [\".concat(HC(e),\"]:\");let r=\"\";i.forEach((e=>{\"object\"==typeof e&&(e=JSON.stringify(e)),r+=\"\".concat(e,\" \")})),this.uploadLogWaitingList.push({payload_str:r,log_level:e,log_item_id:this.currentLogID++}),\"uploading\"===this.uploadState&&0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}startUpload(){this.uploadState=\"uploading\",0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}async uploadLogs(){const e=this.uploadLogUploadingList,t={sdk_version:OC,process_id:kC(\"PROCESS_ID\"),payload:JSON.stringify(e)};return XT((async()=>{const e=await EC.post(this.url||(this.proxyServerURL?\"https://\".concat(this.proxyServerURL,\"/ls/?h=\").concat(kC(\"LOG_UPLOAD_SERVER\"),\"&p=443&d=upload/v1\"):\"https://\".concat(kC(\"LOG_UPLOAD_SERVER\"),\"/upload/v1\")),t,{responseType:\"text\"});if(\"OK\"!==e.data){const t=new Error(\"unexpected upload log response\");throw t.response=e,t}}),(()=>(this.uploadLogUploadingList=[],!1)),(e=>(e.response?VC.reportLogUploadError({status:e.response.status,data:e.response.data,headers:e.response.headers,message:e.message}):e.request?VC.reportLogUploadError({status:e.request.status,message:e.message}):VC.reportLogUploadError({status:-1,message:e.message}),!0)),{timeout:kC(\"UPLOAD_LOG_REQUEST_RETRY_INTERVAL\"),maxRetryTimeout:kC(\"UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL\")})}uploadLogInterval(){0===this.uploadLogUploadingList.length&&0===this.uploadLogWaitingList.length||(0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=this.uploadLogWaitingList.splice(0,kC(\"UPLOAD_LOG_LENGTH_EACH_TIME\"))),this.uploadLogs().then((()=>{this.uploadErrorCount=0,this.uploadLogWaitingList.length>0&&window.setTimeout((()=>this.uploadLogInterval()),kC(\"UPLOAD_LOG_INTERVAL\"))})).catch((e=>{this.uploadErrorCount+=1,this.uploadErrorCount<2?window.setTimeout((()=>this.uploadLogInterval()),kC(\"UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1\")):window.setTimeout((()=>this.uploadLogInterval()),kC(\"UPLOAD_LOG_RETRY_INTERVAL_V1\"))})))}};var YC,qC;function JC(e){return Wg(e.reportId,\"params.reportId\",0,100,!1),Wg(e.category,\"params.category\",0,100,!1),Wg(e.event,\"params.event\",0,100,!1),Wg(e.label,\"params.label\",0,100,!1),jg(e.value,\"params.value\",Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,!1),!0}!function(e){e.FREE=\"free\",e.UPLOADING=\"uploading\"}(YC||(YC={})),function(e){e[e.MISC=0]=\"MISC\",e[e.INTERNAL_EVENT=1]=\"INTERNAL_EVENT\",e[e.PUBLIC_EVENT=2]=\"PUBLIC_EVENT\",e[e.WEB_EVENT=3]=\"WEB_EVENT\",e[e.INTERNAL_API=4]=\"INTERNAL_API\",e[e.WEB_API=5]=\"WEB_API\",e[e.PUBLIC_API=6]=\"PUBLIC_API\"}(qC||(qC={}));const zC={sid:\"\",lts:0,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};var XC,QC,ZC,$C;function ev(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function tv(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ev(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ev(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}!function(e){e.PUBLISH=\"publish\",e.SUBSCRIBE=\"subscribe\",e.WS_COMPRESSOR_INIT=\"ws_compressor_init\",e.SESSION_INIT=\"session_init\",e.JOIN_CHOOSE_SERVER=\"join_choose_server\",e.REQ_USER_ACCOUNT=\"req_user_account\",e.JOIN_GATEWAY=\"join_gateway\",e.REJOIN_GATEWAY=\"rejoin_gateway\",e.STREAM_SWITCH=\"stream_switch\",e.REQUEST_PROXY_WORKER_MANAGER=\"request_proxy_worker_manager\",e.REQUEST_PROXY_APPCENTER=\"request_proxy_appcenter\",e.FIRST_VIDEO_RECEIVED=\"first_video_received\",e.FIRST_AUDIO_RECEIVED=\"first_audio_received\",e.FIRST_VIDEO_DECODE=\"first_video_decode\",e.FIRST_AUDIO_DECODE=\"first_audio_decode\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_UPDATE_STREAM=\"on_update_stream\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.USER_ANALYTICS=\"req_user_analytics\",e.PC_STATS=\"pc_stats\"}(XC||(XC={})),function(e){e.SESSION=\"io.agora.pb.Wrtc.Session\",e.JOIN_CHOOSE_SERVER=\"io.agora.pb.Wrtc.JoinChooseServer\",e.REQ_USER_ACCOUNT=\"io.agora.pb.Wrtc.ReqUserAccount\",e.JOIN_GATEWAY=\"io.agora.pb.Wrtc.JoinGateway\",e.RE_JOIN_GATEWAY=\"io.agora.pb.Wrtc.ReJoinGateway\",e.PUBLISH=\"io.agora.pb.Wrtc.Publish\",e.SUBSCRIBE=\"io.agora.pb.Wrtc.Subscribe\",e.WS_COMPRESSOR_INIT=\"io.agora.pb.Wrtc.WsCompressorInit\",e.STREAM_SWITCH=\"io.agora.pb.Wrtc.StreamSwitch\",e.AUDIO_SENDING_STOPPED=\"io.agora.pb.Wrtc.AudioSendingStopped\",e.VIDEO_SENDING_STOPPED=\"io.agora.pb.Wrtc.VideoSendingStopped\",e.REQUEST_PROXY_APPCENTER=\"io.agora.pb.Wrtc.RequestProxyAppCenter\",e.REQUEST_PROXY_WORKER_MANAGER=\"io.agora.pb.Wrtc.RequestProxyWorkerManager\",e.API_INVOKE=\"io.agora.pb.Wrtc.ApiInvoke\",e.FIRST_VIDEO_RECEIVED=\"io.agora.pb.Wrtc.FirstVideoReceived\",e.FIRST_AUDIO_RECEIVED=\"io.agora.pb.Wrtc.FirstAudioReceived\",e.FIRST_VIDEO_DECODE=\"io.agora.pb.Wrtc.FirstVideoDecode\",e.FIRST_AUDIO_DECODE=\"io.agora.pb.Wrtc.FirstAudioDecode\",e.ON_ADD_AUDIO_STREAM=\"io.agora.pb.Wrtc.OnAddAudioStream\",e.ON_ADD_VIDEO_STREAM=\"io.agora.pb.Wrtc.OnAddVideoStream\",e.ON_UPDATE_STREAM=\"io.agora.pb.Wrtc.OnUpdateStream\",e.ON_REMOVE_STREAM=\"io.agora.pb.Wrtc.OnRemoveStream\",e.JOIN_CHANNEL_TIMEOUT=\"io.agora.pb.Wrtc.JoinChannelTimeout\",e.PEER_PUBLISH_STATUS=\"io.agora.pb.Wrtc.PeerPublishStatus\",e.WORKER_EVENT=\"io.agora.pb.Wrtc.WorkerEvent\",e.AP_WORKER_EVENT=\"io.agora.pb.Wrtc.APWorkerEvent\",e.JOIN_WEB_PROXY_AP=\"io.agora.pb.Wrtc.JoinWebProxyAP\",e.WEBSOCKET_QUIT=\"io.agora.pb.Wrtc.WebSocketQuit\",e.USER_ANALYTICS=\"io.agora.pb.Wrtc.UserAnalytics\",e.AUTOPLAY_FAILED=\"io.agora.pb.Wrtc.AutoplayFailed\",e.PC_STATS=\"io.agora.pb.Wrtc.PCStats\"}(QC||(QC={})),function(e){e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\"}(ZC||(ZC={})),function(e){e[e.SESSION=26]=\"SESSION\",e[e.JOIN_CHOOSE_SERVER=27]=\"JOIN_CHOOSE_SERVER\",e[e.REQ_USER_ACCOUNT=196]=\"REQ_USER_ACCOUNT\",e[e.JOIN_GATEWAY=28]=\"JOIN_GATEWAY\",e[e.PUBLISH=30]=\"PUBLISH\",e[e.SUBSCRIBE=29]=\"SUBSCRIBE\",e[e.WS_COMPRESSOR_INIT=9430]=\"WS_COMPRESSOR_INIT\",e[e.STREAM_SWITCH=32]=\"STREAM_SWITCH\",e[e.AUDIO_SENDING_STOPPED=33]=\"AUDIO_SENDING_STOPPED\",e[e.VIDEO_SENDING_STOPPED=34]=\"VIDEO_SENDING_STOPPED\",e[e.REQUEST_PROXY_APPCENTER=35]=\"REQUEST_PROXY_APPCENTER\",e[e.REQUEST_PROXY_WORKER_MANAGER=36]=\"REQUEST_PROXY_WORKER_MANAGER\",e[e.API_INVOKE=41]=\"API_INVOKE\",e[e.FIRST_VIDEO_RECEIVED=348]=\"FIRST_VIDEO_RECEIVED\",e[e.FIRST_AUDIO_RECEIVED=349]=\"FIRST_AUDIO_RECEIVED\",e[e.FIRST_VIDEO_DECODE=350]=\"FIRST_VIDEO_DECODE\",e[e.FIRST_AUDIO_DECODE=351]=\"FIRST_AUDIO_DECODE\",e[e.ON_ADD_AUDIO_STREAM=352]=\"ON_ADD_AUDIO_STREAM\",e[e.ON_ADD_VIDEO_STREAM=353]=\"ON_ADD_VIDEO_STREAM\",e[e.ON_UPDATE_STREAM=356]=\"ON_UPDATE_STREAM\",e[e.ON_REMOVE_STREAM=355]=\"ON_REMOVE_STREAM\",e[e.JOIN_CHANNEL_TIMEOUT=407]=\"JOIN_CHANNEL_TIMEOUT\",e[e.PEER_PUBLISH_STATUS=408]=\"PEER_PUBLISH_STATUS\",e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\",e[e.JOIN_WEB_PROXY_AP=700]=\"JOIN_WEB_PROXY_AP\",e[e.WEBSOCKET_QUIT=671]=\"WEBSOCKET_QUIT\",e[e.USER_ANALYTICS=1e4]=\"USER_ANALYTICS\",e[e.AUTOPLAY_FAILED=9178]=\"AUTOPLAY_FAILED\"}($C||($C={}));class iv{constructor(){nu(this,\"baseInfoMap\",new Map),nu(this,\"proxyServer\",void 0),nu(this,\"eventUploadTimer\",void 0),nu(this,\"setSessionIdTimer\",void 0),nu(this,\"url\",void 0),nu(this,\"backupUrl\",void 0),nu(this,\"_appId\",void 0),nu(this,\"keyEventUploadPendingItems\",[]),nu(this,\"normalEventUploadPendingItems\",[]),nu(this,\"apiInvokeUploadPendingItems\",[]),nu(this,\"apiInvokeCount\",0),nu(this,\"ltsList\",[]),nu(this,\"lastSendNormalEventTime\",Date.now()),nu(this,\"customReportCounterTimer\",void 0),nu(this,\"customReportCount\",0),nu(this,\"extApiInvoke\",(async e=>{for(const t of e){const e=tv(tv({},t),{},{sid:null,invokeId:++this.apiInvokeCount,tag:oT.TRACER});this.sendApiInvoke(e)}})),this.eventUploadTimer=window.setInterval(this.doSend.bind(this),kC(\"EVENT_REPORT_SEND_INTERVAL\")),this.setSessionIdTimer=window.setInterval(this.appendSessionId.bind(this),kC(\"EVENT_REPORT_SEND_INTERVAL\"))}getBaseInfoBySessionId(e){return this.baseInfoMap.get(e)}adjustSessionStartTime(e){if(!this.baseInfoMap.has(e)&&!this.baseInfoMap.get(e))return void KC.error(\"adjust session \".concat(e,\" start time, sid is not exist or info is undefined\"));const t=this.baseInfoMap.get(e),i=Date.now(),n=t.startTime;t.startTime=i,KC.debug(\"rewrite session \".concat(e,\" startTime: \").concat(i,\" , \").concat(i-n,\"ms\")),this.baseInfoMap.set(e,t)}setAppId(e){this._appId=e}reportApiInvoke(e,t,i){t.timeout=t.timeout||6e4,t.reportResult=void 0===t.reportResult||t.reportResult;const n=Date.now();this.apiInvokeCount+=1;const r=this.apiInvokeCount,s=()=>({tag:t.tag,invokeId:r,sid:e,name:t.name,apiInvokeTime:n,options:t.options,states:t.states||null}),o=!!kC(\"SHOW_REPORT_INVOKER_LOG\");o&&KC.info(\"\".concat(t.name,\" start\"),t.options);let a=!1;UT(t.timeout).then((()=>{a||(this.sendApiInvoke(tv(tv({},s()),{},{error:xg.API_INVOKE_TIMEOUT,success:!1})),KC.debug(\"\".concat(t.name,\" timeout\")))}));const c=new Vg(xg.UNEXPECTED_ERROR,\"\".concat(t.name,\": this api invoke is end\"));return{onSuccess:e=>{const n=()=>{if(a)throw c;return a=!0,this.sendApiInvoke(tv(tv({},s()),{},{success:!0},t.reportResult&&{result:e})),o&&KC.info(\"\".concat(t.name,\" onSuccess\")),e};return i?jT(n,t.name+\"Success\",i,(()=>a=!0)):n()},onError:e=>{const n=()=>{if(a)throw e;a=!0,this.sendApiInvoke(tv(tv({},s()),{},{success:!1,error:e})),o&&KC.info(\"\".concat(t.name,\" onFailure\"),e.toString())};return i?jT(n,t.name+\"Error\",i,(()=>a=!0)):n()}}}sessionInit(e,t){if(this.baseInfoMap.has(e))return;const i=Date.now(),n=this.createBaseInfo(e,i);n.cname=t.cname;const r=Object.assign({},{willUploadConsoleLog:kC(\"UPLOAD_LOG\"),maxTouchPoints:navigator.maxTouchPoints,areaVersion:NC?\"global\":\"oversea\",areas:kC(\"AREAS\")&&kC(\"AREAS\").join(\",\")},t.extend),s=Date.now(),o=tv(tv({},n),{},{eventType:XC.SESSION_INIT,appid:t.appid,browser:navigator.userAgent,build:DC,lts:s,elapse:s-i,extend:JSON.stringify(r),mode:t.mode,process:kC(\"PROCESS_ID\"),appType:kC(\"APP_TYPE\"),success:!0,version:OC});this.send({type:QC.SESSION,data:o},!0)}joinChooseServer(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.JOIN_CHOOSE_SERVER,lts:r,eventElapse:r-t.lts,chooseServerAddr:t.csAddr,errorCode:t.ec,elapse:r-i.startTime,success:t.succ,chooseServerAddrList:JSON.stringify(t.serverList),uid:t.uid?parseInt(t.uid):null,cid:t.cid?parseInt(t.cid):null,chooseServerIp:t.csIp||\"\",opid:t.opid,unilbsServerIds:t.unilbsServerIds,extend:t.extend||void 0,isHttp3:t.isHttp3});this.send({type:QC.JOIN_CHOOSE_SERVER,data:s},!0)}reqUserAccount(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.REQ_USER_ACCOUNT,lts:r,success:t.success,serverAddress:t.serverAddr,stringUid:t.stringUid,uid:t.uid,errorCode:t.errorCode,elapse:r-i.startTime,eventElapse:r-t.lts,extend:JSON.stringify(t.extend)});this.send({type:QC.REQ_USER_ACCOUNT,data:s},!0)}joinGateway(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info;t.vid&&(n.vid=t.vid),n.uid=t.uid,n.cid=t.cid;const r=Date.now(),{firstSuccess:s,avoidJoinStartTime:o,isProxy:a,addr:c}=t,d=r-(s&&o?o:i.startTime),l=tv(tv({},n),{},{eventType:XC.JOIN_GATEWAY,lts:r,gatewayAddr:t.addr,success:t.succ,errorCode:t.ec,elapse:d,eventElapse:r-t.lts,firstSuccess:s,signalChannel:t.signalChannel}),h=l.success?1:0;if(t.succ&&(i.lastJoinSuccessTime=r),s)this.send({type:QC.JOIN_GATEWAY,data:l},!0);else{let e;if(c)if(a){const t=c.match(/h=(\\d{1,3}-){3}\\d{1,3}/g),i=c.match(/p=[0-9]{1,6}/g);e={isSuccess:h,gatewayIp:t&&t.length?t[0].split(\"=\")[1].replace(/-/g,\".\"):\"\",port:i&&i.length?i[0].split(\"=\")[1]:\"\",isProxy:a?1:0}}else{const t=c.match(/wss:\\/\\/(\\d{1,3}-){3}\\d{1,3}/g),i=c.match(/(:|p=)[0-9]{1,6}/g);e={isSuccess:h,gatewayIp:t&&t.length?t[0].split(\"//\")[1].replace(/-/g,\".\"):\"\",port:i&&i.length?i[0].split(/:|p=/g)[1]:\"\",isProxy:a?1:0}}else e={isSuccess:h,gatewayIp:\"\",port:\"\",isProxy:a?1:0};delete l.success,delete l.eventType,delete l.firstSuccess,l.vid=Number(l.vid);const t=Object.assign({},l,e,{eventType:XC.REJOIN_GATEWAY});this.send({type:QC.RE_JOIN_GATEWAY,data:t},!0)}}joinChannelTimeout(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=Date.now(),r=tv(tv({},i.info),{},{lts:n,timeout:t,elapse:n-i.startTime});this.send({type:QC.JOIN_CHANNEL_TIMEOUT,data:r},!0)}publish(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.PUBLISH,lts:r,eventElapse:t.eventElapse,elapse:r-i.startTime,success:t.succ,errorCode:t.ec,videoName:t.videoName,audioName:t.audioName,screenName:t.screenName,screenshare:t.screenshare,audio:t.audio,video:t.video,p2pid:t.p2pid,publishRequestid:t.publishRequestid});this.send({type:QC.PUBLISH,data:s},!0)}subscribe(e,t,i){const n=this.baseInfoMap.get(e);if(!n)return;const r=n.info,s=Date.now(),o=tv(tv({},r),{},{eventType:XC.SUBSCRIBE,lts:s,eventElapse:t.eventElapse,elapse:s-n.startTime,success:t.succ,errorCode:t.ec,video:t.video,audio:t.audio,subscribeRequestid:t.subscribeRequestid,p2pid:t.p2pid},i&&{extend:JSON.stringify({isMassSubscribe:!0})});\"string\"==typeof t.peerid?o.peerSuid=t.peerid:o.peer=t.peerid,this.send({type:QC.SUBSCRIBE,data:o},!0)}wsCompressorInit(e){var t;const i=[...hu(t=this.baseInfoMap).call(t)],n=i.length?i[0]:\"UnableToGetSid\",r=this.baseInfoMap.get(n);if(!r)return;const s=r.info,o=Date.now(),a=tv(tv({},s),{},{eventType:XC.WS_COMPRESSOR_INIT,lts:o,eventElapse:e.eventElapse,elapse:o-r.startTime,status:e.status?1:2});this.send({type:QC.WS_COMPRESSOR_INIT,data:a},!0)}firstRemoteVideoDecode(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const s=r.info,o=Date.now(),a=tv(tv(tv({},s),n),{},{elapse:o-r.startTime,eventType:t,lts:o,firstDecodeFrame:Math.max(o-r.startTime,0),apEnd:Math.max(n.apEnd-r.startTime,0),apStart:Math.max(n.apStart-r.startTime,0),joinGwEnd:Math.max(n.joinGwEnd-r.startTime,0),joinGwStart:Math.max(n.joinGwStart-r.startTime,0),pcEnd:Math.max(n.pcEnd-r.startTime,0),pcStart:Math.max(n.pcStart-r.startTime,0),subscriberEnd:Math.max(n.subscriberEnd-r.startTime,0),subscriberStart:Math.max(n.subscriberStart-r.startTime,0),videoAddNotify:Math.max(n.videoAddNotify-r.startTime,0)});this.send({type:i,data:a},!0)}firstRemoteFrame(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const s=r.info,o=Date.now(),a=tv(tv(tv({},s),n),{},{elapse:o-r.startTime,eventType:t,lts:o});this.send({type:i,data:a},!0)}pcStats(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv(tv({},n),t),{},{vid:void 0===n.vid?0:Number(n.vid),elapse:r-i.startTime,eventType:XC.PC_STATS,lts:r});this.send({type:QC.PC_STATS,data:s},!0)}updateRemoteRTPCapabilities(e,t){this.reportApiInvoke(e,{name:\"Client.updateRemoteRTPCapabilities\",options:t,tag:oT.TRACER}).onSuccess()}onGatewayStream(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const s=r.info,o=Date.now(),a=tv(tv(tv({},s),n),{},{eventType:t,lts:o});this.send({type:i,data:a},!0)}streamSwitch(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.STREAM_SWITCH,lts:r,isDual:t.isdual,elapse:r-i.startTime,success:t.succ});this.send({type:QC.STREAM_SWITCH,data:s},!0)}requestProxyAppCenter(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.REQUEST_PROXY_APPCENTER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,APAddr:t.APAddr,workerManagerList:t.workerManagerList,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:QC.REQUEST_PROXY_APPCENTER,data:s},!0)}requestProxyWorkerManager(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{eventType:XC.REQUEST_PROXY_WORKER_MANAGER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,workerManagerAddr:t.workerManagerAddr,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:QC.REQUEST_PROXY_WORKER_MANAGER,data:s},!0)}setProxyServer(e){this.proxyServer=e,e?KC.debug(\"reportProxyServerurl: \".concat(e)):KC.debug(\"disable reportProxyServerurl: \".concat(e))}peerPublishStatus(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv({},n),{},{subscribeElapse:t.subscribeElapse,peer:t.peer,peerPublishDuration:Math.max(t.audioPublishDuration,t.videoPublishDuration),audiotag:t.audioPublishDuration>0?1:-1,videotag:t.videoPublishDuration>0?1:-1,lts:r,elapse:r-i.startTime,joinChannelSuccessElapse:r-(i.lastJoinSuccessTime||r),peerPublishDurationVideo:t.videoPublishDuration,peerPublishDurationAudio:t.audioPublishDuration});this.send({type:QC.PEER_PUBLISH_STATUS,data:s},!0)}workerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=function(e,t,i){const n=e[t];if(!n||\"string\"!=typeof n)return[e];e[t]=\"\";const r=LT(JSON.stringify(e));let s=0;const o=[];let a=0;for(let c=0;c<n.length;c++)a+=n.charCodeAt(c)<=127?1:3,a<=i-r||(o[o.length]=vT(vT({},e),{},{[t]:n.substring(s,c)}),s=c,a=n.charCodeAt(c)<=127?1:3);return s!==n.length-1&&(o[o.length]=vT(vT({},e),{},{[t]:n.substring(s)})),o}(tv(tv(tv({},n),t),{},{elapse:r-i.startTime,lts:r,productType:\"WebRTC\"}),\"payload\",1300);s.forEach((e=>this.send({type:QC.WORKER_EVENT,data:e},!0)))}apworkerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv(tv({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:QC.AP_WORKER_EVENT,data:s},!0)}joinWebProxyAP(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv(tv({},n),t),{},{elapse:r-i.startTime,lts:r,extend:t.extend||void 0});this.send({type:QC.JOIN_WEB_PROXY_AP,data:s},!0)}WebSocketQuit(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),s=tv(tv(tv({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:QC.WEBSOCKET_QUIT,data:s},!0)}async sendCustomReportMessage(e,t){if(this.customReportCount+=t.length,this.customReportCount>kC(\"CUSTOM_REPORT_LIMIT\"))throw new Vg(xg.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval((()=>{this.customReportCount=0}),5e3));const i=Date.now(),n=t.map((t=>({type:QC.USER_ANALYTICS,data:tv(tv({sid:e},t),{},{lts:i})})));try{kC(\"NEW_REPORT_SERVER\")?await this.postDataToStatsCollector2(n):await this.postDataToStatsCollector(n)}catch(e){throw KC.error(\"send custom report message failed\",e.toString()),new Vg(xg.CUSTOM_REPORT_SEND_FAILED,e.message)}}sendApiInvoke(e){const t=kC(\"NOT_REPORT_EVENT\");if(e.tag&&Pr(t)&&Pr(t).call(t,e.tag))return!1;if(null===e.sid)return this.apiInvokeUploadPendingItems.push(e),!1;const i=this.baseInfoMap.get(e.sid);if(!i)return this.apiInvokeUploadPendingItems.push(e),!1;const{cname:n,uid:r,cid:s}=i.info;let o;if(e.lts=e.lts||Date.now(),e.error)if(e.error instanceof Vg){const{code:t,message:i}=e.error;o=t||(i||e.error.toString())}else o=e.error.toString();const a={invokeId:e.invokeId,sid:e.sid,cname:n,cid:s,uid:r,lts:e.lts,success:e.success,elapse:e.lts-i.startTime,execElapse:e.lts-e.apiInvokeTime,apiName:e.name,options:e.options?JSON.stringify(e.options):void 0,execStates:e.states?JSON.stringify(e.states):void 0,execResult:e.result?JSON.stringify(e.result):void 0,errorCode:e.error?o:void 0,errorMsg:e.error?JSON.stringify(e.error):void 0};return this.send({type:QC.API_INVOKE,data:a},!1),!0}appendSessionId(){iv.__CLIENT_LIST__.forEach((e=>{if(e._sessionId){const t=this.apiInvokeUploadPendingItems.length;for(let i=0;i<t;i++){const t=this.apiInvokeUploadPendingItems.shift();t&&(t.sid=e._sessionId,this.sendApiInvoke(Object.assign({},t)))}}}))}send(e,t){if(t)return this.keyEventUploadPendingItems.push(e),void this.sendItems(this.keyEventUploadPendingItems,!0);this.normalEventUploadPendingItems.push(e),this.normalEventUploadPendingItems.length>kC(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&this.normalEventUploadPendingItems.splice(0,1),this.normalEventUploadPendingItems.length>=10&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){this.keyEventUploadPendingItems.length>0&&this.sendItems(this.keyEventUploadPendingItems,!0),this.normalEventUploadPendingItems.length>0&&Date.now()-this.lastSendNormalEventTime>=5e3&&this.sendItems(this.normalEventUploadPendingItems,!1)}sendItems(e,t){const i=[],n=[];for(;e.length;){const t=e.shift();i.length<20?i.push(t):n.push(t)}e.push(...n);for(const e of[...i]){var r;if(-1!==this.ltsList.indexOf(e.data.lts))e.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(e.data.lts);else this.ltsList.push(e.data.lts),Zu(r=this.ltsList).call(r,((e,t)=>e-t))}t||(this.lastSendNormalEventTime=Date.now());return kC(\"ENABLE_EVENT_REPORT\")?(i.length&&(kC(\"NEW_REPORT_SERVER\")?this.postDataToStatsCollector2(i):this.postDataToStatsCollector(i)).catch((e=>i=>{kC(\"EVENT_REPORT_RETRY\")&&(t?this.keyEventUploadPendingItems=this.keyEventUploadPendingItems.concat(e):(this.normalEventUploadPendingItems=this.normalEventUploadPendingItems.concat(e),this.normalEventUploadPendingItems.length>kC(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&(this.normalEventUploadPendingItems.splice(0,this.normalEventUploadPendingItems.length-kC(\"NORMAL_EVENT_QUEUE_CAPACITY\")),KC.warning(\"report: drop normal events\"))))})(i)),e):e}async postDataToStatsCollector2(e){RT.networkState===hT.OFFLINE&&await tg.race([RT.onlineWaiter,UT(2*JT.maxRetryTimeout)]);const t=e=>{let t=new Uint8Array;return e.forEach((e=>{const i=Zg(JSON.stringify(e.data)),n=new ArrayBuffer(5),r=(e=>{let t=0;return Object.entries(QC).forEach((i=>{let[n,r]=i;r===e.type&&(t=EventNameToID[n])})),t})(e),s=new DataView(n);s.setUint16(0,i.byteLength,!0),s.setUint8(2,255&r),s.setUint8(3,r>>>8&255),s.setUint8(4,r>>>16&255),t=$g(t,new Uint8Array(n)),t=$g(t,i)})),t},i=\"event\";let n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(kC(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"&p=443&d=\").concat(i):\"https://\".concat(kC(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"/\").concat(i);for(let r=0;r<2;r+=1){1===r&&(n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(kC(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"&p=443&d=\").concat(i):\"https://\".concat(kC(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"/\").concat(i));try{await RC(n,{timeout:1e4,data:t(e),headers:tv(tv({biz:\"webrtc\",sendts:Math.round(Date.now()/1e3),debug:\"false\"},this._appId&&{appid:this._appId}),{},{\"Content-Type\":\"application/octet-stream\"})},!0)}catch(e){if(1===r)throw e;continue}return}}async postDataToStatsCollector(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i={msgType:\"EventMessages\",sentTs:Math.round(Date.now()/1e3),payloads:e.map((e=>JSON.stringify(e))),vid:(e=>{const t=e&&e.data.sid&&this.baseInfoMap.get(e.data.sid);return t&&t.info.vid&&+t.info.vid||0})(e[0])};RT.networkState===hT.OFFLINE&&await tg.race([RT.onlineWaiter,UT(2*JT.maxRetryTimeout)]);const n=t?\"/events/proto-raws\":\"/events/messages\";let r=this.url||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(kC(\"EVENT_REPORT_DOMAIN\"),\"&p=\").concat(kC(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(kC(\"EVENT_REPORT_DOMAIN\"),\":\").concat(kC(\"STATS_COLLECTOR_PORT\")).concat(n));for(let e=0;e<2;e+=1){1===e&&(r=this.backupUrl||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(kC(\"EVENT_REPORT_BACKUP_DOMAIN\"),\"&p=\").concat(kC(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(kC(\"EVENT_REPORT_BACKUP_DOMAIN\"),\":\").concat(kC(\"STATS_COLLECTOR_PORT\")).concat(n)));try{t?await CC(r,{timeout:1e4,data:i}):await RC(r,{timeout:1e4,data:i})}catch(t){if(1===e)throw t;continue}return}}createBaseInfo(e,t){const i=Object.assign({},zC);return i.sid=e,this.baseInfoMap.set(e,{info:i,startTime:t}),i}reportResourceTiming(e,t){const i=performance.getEntriesByName(e),n=i[i.length-1];n&&this.reportApiInvoke(t,{name:\"Client.resourceTiming\",options:n,tag:oT.TRACER}).onSuccess()}}function nv(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t,i,n){const r=n.value;if(\"function\"==typeof r){const s=e.className||t.__className__||(\"AgoraRTCClient\"===t.constructor.name?\"Client\":t.constructor.name);n.value=function(){for(var t=arguments.length,n=new Array(t),o=0;o<t;o++)n[o]=arguments[o];let a=n;if(e.argsMap)try{a=e.argsMap(this,...n)}catch(e){KC.warning(e),a=[]}try{JSON.stringify(a)}catch(e){KC.warning(\"arguments for method \".concat(s,\".\").concat(String(i),\" not serializable for apiInvoke.\")),a=[]}const c=(e.report||rv).reportApiInvoke(this._sessionId||null,{name:\"\".concat(s,\".\").concat(String(i)),options:a,tag:oT.TRACER,reportResult:e.reportResult},e.throttleTime);try{const t=r.apply(this,n);return t instanceof tg?t.then((t=>(c.onSuccess(e.reportResult&&t),t))).catch((e=>{throw c.onError(e),e})):(c.onSuccess(e.reportResult&&t),t)}catch(e){throw c.onError(e),e}}}return n}}nu(iv,\"__CLIENT_LIST__\",[]);const rv=new iv;VC.on(\"REPORT_LOG_UPLOAD\",(e=>{e.networkState=RT.networkState,rv.reportApiInvoke(null,{name:\"logUploadError\",options:e,tag:oT.TRACER})}));const sv=[\"CHINA\",\"GLOBAL\"],ov=function(){const e=\"us\".concat(\"erna\",\"me\"),t=\"pa\".concat(\"sswo\",\"rd\"),i=[\"t\",\"s\",\"t\"];i.splice(1,0,\"e\");const n=i.join(\"\"),r=[];for(let e=0;e<6;e++)r.push(\"1\");const s=r.join(\"\"),o={};return o[e]=n,o[t]=s,Object.assign(o,{turnServerURL:\"\",tcpport:3433,udpport:3478,forceturn:!1})}();window.DEFAULT_TURN_CONFIG=ov,NC||(PC.WEBCS_DOMAIN=[\"ap-web-1-oversea.agora.io\",\"ap-web-1-north-america.agora.io\"],PC.WEBCS_DOMAIN_BACKUP_LIST=[\"ap-web-2-oversea.agora.io\",\"ap-web-2-north-america.agora.io\"],PC.PROXY_CS=[\"proxy-ap-web-oversea.agora.io\",\"proxy-ap-web-america.agora.io\"],PC.CDS_AP=[\"cds-ap-web-oversea.agora.io\",\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],PC.ACCOUNT_REGISTER=[\"sua-ap-web-oversea.agora.io\",\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],PC.UAP_AP=[\"uap-ap-web-oversea.agora.io\",\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],PC.LOG_UPLOAD_SERVER=\"logservice-oversea.agora.io\",PC.EVENT_REPORT_DOMAIN=\"statscollector-1-oversea.agora.io\",PC.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-2-oversea.agora.io\",PC.PROXY_SERVER_TYPE3=\"webrtc-cloud-proxy.agora.io\",PC.AREAS=[\"NORTH_AMERICA\",\"OVERSEA\"]);const av=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],cv=[];function dv(e,t){return!!t&&cv.some((i=>i.uid===e&&i.channelName===t))}iv.__CLIENT_LIST__=cv;var lv,hv,uv,pv,_v,Ev,mv,fv,gv,Tv,Sv,Rv,Cv,vv,Iv,yv,Av,bv=er(\"Array\").values,wv=Er,Ov=ni,Nv=Ee,Dv=bv,Pv=Array.prototype,Lv={DOMTokenList:!0,NodeList:!0},kv=J((function(e){var t=e.values;return e===Pv||Nv(Pv,e)&&t===Pv.values||Ov(Lv,wv(e))?Dv:t}));function Mv(e,t,i,n){var r,s=arguments.length,o=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(o=(s<3?r(o):s>3?r(t,i,o):r(t,i))||o);return s>3&&o&&Object.defineProperty(t,i,o),o}function Uv(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)}!function(e){e.L1T1=\"L1T1\",e.L1T2=\"L1T2\",e.L1T3=\"L1T3\",e.L2T1_KEY=\"L2T1_KEY\",e.L2T2_KEY=\"L2T2_KEY\",e.L2T3_KEY=\"L2T3_KEY\",e.L3T1_KEY=\"L3T1_KEY\",e.L3T2_KEY=\"L3T2_KEY\",e.L3T3_KEY=\"L3T3_KEY\"}(lv||(lv={})),function(e){e.CERTIFICATE=\"certificate\",e.CODEC=\"codec\",e.CANDIDATE_PAIR=\"candidate-pair\",e.LOCAL_CANDIDATE=\"local-candidate\",e.REMOTE_CANDIDATE=\"remote-candidate\",e.INBOUND=\"inbound-rtp\",e.TRACK=\"track\",e.OUTBOUND=\"outbound-rtp\",e.PC=\"peer-connection\",e.REMOTE_INBOUND=\"remote-inbound-rtp\",e.REMOTE_OUTBOUND=\"remote-outbound-rtp\",e.TRANSPORT=\"transport\",e.CSRC=\"csrc\",e.DATA_CHANNEL=\"data-channel\",e.STREAM=\"stream\",e.SENDER=\"sender\",e.RECEIVER=\"receiver\"}(hv||(hv={})),function(e){e[e.ACCESS_POINT=101]=\"ACCESS_POINT\",e[e.UNILBS=201]=\"UNILBS\",e[e.STRING_UID_ALLOCATOR=901]=\"STRING_UID_ALLOCATOR\"}(uv||(uv={})),function(e){e[e.IIIEGAL_APPID=1]=\"IIIEGAL_APPID\",e[e.IIIEGAL_UID=2]=\"IIIEGAL_UID\",e[e.INTERNAL_ERROR=3]=\"INTERNAL_ERROR\"}(pv||(pv={})),function(e){e[e.INVALID_VENDOR_KEY=5]=\"INVALID_VENDOR_KEY\",e[e.INVALID_CHANNEL_NAME=7]=\"INVALID_CHANNEL_NAME\",e[e.INTERNAL_ERROR=8]=\"INTERNAL_ERROR\",e[e.NO_AUTHORIZED=9]=\"NO_AUTHORIZED\",e[e.DYNAMIC_KEY_TIMEOUT=10]=\"DYNAMIC_KEY_TIMEOUT\",e[e.NO_ACTIVE_STATUS=11]=\"NO_ACTIVE_STATUS\",e[e.DYNAMIC_KEY_EXPIRED=13]=\"DYNAMIC_KEY_EXPIRED\",e[e.STATIC_USE_DYNAMIC_KEY=14]=\"STATIC_USE_DYNAMIC_KEY\",e[e.DYNAMIC_USE_STATIC_KEY=15]=\"DYNAMIC_USE_STATIC_KEY\",e[e.USER_OVERLOAD=16]=\"USER_OVERLOAD\",e[e.FORBIDDEN_REGION=18]=\"FORBIDDEN_REGION\",e[e.CANNOT_MEET_AREA_DEMAND=19]=\"CANNOT_MEET_AREA_DEMAND\"}(_v||(_v={})),function(e){e[e.NO_FLAG_SET=100]=\"NO_FLAG_SET\",e[e.FLAG_SET_BUT_EMPTY=101]=\"FLAG_SET_BUT_EMPTY\",e[e.INVALID_FALG_SET=102]=\"INVALID_FALG_SET\",e[e.FLAG_SET_BUT_NO_RE=103]=\"FLAG_SET_BUT_NO_RE\",e[e.INVALID_SERVICE_ID=104]=\"INVALID_SERVICE_ID\",e[e.NO_SERVICE_AVAILABLE=200]=\"NO_SERVICE_AVAILABLE\",e[e.NO_SERVICE_AVAILABLE_P2P=201]=\"NO_SERVICE_AVAILABLE_P2P\",e[e.NO_SERVICE_AVAILABLE_VOICE=202]=\"NO_SERVICE_AVAILABLE_VOICE\",e[e.NO_SERVICE_AVAILABLE_WEBRTC=203]=\"NO_SERVICE_AVAILABLE_WEBRTC\",e[e.NO_SERVICE_AVAILABLE_CDS=204]=\"NO_SERVICE_AVAILABLE_CDS\",e[e.NO_SERVICE_AVAILABLE_CDN=205]=\"NO_SERVICE_AVAILABLE_CDN\",e[e.NO_SERVICE_AVAILABLE_TDS=206]=\"NO_SERVICE_AVAILABLE_TDS\",e[e.NO_SERVICE_AVAILABLE_REPORT=207]=\"NO_SERVICE_AVAILABLE_REPORT\",e[e.NO_SERVICE_AVAILABLE_APP_CENTER=208]=\"NO_SERVICE_AVAILABLE_APP_CENTER\",e[e.NO_SERVICE_AVAILABLE_ENV0=209]=\"NO_SERVICE_AVAILABLE_ENV0\",e[e.NO_SERVICE_AVAILABLE_VOET=210]=\"NO_SERVICE_AVAILABLE_VOET\",e[e.NO_SERVICE_AVAILABLE_STRING_UID=211]=\"NO_SERVICE_AVAILABLE_STRING_UID\",e[e.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]=\"NO_SERVICE_AVAILABLE_WEBRTC_UNILBS\",e[e.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]=\"NO_SERVICE_AVAILABLE_UNILBS_FLV\"}(Ev||(Ev={})),function(e){e[e.K_TIMESTAMP_EXPIRED=2]=\"K_TIMESTAMP_EXPIRED\",e[e.K_CHANNEL_PERMISSION_INVALID=3]=\"K_CHANNEL_PERMISSION_INVALID\",e[e.K_CERTIFICATE_INVALID=4]=\"K_CERTIFICATE_INVALID\",e[e.K_CHANNEL_NAME_EMPTY=5]=\"K_CHANNEL_NAME_EMPTY\",e[e.K_CHANNEL_NOT_FOUND=6]=\"K_CHANNEL_NOT_FOUND\",e[e.K_TICKET_INVALID=7]=\"K_TICKET_INVALID\",e[e.K_CHANNEL_CONFLICTED=8]=\"K_CHANNEL_CONFLICTED\",e[e.K_SERVICE_NOT_READY=9]=\"K_SERVICE_NOT_READY\",e[e.K_SERVICE_TOO_HEAVY=10]=\"K_SERVICE_TOO_HEAVY\",e[e.K_UID_BANNED=14]=\"K_UID_BANNED\",e[e.K_IP_BANNED=15]=\"K_IP_BANNED\",e[e.K_CHANNEL_BANNED=16]=\"K_CHANNEL_BANNED\",e[e.K_AUTO_REBALANCE=28]=\"K_AUTO_REBALANCE\",e[e.WARN_NO_AVAILABLE_CHANNEL=103]=\"WARN_NO_AVAILABLE_CHANNEL\",e[e.WARN_LOOKUP_CHANNEL_TIMEOUT=104]=\"WARN_LOOKUP_CHANNEL_TIMEOUT\",e[e.WARN_LOOKUP_CHANNEL_REJECTED=105]=\"WARN_LOOKUP_CHANNEL_REJECTED\",e[e.WARN_OPEN_CHANNEL_TIMEOUT=106]=\"WARN_OPEN_CHANNEL_TIMEOUT\",e[e.WARN_OPEN_CHANNEL_REJECTED=107]=\"WARN_OPEN_CHANNEL_REJECTED\",e[e.WARN_REQUEST_DEFERRED=108]=\"WARN_REQUEST_DEFERRED\",e[e.ERR_DYNAMIC_KEY_TIMEOUT=109]=\"ERR_DYNAMIC_KEY_TIMEOUT\",e[e.ERR_NO_AUTHORIZED=110]=\"ERR_NO_AUTHORIZED\",e[e.ERR_VOM_SERVICE_UNAVAILABLE=111]=\"ERR_VOM_SERVICE_UNAVAILABLE\",e[e.ERR_NO_CHANNEL_AVAILABLE_CODE=112]=\"ERR_NO_CHANNEL_AVAILABLE_CODE\",e[e.ERR_MASTER_VOCS_UNAVAILABLE=114]=\"ERR_MASTER_VOCS_UNAVAILABLE\",e[e.ERR_INTERNAL_ERROR=115]=\"ERR_INTERNAL_ERROR\",e[e.ERR_NO_ACTIVE_STATUS=116]=\"ERR_NO_ACTIVE_STATUS\",e[e.ERR_INVALID_UID=117]=\"ERR_INVALID_UID\",e[e.ERR_DYNAMIC_KEY_EXPIRED=118]=\"ERR_DYNAMIC_KEY_EXPIRED\",e[e.ERR_STATIC_USE_DYANMIC_KE=119]=\"ERR_STATIC_USE_DYANMIC_KE\",e[e.ERR_DYNAMIC_USE_STATIC_KE=120]=\"ERR_DYNAMIC_USE_STATIC_KE\",e[e.ERR_NO_VOCS_AVAILABLE=2e3]=\"ERR_NO_VOCS_AVAILABLE\",e[e.ERR_NO_VOS_AVAILABLE=2001]=\"ERR_NO_VOS_AVAILABLE\",e[e.ERR_JOIN_CHANNEL_TIMEOUT=2002]=\"ERR_JOIN_CHANNEL_TIMEOUT\",e[e.ERR_REPEAT_JOIN_CHANNEL=2003]=\"ERR_REPEAT_JOIN_CHANNEL\",e[e.ERR_JOIN_BY_MULTI_IP=2004]=\"ERR_JOIN_BY_MULTI_IP\",e[e.ERR_NOT_JOINED=2011]=\"ERR_NOT_JOINED\",e[e.ERR_REPEAT_JOIN_REQUEST=2012]=\"ERR_REPEAT_JOIN_REQUEST\",e[e.ERR_INVALID_VENDOR_KEY=2013]=\"ERR_INVALID_VENDOR_KEY\",e[e.ERR_INVALID_CHANNEL_NAME=2014]=\"ERR_INVALID_CHANNEL_NAME\",e[e.ERR_INVALID_STRINGUID=2015]=\"ERR_INVALID_STRINGUID\",e[e.ERR_TOO_MANY_USERS=2016]=\"ERR_TOO_MANY_USERS\",e[e.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]=\"ERR_SET_CLIENT_ROLE_TIMEOUT\",e[e.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]=\"ERR_SET_CLIENT_ROLE_NO_PERMISSION\",e[e.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]=\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",e[e.ERR_PUBLISH_REQUEST_INVALID=2020]=\"ERR_PUBLISH_REQUEST_INVALID\",e[e.ERR_SUBSCRIBE_REQUEST_INVALID=2021]=\"ERR_SUBSCRIBE_REQUEST_INVALID\",e[e.ERR_NOT_SUPPORTED_MESSAGE=2022]=\"ERR_NOT_SUPPORTED_MESSAGE\",e[e.ERR_ILLEAGAL_PLUGIN=2023]=\"ERR_ILLEAGAL_PLUGIN\",e[e.ERR_REJOIN_TOKEN_INVALID=2024]=\"ERR_REJOIN_TOKEN_INVALID\",e[e.ERR_REJOIN_USER_NOT_JOINED=2025]=\"ERR_REJOIN_USER_NOT_JOINED\",e[e.ERR_INVALID_OPTIONAL_INFO=2027]=\"ERR_INVALID_OPTIONAL_INFO\",e[e.ILLEGAL_AES_PASSWORD=2028]=\"ILLEGAL_AES_PASSWORD\",e[e.ILLEGAL_CLIENT_ROLE_LEVEL=2029]=\"ILLEGAL_CLIENT_ROLE_LEVEL\",e[e.ERR_TOO_MANY_BROADCASTERS=2031]=\"ERR_TOO_MANY_BROADCASTERS\",e[e.ERR_TOO_MANY_SUBSCRIBERS=2032]=\"ERR_TOO_MANY_SUBSCRIBERS\",e[e.ERR_LICENSE_MISSING=32769]=\"ERR_LICENSE_MISSING\",e[e.ERR_LICENSE_EXPIRED=32771]=\"ERR_LICENSE_EXPIRED\",e[e.ERR_LICENSE_MINUTES_EXCEEDED=32773]=\"ERR_LICENSE_MINUTES_EXCEEDED\",e[e.ERR_LICENSE_PERIOD_INVALID=32774]=\"ERR_LICENSE_PERIOD_INVALID\",e[e.ERR_LICENSE_MULTIPLE_SDK_SERVICE=32778]=\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",e[e.ERR_LICENSE_ILLEGAL=32783]=\"ERR_LICENSE_ILLEGAL\",e[e.ERR_TEST_RECOVER=9e3]=\"ERR_TEST_RECOVER\",e[e.ERR_TEST_TRYNEXT=9001]=\"ERR_TEST_TRYNEXT\",e[e.ERR_TEST_RETRY=9002]=\"ERR_TEST_RETRY\"}(mv||(mv={})),function(e){e.CONNECTING=\"connecting\",e.CONNECTED=\"connected\",e.RECONNECTING=\"reconnecting\",e.CLOSED=\"closed\"}(fv||(fv={})),function(e){e.WS_CONNECTED=\"ws_connected\",e.WS_RECONNECTING=\"ws_reconnecting\",e.WS_CLOSED=\"ws_closed\",e.WS_RECONNECT_WAITTING_FINISH=\"ws_reconnect_waitting_finish\",e.WS_RECONNECT_CREATE_CONNECTION=\"ws_reconnect_create_connection\",e.ON_BINARY_DATA=\"on_binary_data\",e.REQUEST_RECOVER=\"request_recover\",e.REQUEST_JOIN_INFO=\"request_join_info\",e.REQUEST_REJOIN_INFO=\"req_rejoin_info\",e.IS_P2P_DISCONNECTED=\"is_p2p_dis\",e.DISCONNECT_P2P=\"dis_p2p\",e.ABORT_P2P_EXECUTION=\"abort_p2p_execution\",e.NEED_RENEW_SESSION=\"need-sid\",e.REPORT_JOIN_GATEWAY=\"report_join_gateway\",e.REQUEST_TIMEOUT=\"request_timeout\",e.REQUEST_SUCCESS=\"request_success\",e.JOIN_RESPONSE=\"join_response\",e.DATACHANNEL_PRECONNECT=\"datachannel_preconnect\",e.DATACHANNEL_CONNECTING=\"datachannel_connecting\",e.DATACHANNEL_FAILBACK=\"datachannel_failback\",e.P2P_START=\"p2p_start\",e.P2P_CONNECTION=\"p2p_connection\",e.P2P_REMOTE_CANDIDATE_UPDATE=\"p2p_remote_candidate_update\",e.P2P_SUBSCRIBE=\"p2p_subscribe\",e.P2P_UNSUBSCRIBE=\"p2p_unsubscribe\",e.P2P_EXCHANGE_SDP=\"p2p_exchange_sdp\",e.P2P_ON_ADD_VIDEO_STREAM=\"p2p_on_add_video_stream\",e.P2P_ON_ADD_AUDIO_STREAM=\"p2p_on_add_audio_stream\"}(gv||(gv={})),function(e){e.PING=\"ping\",e.PING_BACK=\"ping_back\",e.JOIN=\"join_v3\",e.REJOIN=\"rejoin_v3\",e.LEAVE=\"leave\",e.SET_CLIENT_ROLE=\"set_client_role\",e.PUBLISH=\"publish\",e.PUBLISH_DATASTREAM=\"publish_datastream\",e.UNPUBLISH=\"unpublish\",e.UNPUBLISH_DATASTREAM=\"unpublish_datastream\",e.SUBSCRIBE=\"subscribe\",e.SUBSCRIBE_DATASTREAM=\"subscribe_datastream\",e.SUBSCRIBE_STREAMS=\"subscribe_streams\",e.UNSUBSCRIBE=\"unsubscribe\",e.UNSUBSCRIBE_DATASTREAM=\"unsubscribe_datastream\",e.UNSUBSCRIBE_STREAMS=\"unsubscribe_streams\",e.SUBSCRIBE_CHANGE=\"subscribe_change\",e.TRAFFIC_STATS=\"traffic_stats\",e.RENEW_TOKEN=\"renew_token\",e.SWITCH_VIDEO_STREAM=\"switch_video_stream\",e.DEFAULT_VIDEO_STREAM=\"default_video_stream\",e.SET_FALLBACK_OPTION=\"set_fallback_option\",e.GATEWAY_INFO=\"gateway_info\",e.CONTROL=\"control\",e.SEND_METADATA=\"send_metadata\",e.DATA_STREAM=\"data_stream\",e.PICK_SVC_LAYER=\"pick_svc_layer\",e.RESTART_ICE=\"restart_ice\",e.CONNECT_PC=\"connect_pc\",e.SET_VIDEO_PROFILE=\"set_video_profile\",e.SET_PARAMETER=\"set_parameter\",e.SET_RTM2_FLAG=\"set_rtm2_flag\"}(Tv||(Tv={})),function(e){e.PUBLISH_STATS=\"publish_stats\",e.PUBLISH_RELATED_STATS=\"publish_related_stats\",e.SUBSCRIBE_STATS=\"subscribe_stats\",e.SUBSCRIBE_RELATED_STATS=\"subscribe_related_stats\",e.WS_INFLATE_DATA_LENGTH=\"ws_inflate_data_length\",e.DENOISER_STATS=\"denoiser_stats\",e.TRANSPORT_STATS=\"transport_stats\",e.EXTENSION_USAGE_STATS=\"extension_usage_stats\"}(Sv||(Sv={})),function(e){e.ON_USER_ONLINE=\"on_user_online\",e.ON_USER_OFFLINE=\"on_user_offline\",e.ON_STREAM_FALLBACK_UPDATE=\"on_stream_fallback_update\",e.ON_PUBLISH_STREAM=\"on_publish_stream\",e.ON_UPLINK_STATS=\"on_uplink_stats\",e.ON_P2P_LOST=\"on_p2p_lost\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"on_token_privilege_will_expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"on_token_privilege_did_expire\",e.ON_USER_BANNED=\"on_user_banned\",e.ON_USER_LICENSE_BANNED=\"on_user_license_banned\",e.ON_NOTIFICATION=\"on_notification\",e.ON_CRYPT_ERROR=\"on_crypt_error\",e.MUTE_AUDIO=\"mute_audio\",e.MUTE_VIDEO=\"mute_video\",e.UNMUTE_AUDIO=\"unmute_audio\",e.UNMUTE_VIDEO=\"unmute_video\",e.ON_P2P_OK=\"on_p2p_ok\",e.RECEIVE_METADATA=\"receive_metadata\",e.ON_DATA_STREAM=\"on_data_stream\",e.ON_RTP_CAPABILITY_CHANGE=\"on_rtp_capability_change\",e.ON_REMOTE_DATASTREAM_UPDATE=\"on_remote_datastream_update\",e.ON_REMOTE_FULL_DATASTREAM_INFO=\"on_remote_full_datastream_info\",e.ENABLE_LOCAL_VIDEO=\"enable_local_video\",e.DISABLE_LOCAL_VIDEO=\"disable_local_video\",e.ENABLE_LOCAL_AUDIO=\"enable_local_audio\",e.DISABLE_LOCAL_AUDIO=\"disable_local_audio\",e.ON_PUBLISHED_USER_LIST=\"on_published_user_list\"}(Rv||(Rv={})),function(e){e.CONNECTION_STATE_CHANGE=\"CONNECTION_STATE_CHANGE\",e.NEED_ANSWER=\"NEED_ANSWER\",e.NEED_RENEGOTIATE=\"NEED_RENEGOTIATE\",e.P2P_LOST=\"P2P_LOST\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NEED_UNPUB=\"NEED_UNPUB\",e.NEED_UNSUB=\"NEED_UNSUB\",e.NEED_UPLOAD=\"NEED_UPLOAD\",e.NEED_CONTROL=\"NEED_CONTROL\",e.START_RECONNECT=\"START_RECONNECT\",e.END_RECONNECT=\"END_RECONNECT\",e.NEED_SIGNAL_RTT=\"NEED_SIGNAL_RTT\"}(Cv||(Cv={})),function(e){e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\"}(vv||(vv={})),function(e){e.CONNECTED=\"websocket:connected\",e.RECONNECTING=\"websocket:reconnecting\",e.WILL_RECONNECT=\"websocket:will_reconnect\",e.CLOSED=\"websocket:closed\",e.FAILED=\"websocket:failed\",e.ON_MESSAGE=\"websocket:on_message\",e.REQUEST_NEW_URLS=\"websocket:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"websocket:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"websocket:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"websocket:on_token_privilege_did_expire\"}(Iv||(Iv={}));class xv extends Vg{constructor(e){super(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",arguments.length>2?arguments[2]:void 0),nu(this,\"name\",\"AgoraRTCException\")}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\";return super.print(e,KC)}throw(){super.throw(KC)}}function Vv(e){if(\"string\"!=typeof e||!/^[a-zA-Z0-9 \\!\\#\\$\\%\\&\\(\\)\\+\\-\\:\\;\\<\\=\\.\\>\\?\\@\\[\\]\\^\\_\\{\\}\\|\\~\\,]{1,64}$/.test(e))throw KC.error(\"Invalid Channel Name \".concat(e)),new xv(xg.INVALID_PARAMS,\"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,\")}function Fv(e){if(!(t=e,\"number\"==typeof t&&Math.floor(t)===t&&0<=t&&t<=4294967295||Yg(e,1,255)))throw new xv(xg.INVALID_PARAMS,\"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]\");var t;\"string\"==typeof e&&KC.warn(\"You input a string as the user ID, to ensure better end-user experience, Agora highly suggests not using a string as the user ID.\")}!function(e){e.TRANSCODE=\"mix_streaming\",e.RAW=\"raw_streaming\",e.INJECT=\"inject_streaming\"}(yv||(yv={})),function(e){e[e.INJECT_STREAM_STATUS_START_SUCCESS=0]=\"INJECT_STREAM_STATUS_START_SUCCESS\",e[e.INJECT_STREAM_STATUS_START_ALREADY_EXISTS=1]=\"INJECT_STREAM_STATUS_START_ALREADY_EXISTS\",e[e.INJECT_STREAM_STATUS_START_UNAUTHORIZED=2]=\"INJECT_STREAM_STATUS_START_UNAUTHORIZED\",e[e.INJECT_STREAM_STATUS_START_TIMEOUT=3]=\"INJECT_STREAM_STATUS_START_TIMEOUT\",e[e.INJECT_STREAM_STATUS_START_FAILED=4]=\"INJECT_STREAM_STATUS_START_FAILED\",e[e.INJECT_STREAM_STATUS_STOP_SUCCESS=5]=\"INJECT_STREAM_STATUS_STOP_SUCCESS\",e[e.INJECT_STREAM_STATUS_STOP_NOT_FOUND=6]=\"INJECT_STREAM_STATUS_STOP_NOT_FOUND\",e[e.INJECT_STREAM_STATUS_STOP_UNAUTHORIZED=7]=\"INJECT_STREAM_STATUS_STOP_UNAUTHORIZED\",e[e.INJECT_STREAM_STATUS_STOP_TIMEOUT=8]=\"INJECT_STREAM_STATUS_STOP_TIMEOUT\",e[e.INJECT_STREAM_STATUS_STOP_FAILED=9]=\"INJECT_STREAM_STATUS_STOP_FAILED\",e[e.INJECT_STREAM_STATUS_BROKEN=10]=\"INJECT_STREAM_STATUS_BROKEN\"}(Av||(Av={}));const Bv={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,audioChannel:0},jv={x:0,y:0,width:160,height:160,zOrder:255,alpha:1};function Gv(e,t){Wg(e.url,\"\".concat(t,\".url\"),1,1e3,!1),Kg(e.x)||jg(e.x,\"\".concat(t,\".x\"),0,1e4),Kg(e.y)||jg(e.y,\"\".concat(t,\".y\"),0,1e4),Kg(e.width)||jg(e.width,\"\".concat(t,\".width\"),0,1e4),Kg(e.height)||jg(e.height,\"\".concat(t,\".height\"),0,1e4),Kg(e.zOrder)||jg(e.zOrder,\"\".concat(t,\".zOrder\"),0,255),Kg(e.alpha)||jg(e.alpha,\"\".concat(t,\".alpha\"),0,1,!1)}const Wv={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:\"\"},Hv={audioBitrate:48,audioChannels:2,audioVolume:100,audioSampleRate:48e3,height:0,width:0,videoBitrate:400,videoFramerate:15,videoGop:30};var Kv,Yv,qv,Jv,zv,Xv,Qv,Zv,$v,eI,tI,iI,nI,rI;function sI(e){if(!e.channelName)throw new xv(xg.INVALID_PARAMS,\"invalid channelName in info\");if(\"number\"!=typeof e.uid)throw new xv(xg.INVALID_PARAMS,\"invalid uid in info, uid must be a number\");return e.token&&Wg(e.token,\"info.token\",1,2047),Fv(e.uid),Vv(e.channelName),!0}!function(e){e.WARNING=\"@live_uap-warning\",e.ERROR=\"@line_uap-error\",e.PUBLISH_STREAM_STATUS=\"@live_uap-publish-status\",e.INJECT_STREAM_STATUS=\"@live_uap-inject-status\",e.WORKER_STATUS=\"@live_uap-worker-status\",e.REQUEST_NEW_ADDRESS=\"@live_uap-request-address\"}(Kv||(Kv={})),function(e){e.REQUEST_WORKER_MANAGER_LIST=\"@live_req_worker_manager\"}(Yv||(Yv={})),function(e){e[e.LIVE_STREAM_RESPONSE_SUCCEED=200]=\"LIVE_STREAM_RESPONSE_SUCCEED\",e[e.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]=\"LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM\",e[e.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=450]=\"LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_BAD_STREAM=451]=\"LIVE_STREAM_RESPONSE_BAD_STREAM\",e[e.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]=\"LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]=\"LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST\",e[e.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]=\"LIVE_STREAM_RESPONSE_NOT_AUTHORIZED\",e[e.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]=\"LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE\",e[e.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=429]=\"LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN\",e[e.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]=\"LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH\",e[e.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]=\"LIVE_STREAM_RESPONSE_NOT_SUPPORTED\",e[e.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]=\"LIVE_STREAM_RESPONSE_MAX_STREAM_NUM\",e[e.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]=\"LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WORKER_LOST=501]=\"LIVE_STREAM_RESPONSE_WORKER_LOST\",e[e.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=502]=\"LIVE_STREAM_RESPONSE_RESOURCE_LIMIT\",e[e.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]=\"LIVE_STREAM_RESPONSE_WORKER_QUIT\",e[e.ERROR_FAIL_SEND_MESSAGE=504]=\"ERROR_FAIL_SEND_MESSAGE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH\",e[e.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=33]=\"PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN\"}(qv||(qv={})),function(e){e.CONNECT_FAILED=\"connect failed\",e.CONNECT_TIMEOUT=\"connect timeout\",e.WS_DISCONNECTED=\"websocket disconnected\",e.REQUEST_TIMEOUT=\"request timeout\",e.REQUEST_FAILED=\"request failed\",e.WAIT_STATUS_TIMEOUT=\"wait status timeout\",e.WAIT_STATUS_ERROR=\"wait status error\",e.BAD_STATE=\"bad state\",e.WS_ABORT=\"ws abort\",e.AP_REQUEST_TIMEOUT=\"AP request timeout\",e.AP_JSON_PARSE_ERROR=\"AP json parse error\",e.AP_REQUEST_ERROR=\"AP request error\",e.AP_REQUEST_ABORT=\"AP request abort\"}(Jv||(Jv={})),function(e){e[e.SetSdkProfile=0]=\"SetSdkProfile\",e[e.SetSourceChannel=1]=\"SetSourceChannel\",e[e.SetSourceUserId=2]=\"SetSourceUserId\",e[e.SetDestChannel=3]=\"SetDestChannel\",e[e.StartPacketTransfer=4]=\"StartPacketTransfer\",e[e.StopPacketTransfer=5]=\"StopPacketTransfer\",e[e.UpdateDestChannel=6]=\"UpdateDestChannel\",e[e.Reconnect=7]=\"Reconnect\",e[e.SetVideoProfile=8]=\"SetVideoProfile\"}(zv||(zv={})),function(e){e.NETWORK_DISCONNECTED=\"NETWORK_DISCONNECTED\",e.NETWORK_CONNECTED=\"NETWORK_CONNECTED\",e.PACKET_JOINED_SRC_CHANNEL=\"PACKET_JOINED_SRC_CHANNEL\",e.PACKET_JOINED_DEST_CHANNEL=\"PACKET_JOINED_DEST_CHANNEL\",e.PACKET_SENT_TO_DEST_CHANNEL=\"PACKET_SENT_TO_DEST_CHANNEL\",e.PACKET_RECEIVED_VIDEO_FROM_SRC=\"PACKET_RECEIVED_VIDEO_FROM_SRC\",e.PACKET_RECEIVED_AUDIO_FROM_SRC=\"PACKET_RECEIVED_AUDIO_FROM_SRC\",e.PACKET_UPDATE_DEST_CHANNEL=\"PACKET_UPDATE_DEST_CHANNEL\",e.PACKET_UPDATE_DEST_CHANNEL_REFUSED=\"PACKET_UPDATE_DEST_CHANNEL_REFUSED\",e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE=\"PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE\"}(Xv||(Xv={})),function(e){e.RELAY_STATE_IDLE=\"RELAY_STATE_IDLE\",e.RELAY_STATE_CONNECTING=\"RELAY_STATE_CONNECTING\",e.RELAY_STATE_RUNNING=\"RELAY_STATE_RUNNING\",e.RELAY_STATE_FAILURE=\"RELAY_STATE_FAILURE\"}(Qv||(Qv={})),function(e){e.RELAY_OK=\"RELAY_OK\",e.SERVER_CONNECTION_LOST=\"SERVER_CONNECTION_LOST\",e.SRC_TOKEN_EXPIRED=\"SRC_TOKEN_EXPIRED\",e.DEST_TOKEN_EXPIRED=\"DEST_TOKEN_EXPIRED\"}(Zv||(Zv={})),function(e){e.High=\"high\",e.Low=\"low\",e.Audio=\"audio\",e.Screen=\"screen\",e.ScreenLow=\"screen_low\"}($v||($v={})),function(e){e.DISCONNECT=\"disconnect\",e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGE=\"stream-type-change\",e.IS_P2P_DISCONNECTED=\"is-p2p-dis\",e.DISCONNECT_P2P=\"dis-p2p\",e.REQUEST_NEW_GATEWAY_LIST=\"req-gate-url\",e.NEED_RENEW_SESSION=\"need-sid\",e.REQUEST_P2P_CONNECTION_PARAMS=\"request-p2p-connection-params\",e.JOIN_RESPONSE=\"join-response\",e.REQUEST_DC_CONNECTION_PARAMS=\"request-dc-connection-params\",e.RESET_CONNECTION_EVENTS=\"reset-connection-events\",e.DATACHANNEL_PRECONNECT=\"datachannel_preconnect\",e.DATACHANNEL_FAILBACK=\"datachannel_failback\",e.RESET_SIGNAL=\"reset-signal\"}(eI||(eI={})),function(e){e.P2P_DISCONNECTED=\"P2P_DISCONNECTED\",e.A_ROUND_WS_FAILED=\"A_ROUND_WS_FAILED\",e.TIMEOUT=\"TIMEOUT\",e.UNKNOWN_REASON=\"UNKNOWN_REASON\"}(tI||(tI={})),function(e){e[e.Nothing=0]=\"Nothing\",e[e.Audio=1]=\"Audio\",e[e.LwoVideo=2]=\"LwoVideo\",e[e.Video=4]=\"Video\",e[e.Data=8]=\"Data\",e[e.DataStream0=256]=\"DataStream0\",e[e.DataStream1=512]=\"DataStream1\",e[e.DataStream2=1024]=\"DataStream2\",e[e.DataStream3=2048]=\"DataStream3\",e[e.DataStream4=4096]=\"DataStream4\",e[e.DataStream5=8192]=\"DataStream5\",e[e.DataStream6=16384]=\"DataStream6\",e[e.DataStream7=32768]=\"DataStream7\"}(iI||(iI={})),function(e){e[e.websocket=0]=\"websocket\",e[e.datachannel=1]=\"datachannel\"}(nI||(nI={})),function(e){e.CHINA=\"CHINA\",e.ASIA=\"ASIA\",e.NORTH_AMERICA=\"NORTH_AMERICA\",e.EUROPE=\"EUROPE\",e.JAPAN=\"JAPAN\",e.INDIA=\"INDIA\",e.KOREA=\"KOREA\",e.HKMC=\"HKMC\",e.US=\"US\",e.OCEANIA=\"OCEANIA\",e.SOUTH_AMERICA=\"SOUTH_AMERICA\",e.AFRICA=\"AFRICA\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"EXTENSIONS\"}(rI||(rI={}));const oI=[rI.AFRICA,rI.ASIA,rI.CHINA,rI.EUROPE,rI.GLOBAL,rI.INDIA,rI.JAPAN,rI.NORTH_AMERICA,rI.OCEANIA,rI.OVERSEA,rI.SOUTH_AMERICA];var aI;!function(e){e.CHINA=\"CN\",e.ASIA=\"AS\",e.NORTH_AMERICA=\"NA\",e.EUROPE=\"EU\",e.JAPAN=\"JP\",e.INDIA=\"IN\",e.KOREA=\"KR\",e.HKMC=\"HK\",e.US=\"US\",e.OCEANIA=\"OC\",e.SOUTH_AMERICA=\"SA\",e.AFRICA=\"AF\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"GLOBAL\"}(aI||(aI={}));const cI={CHINA:{},ASIA:{CODE:aI.ASIA,WEBCS_DOMAIN:[\"ap-web-1-asia.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-asia.agora.io\"],PROXY_CS:[\"proxy-ap-web-asia.agora.io\"],CDS_AP:[\"cds-ap-web-asia.agora.io\",\"cds-ap-web-asia2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-asia.agora.io\",\"sua-ap-web-asia2.agora.io\"],UAP_AP:[\"uap-ap-web-asia.agora.io\",\"uap-ap-web-asia2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-asia.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-asia.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-asia.agora.io\"],PROXY_SERVER_TYPE3:[\"southeast-asia.webrtc-cloud-proxy.sd-rtn.com\"]},NORTH_AMERICA:{CODE:aI.NORTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-north-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-north-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-america.agora.io\"],CDS_AP:[\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],UAP_AP:[\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-north-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-north-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-north-america.agora.io\"],PROXY_SERVER_TYPE3:[\"east-usa.webrtc-cloud-proxy.sd-rtn.com\"]},EUROPE:{CODE:aI.EUROPE,WEBCS_DOMAIN:[\"ap-web-1-europe.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-europe.agora.io\"],PROXY_CS:[\"proxy-ap-web-europe.agora.io\"],CDS_AP:[\"cds-ap-web-europe.agora.io\",\"cds-ap-web-europe2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-europe.agora.io\",\"sua-ap-web-europe.agora.io\"],UAP_AP:[\"uap-ap-web-europe.agora.io\",\"uap-ap-web-europe2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-europe.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-europe.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-europe.agora.io\"],PROXY_SERVER_TYPE3:[\"europe.webrtc-cloud-proxy.sd-rtn.com\"]},JAPAN:{CODE:aI.JAPAN,WEBCS_DOMAIN:[\"ap-web-1-japan.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-japan.agora.io\"],PROXY_CS:[\"proxy-ap-web-japan.agora.io\"],CDS_AP:[\"cds-ap-web-japan.agora.io\",\"cds-ap-web-japan2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-japan.agora.io\",\"sua-ap-web-japan2.agora.io\"],UAP_AP:[\"uap-ap-web-japan.agora.io\",\"\\tuap-ap-web-japan2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-japan.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-japan.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-japan.agora.io\"],PROXY_SERVER_TYPE3:[\"japan.webrtc-cloud-proxy.sd-rtn.com\"]},INDIA:{CODE:aI.INDIA,WEBCS_DOMAIN:[\"ap-web-1-india.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-india.agora.io\"],PROXY_CS:[\"proxy-ap-web-india.agora.io\"],CDS_AP:[\"cds-ap-web-india.agora.io\",\"cds-ap-web-india2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-india.agora.io\",\"sua-ap-web-india2.agora.io\"],UAP_AP:[\"uap-ap-web-india.agora.io\",\"uap-ap-web-india2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-india.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-india.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-india.agora.io\"],PROXY_SERVER_TYPE3:[\"india.webrtc-cloud-proxy.sd-rtn.com\"]},KOREA:{CODE:aI.KOREA,WEBCS_DOMAIN:[\"ap-web-1-korea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-korea.agora.io\"],PROXY_CS:[\"proxy-ap-web-korea.agora.io\"],CDS_AP:[\"cds-ap-web-korea.agora.io\",\"cds-ap-web-korea2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-korea.agora.io\",\"sua-ap-web-korea2.agora.io\"],UAP_AP:[\"uap-ap-web-korea.agora.io\",\"uap-ap-web-korea2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-korea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-korea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-korea.agora.io\"],PROXY_SERVER_TYPE3:[\"korea.webrtc-cloud-proxy.sd-rtn.com\"]},HKMC:{CODE:aI.HKMC,WEBCS_DOMAIN:[\"ap-web-1-hkmc.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-hkmc.agora.io\"],PROXY_CS:[\"proxy-ap-web-hkmc.agora.io\"],CDS_AP:[\"cds-ap-web-hkmc.agora.io\",\"cds-ap-web-hkmc2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-hkmc.agora.io\",\"sua-ap-web-hkmc2.agora.io\"],UAP_AP:[\"uap-ap-web-hkmc.agora.io\",\"uap-ap-web-hkmc2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-hkmc.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-hkmc.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-hkmc.agora.io\"],PROXY_SERVER_TYPE3:[\"hkmc.webrtc-cloud-proxy.sd-rtn.com\"]},US:{CODE:aI.US,WEBCS_DOMAIN:[\"ap-web-1-us.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-us.agora.io\"],PROXY_CS:[\"proxy-ap-web-us.agora.io\"],CDS_AP:[\"cds-ap-web-us.agora.io\",\"cds-ap-web-us2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-us.agora.io\",\"sua-ap-web-us2.agora.io\"],UAP_AP:[\"uap-ap-web-us.agora.io\",\"uap-ap-web-us2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-us.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-us.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-us.agora.io\"],PROXY_SERVER_TYPE3:[\"us.webrtc-cloud-proxy.sd-rtn.com\"]},OVERSEA:{CODE:aI.OVERSEA,WEBCS_DOMAIN:[\"ap-web-1-oversea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oversea.agora.io\"],PROXY_CS:[\"proxy-ap-web-oversea.agora.io\"],CDS_AP:[\"cds-ap-web-oversea.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oversea.agora.io\"],UAP_AP:[\"uap-ap-web-oversea.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oversea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oversea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oversea.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.agora.io\"]},GLOBAL:{CODE:aI.GLOBAL,WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-ap-web-3.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-ap-web-3.agora.io\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-ap-web-3.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\"]},OCEANIA:{CODE:aI.OCEANIA,WEBCS_DOMAIN:[\"ap-web-1-oceania.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oceania.agora.io\"],PROXY_CS:[\"proxy-ap-web-oceania.agora.io\"],CDS_AP:[\"cds-ap-web-oceania.agora.io\",\"cds-ap-web-oceania2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oceania.agora.io\",\"sua-ap-web-oceania2.agora.io\"],UAP_AP:[\"uap-ap-web-oceania.agora.io\",\"uap-ap-web-oceania2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oceania.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oceania.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oceania.agora.io\"],PROXY_SERVER_TYPE3:[\"oceania.webrtc-cloud-proxy.sd-rtn.com\"]},SOUTH_AMERICA:{CODE:aI.SOUTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-south-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-south-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-south-america.agora.io\"],CDS_AP:[\"cds-ap-web-south-america.agora.io\",\"cds-ap-web-south-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-south-america.agora.io\",\"sua-ap-web-south-america2.agora.io\"],UAP_AP:[\"uap-ap-web-south-america.agora.io\",\"uap-ap-web-south-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-south-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-south-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-america.agora.io\"],PROXY_SERVER_TYPE3:[\"south-america.webrtc-cloud-proxy.sd-rtn.com\"]},AFRICA:{CODE:aI.AFRICA,WEBCS_DOMAIN:[\"ap-web-1-africa.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-africa.agora.io\"],PROXY_CS:[\"proxy-ap-web-africa.agora.io\"],CDS_AP:[\"cds-ap-web-africa.agora.io\",\"cds-ap-web-africa2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-africa.agora.io\",\"sua-ap-web-africa2.agora.io\"],UAP_AP:[\"uap-ap-web-africa.agora.io\",\"uap-ap-web-africa2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-africa.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-africa.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-africa.agora.io\"],PROXY_SERVER_TYPE3:[\"africa.webrtc-cloud-proxy.sd-rtn.com\"]},EXTENSIONS:{}};var dI,lI,hI,uI,pI,_I,EI,mI,fI,gI,TI,SI,RI,CI,vI,II,yI,AI,bI,wI,OI,NI;NC&&(cI.CHINA={CODE:aI.CHINA,WEBCS_DOMAIN:[\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"proxy-web.ap.sd-rtn.com\"],CDS_AP:[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-web-2.ap.sd-rtn.com\",\"uap-web-4.ap.sd-rtn.com\"],EVENT_REPORT_DOMAIN:[\"web-3.statscollector.sd-rtn.com\"],EVENT_REPORT_BACKUP_DOMAIN:[\"web-4.statscollector.sd-rtn.com\"],LOG_UPLOAD_SERVER:[\"logservice-china.agora.io\"],PROXY_SERVER_TYPE3:[\"east-cn.webrtc-cloud-proxy.sd-rtn.com\"]}),function(e){e.UPDATE_BITRATE_LIMIT=\"update_bitrate_limit\"}(dI||(dI={}));class DI extends iT{constructor(e,t){super(),nu(this,\"onICEConnectionStateChange\",void 0),nu(this,\"onConnectionStateChange\",void 0),nu(this,\"onDTLSTransportStateChange\",void 0),nu(this,\"onDTLSTransportError\",void 0),nu(this,\"onICETransportStateChange\",void 0),nu(this,\"onFirstAudioReceived\",void 0),nu(this,\"onFirstVideoReceived\",void 0),nu(this,\"onFirstAudioDecoded\",void 0),nu(this,\"onFirstVideoDecoded\",void 0),nu(this,\"onFirstVideoDecodedTimeout\",void 0),nu(this,\"onSelectedLocalCandidateChanged\",void 0),nu(this,\"onSelectedRemoteCandidateChanged\",void 0)}}class PI extends DI{constructor(e,t){super(e,t)}}!function(e){e.SEND=\"sendonly\",e.RECV=\"recvonly\",e.SENDRECV=\"sendrecv\",e.INACTIVE=\"inactive\"}(lI||(lI={})),function(e){e.VIDEO=\"video\",e.AUDIO=\"audio\"}(hI||(hI={})),function(e){e[e.UDP=0]=\"UDP\",e[e.TCP=1]=\"TCP\",e[e.RELAY=2]=\"RELAY\"}(uI||(uI={})),function(e){e[e.FIRST_CONNECTION=0]=\"FIRST_CONNECTION\",e[e.TCP_RESTART=1]=\"TCP_RESTART\",e[e.RELAY_RESTART=2]=\"RELAY_RESTART\",e[e.OLD_FIRST_CONNECTION=10]=\"OLD_FIRST_CONNECTION\",e[e.OLD_RESTART=11]=\"OLD_RESTART\",e[e.DISCONNECTED_OR_FAILED=20]=\"DISCONNECTED_OR_FAILED\"}(pI||(pI={})),function(e){e.LocalVideoTrack=\"videoTrack\",e.LocalAudioTrack=\"audioTrack\",e.LocalVideoLowTrack=\"videoLowTrack\"}(_I||(_I={})),function(e){e.New=\"new\",e.Connected=\"connected\",e.Reconnecting=\"reconnecting\",e.Disconnected=\"disconnected\"}(EI||(EI={})),function(e){e.StateChange=\"stateChange\",e.IceConnectionStateChange=\"iceConnectionStateChange\",e.RequestMuteLocal=\"requestMuteLocal\",e.RequestUnmuteLocal=\"requestUnmuteLocal\",e.RequestRePublish=\"requestRePublish\",e.RequestRePublishDataChannel=\"requestRePublishDataChannel\",e.RequestReSubscribe=\"requestReSubscribe\",e.RequestUploadStats=\"requestUploadStats\",e.MediaReconnectStart=\"MediaReconnectStart\",e.MediaReconnectEnd=\"MediaReconnectEnd\",e.NeedSignalRTT=\"NeedSignalRTT\",e.RequestRestartICE=\"RequestRestartIce\",e.PeerConnectionStateChange=\"PeerConnectionStateChange\",e.RequestReconnect=\"RequestReconnect\",e.RequestReconnectPC=\"RequestReconnectPC\",e.RequestUnpublishForReconnectPC=\"RequestUnpublishForReconnectPC\",e.P2PLost=\"P2PLost\",e.UpdateVideoEncoder=\"UpdateVideoEncoder\",e.ConnectionTypeChange=\"ConnectionTypeChange\",e.RequestLowStreamParameter=\"RequestLowStreamParameter\",e.QueryClientConnectionState=\"QueryClientConnectionState\",e.LocalCandidate=\"LocalCandidate\",e.RequestP2PMuteLocal=\"requestP2PMuteLocal\",e.RequestP2PPublish=\"RequestP2PPublish\",e.RequestP2PUnPublish=\"RequestP2PUnPublish\",e.RequestP2PUnmuteRemote=\"RequestP2PUnmuteRemote\",e.RequestP2PMuteRemote=\"RequestP2PMuteRemote\",e.RequestP2PRestartICE=\"RequestP2PRestartICE\"}(mI||(mI={})),function(e){e.MUTE_LOCAL_VIDEO=\"mute_local_video\",e.MUTE_LOCAL_AUDIO=\"mute_local_audio\",e.UNMUTE_LOCAL_VIDEO=\"unmute_local_video\",e.UNMUTE_LOCAL_AUDIO=\"unmute_local_audio\",e.MUTE_REMOTE_VIDEO=\"mute_remote_video\",e.MUTE_REMOTE_AUDIO=\"mute_remote_audio\",e.UNMUTE_REMOTE_VIDEO=\"unmute_remote_video\",e.UNMUTE_REMOTE_AUDIO=\"unmute_remote_audio\"}(fI||(fI={})),function(e){e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\"}(gI||(gI={})),function(e){e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\"}(TI||(TI={})),function(e){e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\"}(SI||(SI={})),function(e){e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\"}(RI||(RI={})),function(e){e.CONNECTED=\"transmitter:connected\",e.RECONNECTING=\"transmitter:reconnecting\",e.WILL_RECONNECT=\"transmitter:will_reconnect\",e.CLOSED=\"transmitter:closed\",e.FAILED=\"transmitter:failed\",e.ON_MESSAGE=\"transmitter:on_message\",e.REQUEST_NEW_URLS=\"transmitter:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"transmitter:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"transmitter:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"transmitter:on_token_privilege_did_expire\",e.TO_CONNECT_DATACHANNEL=\"transmitter:to_connect_datachannel\",e.FAILBACK=\"transmitter:failback\"}(CI||(CI={})),function(e){e.CAMERA_CHANGED=\"camera-changed\",e.MICROPHONE_CHANGED=\"microphone-changed\",e.PLAYBACK_DEVICE_CHANGED=\"playback-device-changed\",e.AUDIO_AUTOPLAY_FAILED=\"audio-autoplay-failed\",e.AUTOPLAY_FAILED=\"autoplay-failed\",e.SECURITY_POLICY_VIOLATION=\"security-policy-violation\"}(vI||(vI={})),function(e){e[e.APP_TYPE_INVALID_VALUE=-1]=\"APP_TYPE_INVALID_VALUE\",e[e.APP_TYPE_NATIVE=0]=\"APP_TYPE_NATIVE\",e[e.APP_TYPE_NATIVE_COCOS=1]=\"APP_TYPE_NATIVE_COCOS\",e[e.APP_TYPE_NATIVE_UNITY=2]=\"APP_TYPE_NATIVE_UNITY\",e[e.APP_TYPE_NATIVE_ELECTRON=3]=\"APP_TYPE_NATIVE_ELECTRON\",e[e.APP_TYPE_NATIVE_FLUTTER=4]=\"APP_TYPE_NATIVE_FLUTTER\",e[e.APP_TYPE_NATIVE_UNREAL=5]=\"APP_TYPE_NATIVE_UNREAL\",e[e.APP_TYPE_NATIVE_XAMARIN=6]=\"APP_TYPE_NATIVE_XAMARIN\",e[e.APP_TYPE_NATIVE_API_CLOUD=7]=\"APP_TYPE_NATIVE_API_CLOUD\",e[e.APP_TYPE_NATIVE_REACT_NATIVE=8]=\"APP_TYPE_NATIVE_REACT_NATIVE\",e[e.APP_TYPE_NATIVE_PYTHON=9]=\"APP_TYPE_NATIVE_PYTHON\",e[e.APP_TYPE_NATIVE_COCOS_CREATOR=10]=\"APP_TYPE_NATIVE_COCOS_CREATOR\",e[e.APP_TYPE_NATIVE_RUST=11]=\"APP_TYPE_NATIVE_RUST\",e[e.APP_TYPE_NATIVE_C_SHARP=12]=\"APP_TYPE_NATIVE_C_SHARP\",e[e.APP_TYPE_NATIVE_CEF=13]=\"APP_TYPE_NATIVE_CEF\",e[e.APP_TYPE_NATIVE_UNI_APP=14]=\"APP_TYPE_NATIVE_UNI_APP\",e[e.APP_TYPE_WEBRTC=1e3]=\"APP_TYPE_WEBRTC\",e[e.APP_TYPE_WEBRTC_REACT=1001]=\"APP_TYPE_WEBRTC_REACT\",e[e.APP_TYPE_WEBRTC_VUE=1002]=\"APP_TYPE_WEBRTC_VUE\",e[e.APP_TYPE_WEBRTC_ANGULAR=1003]=\"APP_TYPE_WEBRTC_ANGULAR\"}(II||(II={})),function(e){e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\"}(yI||(yI={})),function(e){e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\"}(AI||(AI={})),function(e){e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\"}(bI||(bI={})),function(e){e.CALL=\"call\",e.CANDIDATE=\"candidate\",e.PUBLISH=\"publish\",e.UNPUBLISH=\"unpublish\",e.SUBSCRIBE=\"subscribe\",e.UNSUBSCRIBE=\"unsubscribe\",e.CONTROL=\"control\",e.RESTART_ICE=\"restart_ice\",e.ACK=\"ack\",e.JOIN=\"join\",e.EXCHANGE_SDP=\"exchange_sdp\",e.DO_SUBSCRIBE=\"do_subscribe\",e.DO_UNSUBSCRIBE=\"do_unsubscribe\"}(wI||(wI={})),function(e){e.MUTE_LOCAL_AUDIO=\"mute_local_audio\",e.MUTE_LOCAL_VIDEO=\"mute_local_video\",e.UNMUTE_LOCAL_AUDIO=\"unmute_local_audio\",e.UNMUTE_LOCAL_VIDEO=\"unmute_local_video\"}(OI||(OI={})),function(e){e[e.SUCCESS=1]=\"SUCCESS\",e[e.FAILED=0]=\"FAILED\"}(NI||(NI={}));const LI={[uv.ACCESS_POINT]:{[Ev.NO_FLAG_SET]:{desc:\"flag is zero\",retry:!1},[Ev.FLAG_SET_BUT_EMPTY]:{desc:\"flag is empty\",retry:!1},[Ev.INVALID_FALG_SET]:{desc:\"invalid flag\",retry:!1},[Ev.FLAG_SET_BUT_NO_RE]:{desc:\"flag set unilbs but no request\",retry:!1},[Ev.INVALID_SERVICE_ID]:{desc:\"invalid service id\",retry:!1},[Ev.NO_SERVICE_AVAILABLE]:{desc:\"no service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_P2P]:{desc:\"no unilbs p2p service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_VOICE]:{desc:\"no unilbs voice service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:\"no unilbs webrtc service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_CDS]:{desc:\"no cds service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_CDN]:{desc:\"no cdn dispatcher service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_TDS]:{desc:\"no tds service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_REPORT]:{desc:\"no unilbs report service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:\"no app center service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_ENV0]:{desc:\"no unilbs sig env0 service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_VOET]:{desc:\"no unilbs voet service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:\"no string uid service available\",retry:!0},[Ev.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:\"no webrtc unilbs service available\",retry:!0}},[uv.UNILBS]:{[_v.INVALID_VENDOR_KEY]:{desc:\"invalid vendor key, can not find appid\",retry:!1},[_v.INVALID_CHANNEL_NAME]:{desc:\"invalid channel name\",retry:!1},[_v.INTERNAL_ERROR]:{desc:\"unilbs internal error\",retry:!1},[_v.NO_AUTHORIZED]:{desc:\"invalid token, authorized failed\",retry:!1},[_v.DYNAMIC_KEY_TIMEOUT]:{desc:\"dynamic key or token timeout\",retry:!1},[_v.NO_ACTIVE_STATUS]:{desc:\"no active status\",retry:!1},[_v.DYNAMIC_KEY_EXPIRED]:{desc:\"dynamic key expired\",retry:!1},[_v.STATIC_USE_DYNAMIC_KEY]:{desc:\"static use dynamic key\",retry:!1},[_v.DYNAMIC_USE_STATIC_KEY]:{desc:\"dynamic use static key\",retry:!1},[_v.USER_OVERLOAD]:{desc:\"amount of users over load\",retry:!1},[_v.FORBIDDEN_REGION]:{desc:\"the request is forbidden in this area\",retry:!1},[_v.CANNOT_MEET_AREA_DEMAND]:{desc:\"unable to allocate services in this area\",retry:!1}},[uv.STRING_UID_ALLOCATOR]:{[pv.IIIEGAL_APPID]:{desc:\"invalid appid\",retry:!1},[pv.IIIEGAL_UID]:{desc:\"invalid string uid\",retry:!1},[pv.INTERNAL_ERROR]:{desc:\"string uid allocator internal error\",retry:!0}}};function kI(e){const t=LI[Math.floor(e/1e4)];if(!t)return{desc:\"unkonw error\",retry:!1};const i=t[e%1e4];if(!i){if(Math.floor(e/1e4)===uv.ACCESS_POINT){const t=e%1e4;if(\"1\"===t.toString()[0])return{desc:e.toString(),retry:!1};if(\"2\"===t.toString()[0])return{desc:e.toString(),retry:!0}}return{desc:\"unkonw error\",retry:!1}}return i}const MI={[mv.K_TIMESTAMP_EXPIRED]:{desc:\"K_TIMESTAMP_EXPIRED\",action:\"failed\"},[mv.K_CHANNEL_PERMISSION_INVALID]:{desc:\"K_CHANNEL_PERMISSION_INVALID\",action:\"failed\"},[mv.K_CERTIFICATE_INVALID]:{desc:\"K_CERTIFICATE_INVALID\",action:\"failed\"},[mv.K_CHANNEL_NAME_EMPTY]:{desc:\"K_CHANNEL_NAME_EMPTY\",action:\"failed\"},[mv.K_CHANNEL_NOT_FOUND]:{desc:\"K_CHANNEL_NOT_FOUND\",action:\"failed\"},[mv.K_TICKET_INVALID]:{desc:\"K_TICKET_INVALID\",action:\"failed\"},[mv.K_CHANNEL_CONFLICTED]:{desc:\"K_CHANNEL_CONFLICTED\",action:\"failed\"},[mv.K_SERVICE_NOT_READY]:{desc:\"K_SERVICE_NOT_READY\",action:\"tryNext\"},[mv.K_SERVICE_TOO_HEAVY]:{desc:\"K_SERVICE_TOO_HEAVY\",action:\"tryNext\"},[mv.K_UID_BANNED]:{desc:\"K_UID_BANNED\",action:\"failed\"},[mv.K_IP_BANNED]:{desc:\"K_IP_BANNED\",action:\"failed\"},[mv.K_AUTO_REBALANCE]:{desc:\"k_AUTO_REBALANCE\",action:\"recover\"},[mv.ERR_INVALID_VENDOR_KEY]:{desc:\"ERR_INVALID_VENDOR_KEY\",action:\"failed\"},[mv.ERR_INVALID_CHANNEL_NAME]:{desc:\"ERR_INVALID_CHANNEL_NAME\",action:\"failed\"},[mv.WARN_NO_AVAILABLE_CHANNEL]:{desc:\"WARN_NO_AVAILABLE_CHANNEL\",action:\"failed\"},[mv.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:\"WARN_LOOKUP_CHANNEL_TIMEOUT\",action:\"tryNext\"},[mv.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:\"WARN_LOOKUP_CHANNEL_REJECTED\",action:\"failed\"},[mv.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:\"WARN_OPEN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[mv.WARN_OPEN_CHANNEL_REJECTED]:{desc:\"WARN_OPEN_CHANNEL_REJECTED\",action:\"failed\"},[mv.WARN_REQUEST_DEFERRED]:{desc:\"WARN_REQUEST_DEFERRED\",action:\"failed\"},[mv.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:\"ERR_DYNAMIC_KEY_TIMEOUT\",action:\"failed\"},[mv.ERR_NO_AUTHORIZED]:{desc:\"ERR_NO_AUTHORIZED\",action:\"failed\"},[mv.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:\"ERR_VOM_SERVICE_UNAVAILABLE\",action:\"tryNext\"},[mv.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:\"ERR_NO_CHANNEL_AVAILABLE_CODE\",action:\"failed\"},[mv.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:\"ERR_MASTER_VOCS_UNAVAILABLE\",action:\"tryNext\"},[mv.ERR_INTERNAL_ERROR]:{desc:\"ERR_INTERNAL_ERROR\",action:\"tryNext\"},[mv.ERR_NO_ACTIVE_STATUS]:{desc:\"ERR_NO_ACTIVE_STATUS\",action:\"failed\"},[mv.ERR_INVALID_UID]:{desc:\"ERR_INVALID_UID\",action:\"failed\"},[mv.ERR_DYNAMIC_KEY_EXPIRED]:{desc:\"ERR_DYNAMIC_KEY_EXPIRED\",action:\"failed\"},[mv.ERR_STATIC_USE_DYANMIC_KE]:{desc:\"ERR_STATIC_USE_DYANMIC_KE\",action:\"failed\"},[mv.ERR_DYNAMIC_USE_STATIC_KE]:{desc:\"ERR_DYNAMIC_USE_STATIC_KE\",action:\"failed\"},[mv.ERR_NO_VOCS_AVAILABLE]:{desc:\"ERR_NO_VOCS_AVAILABLE\",action:\"tryNext\"},[mv.ERR_NO_VOS_AVAILABLE]:{desc:\"ERR_NO_VOS_AVAILABLE\",action:\"tryNext\"},[mv.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:\"ERR_JOIN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[mv.ERR_JOIN_BY_MULTI_IP]:{desc:\"ERR_JOIN_BY_MULTI_IP\",action:\"recover\"},[mv.ERR_NOT_JOINED]:{desc:\"ERR_NOT_JOINED\",action:\"failed\"},[mv.ERR_REPEAT_JOIN_REQUEST]:{desc:\"ERR_REPEAT_JOIN_REQUEST\",action:\"quit\"},[mv.ERR_REPEAT_JOIN_CHANNEL]:{desc:\"ERR_REPEAT_JOIN_CHANNEL\",action:\"quit\"},[mv.ERR_INVALID_STRINGUID]:{desc:\"ERR_INVALID_STRINGUID\",action:\"failed\"},[mv.ERR_TOO_MANY_USERS]:{desc:\"ERR_TOO_MANY_USERS\",action:\"tryNext\"},[mv.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[mv.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[mv.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",action:\"success\"},[mv.ERR_PUBLISH_REQUEST_INVALID]:{desc:\"ERR_PUBLISH_REQUEST_INVALID\",action:\"failed\"},[mv.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:\"ERR_SUBSCRIBE_REQUEST_INVALID\",action:\"failed\"},[mv.ERR_NOT_SUPPORTED_MESSAGE]:{desc:\"ERR_NOT_SUPPORTED_MESSAGE\",action:\"failed\"},[mv.ERR_ILLEAGAL_PLUGIN]:{desc:\"ERR_ILLEAGAL_PLUGIN\",action:\"failed\"},[mv.ILLEGAL_CLIENT_ROLE_LEVEL]:{desc:\"ILLEGAL_CLIENT_ROLE_LEVEL\",action:\"failed\"},[mv.ERR_REJOIN_TOKEN_INVALID]:{desc:\"ERR_REJOIN_TOKEN_INVALID\",action:\"failed\"},[mv.ERR_REJOIN_USER_NOT_JOINED]:{desc:\"ERR_REJOIN_NOT_JOINED\",action:\"failed\"},[mv.ERR_INVALID_OPTIONAL_INFO]:{desc:\"ERR_INVALID_OPTIONAL_INFO\",action:\"quit\"},[mv.ERR_TEST_RECOVER]:{desc:\"ERR_TEST_RECOVER\",action:\"recover\"},[mv.ERR_TEST_TRYNEXT]:{desc:\"ERR_TEST_TRYNEXT\",action:\"recover\"},[mv.ERR_TEST_RETRY]:{desc:\"ERR_TEST_RETRY\",action:\"recover\"},[mv.ILLEGAL_AES_PASSWORD]:{desc:\"ERR_TEST_RETRY\",action:\"failed\"},[mv.ERR_TOO_MANY_BROADCASTERS]:{desc:\"ERR_TOO_MANY_BROADCASTERS\",action:\"failed\"},[mv.ERR_TOO_MANY_SUBSCRIBERS]:{desc:\"ERR_TOO_MANY_SUBSCRIBERS\",action:\"failed\"},[mv.ERR_LICENSE_ILLEGAL]:{desc:\"ERR_LICENSE_ILLEGAL\",action:\"quit\"},[mv.ERR_LICENSE_MISSING]:{desc:\"ERR_LICENSE_MISSING\",action:\"quit\"},[mv.ERR_LICENSE_EXPIRED]:{desc:\"ERR_LICENSE_EXPIRED\",action:\"quit\"},[mv.ERR_LICENSE_MINUTES_EXCEEDED]:{desc:\"ERR_LICENSE_MINUTES_EXCEEDED\",action:\"quit\"},[mv.ERR_LICENSE_PERIOD_INVALID]:{desc:\"ERR_LICENSE_PERIOD_INVALID\",action:\"quit\"},[mv.ERR_LICENSE_MULTIPLE_SDK_SERVICE]:{desc:\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",action:\"quit\"}};function UI(e){const t=MI[e];return t||{desc:\"UNKNOW_ERROR_\".concat(e),action:\"failed\"}}function xI(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function VI(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?xI(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):xI(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function FI(e){return e.every((e=>e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING))}function BI(e,t){if(\"string\"==typeof e)return e;const{proxy:i,host:n,port:r}=e;if(t){const e=kC(\"JOIN_GATEWAY_FALLBACK_PORT\")||443;return 443===e?\"wss://\".concat(n,\"/ws/?p=\").concat(Number(r)+150):\"wss://\".concat(n,\":\").concat(e,\"/ws/?p=\").concat(Number(r)+150)}return i?\"wss://\".concat(i,\"/ws/?h=\").concat(n,\"&p=\").concat(r):\"wss://\".concat(n,\":\").concat(r)}const jI=/wss:\\/\\/(.+)\\/ws\\/\\?h=(.+)&p=([0-9]+)\\/?/,GI=/wss:\\/\\/(.+)\\/ws\\/\\?p=([0-9]+)\\/?/,WI=/wss:\\/\\/(.+):([0-9]+)\\/?/,HI=/wss:\\/\\/(.[^\\/]+)\\/?/;let KI=0;class YI{constructor(e,t){nu(this,\"id\",0),nu(this,\"store\",void 0),nu(this,\"recordIndex\",void 0),nu(this,\"websockets\",[]),nu(this,\"try443PortDuration\",2e3),nu(this,\"forceCloseWSDuration\",5e3),nu(this,\"try443PortTimeout\",null),nu(this,\"forceCloseTimeout\",null),nu(this,\"isTry443PortFailed\",!1),nu(this,\"isNormalPortFailed\",!1),nu(this,\"useDoubleDomain\",!1),nu(this,\"useProxy\",!1),nu(this,\"startTime\",Date.now()),this.id=++KI,this.try443PortDuration=kC(\"JOIN_GATEWAY_TRY_443PORT_DURATION\")||2e3,this.forceCloseWSDuration=e||5e3,this.store=t}closeAllWebsockets(){this.websockets.forEach((e=>{e.onopen=null,e.onclose=null,e.onmessage=null,e.close()})),this.websockets.length=0}clearTimeout(){this.forceCloseTimeout&&clearTimeout(this.forceCloseTimeout),this.try443PortTimeout&&clearTimeout(this.try443PortTimeout)}logger(){var e;const t=Date.now()-this.startTime;for(var i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];KC.debug(\"[choose-best-ws \".concat(null===(e=this.store)||void 0===e?void 0:e.clientId,\" \").concat(this.id,\"] \").concat(t,\"ms:\"),...n)}createWebSocket(e,t,i){this.logger(\"createWebSocket:\",e,{isTry443Port:t,hasTimeoutDetection:i});const n=kC(\"GATEWAY_DOMAINS\"),r=Date.now(),s=[],o=n.find((t=>{var i;return Pr(i=e.host).call(i,t)}));o||(this.useDoubleDomain=!1);const a=[];if(this.useDoubleDomain)n.forEach((i=>{a.push(BI(VI(VI({},e),{},{host:e.host.replace(o,i)}),t))}));else{const i=VI({},e);if(t&&o){const e=n.find((e=>e!==o));e&&(i.host=i.host.replace(o,e))}a.push(BI(i,t))}try{a.forEach((e=>{const t=new WebSocket(e);t.binaryType=\"arraybuffer\",s.push(t),this.logger(\"ws is connecting:\",t.url)}))}catch(n){if(this.logger(\"ws create failed\"),s.forEach((e=>e.close())),s.length=0,this.useDoubleDomain)return this.useDoubleDomain=!1,this.createWebSocket(e,t,i);if(!t&&443!==Number(e.port))return this.createWebSocket(e,!0,i);throw new xv(xg.WS_ERR,\"init websocket failed! Error: \".concat(n.toString()))}const c=ng();this.store&&this.store.recordJoinChannelService({urls:s.map((e=>e.url)),service:\"gateway\"},this.recordIndex),s.forEach((e=>{e.onopen=()=>{this.logger(\"onopen: ws \".concat(e.url,\" open cost \").concat(Date.now()-r,\"ms\")),this.websockets.forEach((t=>{t!==e&&(t.onopen=null,t.onclose=null,t.onmessage=null,t.close(),this.logger(\"close backup websocket: \".concat(t.url)))})),this.websockets.length=0,c.resolve(e)},e.onclose=i=>{this.logger(\"onclose: ws \".concat(e.url,\" closed cost \").concat(Date.now()-r,\"ms state: \").concat(e.readyState)),t?this.isTry443PortFailed=FI(s):this.isNormalPortFailed=FI(s),this.logger(\"443: \".concat(this.useProxy?\"not try\":this.isTry443PortFailed?\"failed\":\"trying\",\" 47xx: \").concat(this.isNormalPortFailed?\"failed\":\"trying\")),(t&&this.isTry443PortFailed||!t&&(this.isTry443PortFailed||this.useProxy)&&this.isNormalPortFailed)&&(this.logger(\"onclose: all websocket is closed, \".concat(i.reason)),c.reject({code:i.code,reason:tI.A_ROUND_WS_FAILED}))},e.onmessage=t=>this.logger(\"\".concat(e.url,\" onmessage: \").concat(t.data))})),this.websockets.push(...s);return i||(()=>{const i=()=>{this.logger(\"5s timeout close un-opens, isWebsocket created: \",c.isResolved),this.websockets.forEach((e=>e.readyState!==WebSocket.OPEN&&e.close()))};if(t||this.useProxy)return this.logger(\"add 5s timeout at \".concat(t?\"try-443\":\"proxy\",\" condition\")),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration);this.try443PortTimeout=window.setTimeout((()=>{if(this.logger(\"2s timeout, isWebsocket created: \",c.isResolved),c.isResolved)return i();pg().os===ag.MAC_OS&&Rg()&&i(),this.createWebSocket(e,!0,!0).then((e=>c.resolve(e))).catch((e=>{this.isNormalPortFailed&&c.reject(e),this.logger(\"try 443 port to create ws failed\")})),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration)}),this.try443PortDuration)})(),c.promise}chooseBestWebsocket(e,t,i,n){return this.useDoubleDomain=!!t,\"string\"==typeof e&&(e=function(e){let t,i,n;return[,t,i,n]=e.match(jI)||[],t||([,i,n]=e.match(GI)||[]),i&&n||([,i,n]=e.match(WI)||[]),i&&n||([,i]=e.match(HI)||[]),i||KC.warning(\"un-destructible url: \",e),{proxy:t,host:i,port:n||\"443\"}}(e)),this.recordIndex=n,this.useProxy=!!e.proxy,i&&this.useProxy&&(KC.warn(\"cannot use 443 only when use proxy\"),i=!1),this.createWebSocket(e,!!i,!1).finally((()=>this.clearTimeout()))}}function qI(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class JI extends iT{get url(){return this.websocket&&this.websocket.url||null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){var t;Pr(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(Iv.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(Iv.CONNECTED):\"closed\"===this._state?this.emit(Iv.CLOSED):\"failed\"===this._state&&this.emit(Iv.FAILED))}resetReconnectCount(e){KC.debug(\"websocket reset reconnect count, reason: \"+e),this.reconnectCount=0}constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;super(),nu(this,\"connectionID\",0),nu(this,\"currentURLIndex\",0),nu(this,\"urls\",[]),nu(this,\"_reconnectMode\",\"tryNext\"),nu(this,\"reconnectReason\",void 0),nu(this,\"_initMutex\",new YT(\"websocket\")),nu(this,\"name\",void 0),nu(this,\"_state\",\"closed\"),nu(this,\"reconnectInterrupter\",void 0),nu(this,\"websocket\",void 0),nu(this,\"retryConfig\",void 0),nu(this,\"reconnectCount\",0),nu(this,\"forceCloseTimeout\",5e3),nu(this,\"onlineReconnectListener\",void 0),nu(this,\"useCompress\",void 0),nu(this,\"tryDoubleDomain\",!1),nu(this,\"use443PortOnly\",!1),nu(this,\"wsInflateLength\",0),nu(this,\"wsDeflateLength\",0),nu(this,\"closeEstablishingWs\",(()=>{})),nu(this,\"store\",void 0),nu(this,\"joinGatewayRecordIndex\",void 0),this.store=s,this.name=e,this.retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?qI(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):qI(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this.useCompress=i,this.tryDoubleDomain=n,this.use443PortOnly=r;const{timeout:o,timeoutFactor:a}=t,c=Math.max(300,Math.floor(3*o/5)),d=Math.max(1.2,Math.floor(8*a)/10);hT.ONLINE&&(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d),RT.on(uT.NETWORK_STATE_CHANGE,((e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===hT.ONLINE?(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d):(this.retryConfig.timeout=o,this.retryConfig.timeoutFactor=a))}))}getConnection(){return this.websocket||void 0}async init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=await this._initMutex.lock();this.forceCloseTimeout=t,this.urls=e,this.state=\"connecting\";try{const e=ng(),t=this.urls[this.currentURLIndex];this.createWebSocketConnection(t).then(e.resolve).catch(e.reject),this.once(Iv.CLOSED,(()=>{e.reject(new Vg(xg.WS_DISCONNECT))})),this.once(Iv.CONNECTED,e.resolve),await e.promise}catch(e){}finally{i()}}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),this.reconnectInterrupter&&this.reconnectInterrupter(),this.websocket){this.websocket.onclose=null,this.websocket.onopen=null,this.websocket.onmessage=null;const e=this.websocket;t?setTimeout((()=>e.close()),500):e.close(),this.websocket=void 0}this.state=e?\"failed\":\"closed\",this.closeEstablishingWs&&this.closeEstablishingWs()}reconnect(e,t){if(!this.websocket)return void KC.warning(\"[\".concat(this.name,\"] can not reconnect, no websocket\"));void 0!==e&&(this.reconnectMode=e),KC.debug(\"[\".concat(this.name,\"] reconnect is triggered initiative\")),\"number\"==typeof this.joinGatewayRecordIndex&&this.store&&this.store.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this.joinGatewayRecordIndex);const i=this.websocket.onclose;this.websocket.onclose=null,this.websocket.close(),i&&i.bind(this.websocket)({code:9999,reason:t})}sendMessage(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new Vg(xg.WS_ABORT,\"websocket is not ready\");try{t||(e=JSON.stringify(e)),this.websocket.send(e)}catch(e){throw new Vg(xg.WS_ERR,\"send websocket message error\"+e.toString())}}setWsInflateData(e){this.wsDeflateLength=this.wsDeflateLength+e.originLength,this.wsInflateLength=this.wsInflateLength+e.compressedLength}getWsInflateData(){const e=this.wsInflateLength,t=this.wsDeflateLength;return this.clearWsInflateData(),{wsInflateLength:e,wsDeflateLength:t}}clearWsInflateData(){this.wsInflateLength=0,this.wsDeflateLength=0}async createWebSocketConnection(e){var t;const i=ng();this.connectionID+=1,this.joinGatewayRecordIndex=void 0;const n=e=>{var t;null===(t=this.store)||void 0===t||t.signalChannelOpen(),KC.debug(\"[\".concat(this.name,\"] websocket opened:\"),e),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),i.resolve()},r=async e=>{var t;if(KC.debug(\"[\".concat(this.name,\"] websocket close \").concat(null===(t=this.websocket)||void 0===t?void 0:t.url,\", code: \").concat(e.code,\", reason: \").concat(e.reason,\", current mode: \").concat(this.reconnectMode)),this.reconnectCount>=this.retryConfig.maxRetryCount)i.reject(new Vg(xg.WS_DISCONNECT,\"websocket close: \".concat(e.code))),this.close();else{\"connected\"===this.state&&(this.reconnectReason=e.reason,this.state=\"reconnecting\");const t=TT(this,Iv.WILL_RECONNECT,this.reconnectMode,e.reason)||this.reconnectMode,n=await this.reconnectWithAction(t);if(\"closed\"===this.state)return void KC.debug(\"[\".concat(this.connectionID,\"] ws is closed, no need to reconnect\"));if(!n)return i.reject(new Vg(xg.WS_DISCONNECT,\"websocket reconnect failed: \".concat(e.code))),this.close(!0);i.resolve()}},s=e=>{this.emit(Iv.ON_MESSAGE,e)},o=e=>{KC.warn(\"[\".concat(this.connectionID,\"] ws open error \").concat(e))};this.websocket&&(this.websocket.onclose=null,this.websocket.close()),kC(\"GATEWAY_WSS_ADDRESS\")&&this.name.startsWith(\"gateway\")&&(e=kC(\"GATEWAY_WSS_ADDRESS\")),KC.debug(\"[\".concat(this.name,\"] start connect, url:\"),e);const a=null===(t=this.store)||void 0===t?void 0:t.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"});try{var c;const t=await this.chooseBestWebsocketConnection(e);this.websocket=t,n&&n(this.websocket.url),this.websocket.onclose=r,this.websocket.onmessage=s,this.websocket.onerror=o,null===(c=this.store)||void 0===c||c.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),this.joinGatewayRecordIndex=a}catch(e){const t=\"closed\"===this.state,n=e instanceof Vg,s=n&&e.code===xg.WS_ABORT,o=n&&e.code===xg.WS_ERR,c=n?e.message:e&&(e.reason||e.toString());KC.warning(\"[choose-best-ws] chooseBestWebsocket error: \".concat(c)),this.store&&this.store.recordJoinChannelService({endTs:Date.now(),status:s?\"aborted\":\"error\",errors:[e]},a),t||o?(i.reject(t?new Vg(xg.WS_DISCONNECT,\"websocket is closed: \".concat(c)):new Vg(xg.WS_ERR,\"init websocket failed: \".concat(c))),o&&KC.error(\"[\".concat(this.name,\"] init websocket failed: \").concat(c))):r&&r(e)}return i.promise}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.reconnectCount>=this.retryConfig.maxRetryCount)return!1;if(0===this.urls.length)return!1;if(\"closed\"===this.state)return!1;KC.warning(\"[choose-best-ws] action: =>\",e),this.onlineReconnectListener||RT.isOnline||!RT.onlineWaiter||(this.onlineReconnectListener=RT.onlineWaiter.then((()=>{this.onlineReconnectListener=void 0})));let i=!0;if(this.reconnectInterrupter=()=>i=!1,t){const t=zT(this.reconnectCount,this.retryConfig);KC.debug(\"[\".concat(this.name,\"] wait \").concat(t,\"ms to reconnect websocket, mode: \").concat(e)),await tg.race([UT(t),this.onlineReconnectListener||new tg((()=>{}))])}if(\"closed\"===this._state||!i)return!1;this.reconnectCount+=1;const n=async(e,t)=>{this.emit(Iv.RECONNECT_CREATE_CONNECTION,t),await this.createWebSocketConnection(e)};try{if(\"retry\"===e)this.emit(Iv.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e);else if(\"tryNext\"===e){if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return this.reconnectWithAction(\"recover\",!1);KC.debug(\"[\".concat(this.name,\"] websocket url length: \").concat(this.urls.length,\" current index: \").concat(this.currentURLIndex)),this.emit(Iv.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e)}else\"recover\"===e&&(KC.debug(\"[\".concat(this.name,\"] request new urls\")),this.resetReconnectCount(\"recover mode\"),this.emit(Iv.RECONNECT_WAITTING_FINISH,e),this.urls=await fT(this,Iv.REQUEST_NEW_URLS),this.currentURLIndex=0,await n(this.urls[this.currentURLIndex],e))}catch(i){var r;KC.error(\"[\".concat(this.name,\"] reconnect failed \").concat(i&&i.toString()));const n=null==i||null===(r=i.data)||void 0===r?void 0:r.desc;return Array.isArray(n)&&Pr(n).call(n,\"dynamic key expired\")?(this.emit(Iv.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):this.reconnectWithAction(e,t)}return!0}}class zI extends JI{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){const i=ng(),n=function(e,t){return new YI(e,t)}(this.forceCloseTimeout,this.store);this.closeEstablishingWs=()=>{KC.debug(\"[choose-best-ws] close establishing websockets\"),n.closeAllWebsockets(),i.reject(new Vg(xg.WS_ABORT,\"choose best websocket aborted\"))};const r=kC(\"GATEWAY_DOMAINS\");return KC.debug(\"[choose-best-ws] currentDomain: \",e,\", domains: \",r,\"total: \".concat(this.urls.length),\"current: \".concat(this.currentURLIndex+1)),n.chooseBestWebsocket(e,this.tryDoubleDomain,this.use443PortOnly,t).then(i.resolve).catch(i.reject),i.promise.finally((()=>{this.closeEstablishingWs=void 0}))}}class XI extends JI{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){return new tg(((i,n)=>{let r=!1;const s=[];this.closeEstablishingWs=()=>{KC.debug(\"[choose-best-ws] close establishing websockets\"),s.forEach((e=>{e.onclose=null,e.onopen=null,e.onmessage=null,e.close()})),n(new Vg(xg.WS_ABORT,\"choose best websocket aborted\"))};const o=kC(\"GATEWAY_DOMAINS\");let a;const c=e.indexOf(\"?h=\"),d=o.find((t=>-1!==c?Pr(e).call(e,t,c):Pr(e).call(e,t)));KC.debug(\"[choose-best-ws] currentDomain: \",d,\", domains: \",o);let l=!this.tryDoubleDomain||!d;if(!l&&d){var h;const u=Date.now();try{o.forEach((t=>{const i=-1===c?e.replace(d,t):e.substr(0,c)+e.substr(c).replace(d,t),n=new WebSocket(i);n.binaryType=\"arraybuffer\",s.push(n),KC.debug(\"[choose-best-ws] ws is connecting:\",n.url)}))}catch(e){for(KC.debug(\"[choose-best-ws] ws create failed, fallback to single url\"),s.forEach((e=>e.close()));s.length;)s.pop();l=!0}null===(h=this.store)||void 0===h||h.recordJoinChannelService({urls:s.map((e=>e.url)),service:\"gateway\"},t),s.forEach((e=>{e.onopen=()=>{if(r)return;const t=Date.now()-u;KC.debug(\"[choose-best-ws] ws open cost \".concat(t,\"ms\")),s.filter((t=>t!==e)).forEach((e=>{KC.debug(\"[choose-best-ws]close backup websocket: \".concat(e.url)),e.close()})),r=!0,i(e)},e.onclose=e=>{if(a=e,r)return;s.find((e=>!(e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING)))||(KC.debug(\"[choose-best-ws] all websocket is closed\"),r=!0,n(a))},e.onmessage=t=>{KC.debug(\"[choose-best-ws]\".concat(e.url,\" onmessage: \").concat(t.data))}})),UT(this.forceCloseTimeout).then((()=>{s.forEach((e=>{e.readyState!==WebSocket.OPEN&&e.close()}))}))}if(l){var u;let r;KC.debug(\"[choose-best-ws] use single url: \",e),null===(u=this.store)||void 0===u||u.recordJoinChannelService({urls:[e],service:\"gateway\"},t);try{r=new WebSocket(e),s.push(r),r.binaryType=\"arraybuffer\"}catch(e){const t=new Vg(xg.WS_ERR,\"init websocket failed! Error: \".concat(e.toString()));return KC.error(\"[\".concat(this.name,\"]\").concat(t)),void n(t)}r.onopen=()=>{i(r)},r.onclose=e=>{n(e)},r.onmessage=e=>{KC.debug(\"[choose-best-ws]\".concat(r.url,\" onmessage: \").concat(e.data))},UT(this.forceCloseTimeout).then((()=>{r&&r.readyState!==WebSocket.OPEN&&r.close()}))}})).then((e=>(this.closeEstablishingWs=void 0,e))).catch((e=>{throw this.closeEstablishingWs=void 0,e}))}}class QI extends iT{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===fv.CONNECTED?this.emit(gv.WS_CONNECTED):e===fv.RECONNECTING?this.emit(gv.WS_RECONNECTING,this._websocketReconnectReason):e===fv.CLOSED&&this.emit(gv.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),nu(this,\"_disconnectedReason\",void 0),nu(this,\"_websocketReconnectReason\",void 0),nu(this,\"_connectionState\",fv.CLOSED),nu(this,\"reconnectToken\",void 0),nu(this,\"websocket\",void 0),nu(this,\"openConnectionTime\",void 0),nu(this,\"clientId\",void 0),nu(this,\"lastMsgTime\",Date.now()),nu(this,\"uploadCache\",[]),nu(this,\"uploadCacheInterval\",void 0),nu(this,\"rttRolling\",new dS(5)),nu(this,\"pingpongTimer\",void 0),nu(this,\"wsInflateDataTimer\",void 0),nu(this,\"pingpongTimeoutCount\",0),nu(this,\"joinResponse\",void 0),nu(this,\"multiIpOption\",void 0),nu(this,\"initError\",void 0),nu(this,\"spec\",void 0),nu(this,\"store\",void 0),nu(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(gv.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){if(this.emit(t._type,t._message),t._type===Rv.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===Rv.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(cT.UID_BANNED);break;case 15:this.close(cT.IP_BANNED);break;case 16:this.close(cT.CHANNEL_BANNED)}if(t._type===Rv.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case mv.ERR_LICENSE_MISSING:this.close(cT.LICENSE_MISSING);break;case mv.ERR_LICENSE_EXPIRED:this.close(cT.LICENSE_EXPIRED);break;case mv.ERR_LICENSE_MINUTES_EXCEEDED:this.close(cT.LICENSE_MINUTES_EXCEEDED);break;case mv.ERR_LICENSE_PERIOD_INVALID:this.close(cT.LICENSE_PERIOD_INVALID);break;case mv.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(cT.LICENSE_MULTIPLE_SDK_SERVICE);break;case mv.ERR_LICENSE_ILLEGAL:this.close(cT.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new zI(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,kC(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),kC(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===fv.CONNECTED&&this.reconnect(\"retry\",lT.OFFLINE)}))}async request(e,t,i,n){const r=xT(6,\"\"),s={_id:r,_type:e,_message:t},o=this.websocket.connectionID,a=()=>new tg(((t,i)=>{if(this.connectionState===fv.CONNECTED)return t();const n=()=>{this.off(gv.WS_CLOSED,r),t()},r=()=>{this.off(gv.WS_CONNECTED,n),i(new xv(xg.WS_ABORT))};this.once(gv.WS_CONNECTED,n),this.once(gv.WS_CLOSED,r),e!==Tv.PUBLISH&&e!==Tv.SUBSCRIBE&&e!==Tv.UNSUBSCRIBE&&e!==Tv.UNPUBLISH&&e!==Tv.CONTROL&&e!==Tv.RESTART_ICE||this.once(gv.DISCONNECT_P2P,(()=>{i(new xv(xg.DISCONNECT_P2P))})),e!==Tv.PUBLISH&&e!==Tv.RESTART_ICE||this.once(gv.ABORT_P2P_EXECUTION,(()=>{i(new xv(xg.DISCONNECT_P2P))}))}));if(this.connectionState!==fv.CONNECTING&&this.connectionState!==fv.RECONNECTING||e===Tv.JOIN||e===Tv.REJOIN||await a(),this.websocket.sendMessage(s,!0),n)return;const c=new tg(((i,n)=>{let s=!1;const a=(n,r)=>{s=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.emit(gv.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new xv(xg.WS_ABORT,\"type: \".concat(e))),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(gv.WS_CLOSED,c),this.once(gv.WS_RECONNECTING,c),UT(kC(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==o||s||(KC.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(gv.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===fv.CLOSED||e===Tv.LEAVE)throw new xv(xg.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===Tv.JOIN||e===Tv.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),h=UI(l),u=new xv(xg.UNEXPECTED_RESPONSE,\"\".concat(h.desc,\": \").concat(d.message.error_str),{code:l,data:d.message});return\"success\"===h.action?d.message:(KC.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(h.desc,\", action: \").concat(h.action)),l===mv.ERR_TOO_MANY_BROADCASTERS?e===Tv.JOIN||e===Tv.REJOIN?(this.initError=u,this.close(),u.throw()):u.throw():\"failed\"===h.action?u.throw():\"quit\"===h.action?(this.initError=u,this.close(),u.throw()):(l===mv.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,KC.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",lT.MULTI_IP)):this.reconnect(h.action,lT.SERVER_ERROR),e===Tv.JOIN||e===Tv.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new tg((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=kC(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==fv.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),kC(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new tg(((t,i)=>{this.once(gv.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(gv.WS_CLOSED,(()=>i(this.initError||new xv(xg.WS_ABORT)))),this.connectionState=fv.CONNECTING,this.websocket.init(e).catch(i),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval((()=>{this.handleWsInflateData()}),2e4)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||cT.LEAVE,this.connectionState=fv.CLOSED,KC.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close(),e===cT.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new zI(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,kC(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),kC(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(gv.ABORT_P2P_EXECUTION);const e=await fT(this,gv.REQUEST_JOIN_INFO),t=await this.request(Tv.JOIN,e);if(!t)return this.emit(gv.REPORT_JOIN_GATEWAY,tI.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(gv.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new xv(xg.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=ST(this,gv.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(Tv.REJOIN,e);return!!t&&(this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach((e=>{this.emit(Rv.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(Rv.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(Rv.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(Rv.MUTE_AUDIO,{uid:e.uid}):this.emit(Rv.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(Rv.MUTE_VIDEO,{uid:e.uid}):this.emit(Rv.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(Rv.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(Rv.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(Rv.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(Rv.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(Rv.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})})),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){KC.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=UI(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(cT.UID_BANNED),void this.close()):void this.reconnect(t.action,lT.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=kC(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(KC.warning(\"[\".concat(this.clientId,\"] PING-PONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>kC(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",lT.TIMEOUT):this.request(Tv.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),kC(\"REPORT_STATS\")&&this.send(Tv.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Sv.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Iv.RECONNECT_WAITTING_FINISH,(e=>{this.emit(gv.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Iv.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(gv.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Iv.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Iv.CLOSED,(()=>{this.connectionState=fv.CLOSED})),this.websocket.on(Iv.FAILED,(()=>{this._disconnectedReason=cT.NETWORK_ERROR,this.connectionState=fv.CLOSED})),this.websocket.on(Iv.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===fv.CONNECTED?this.connectionState=fv.RECONNECTING:this.connectionState=fv.CONNECTING})),this.websocket.on(Iv.WILL_RECONNECT,((e,t,i)=>{const n=ST(this,gv.IS_P2P_DISCONNECTED),r=n||\"retry\"!==e;n&&\"retry\"===e&&(KC.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),e=\"tryNext\",t=tI.P2P_DISCONNECTED),r&&(KC.debug(\"\".concat(this.clientId,\" will renewSession, reconnect mode: \").concat(e)),this.emit(gv.REPORT_JOIN_GATEWAY,t||tI.UNKNOWN_REASON,this.url||\"\"),this.reconnectToken=void 0,this.emit(gv.NEED_RENEW_SESSION),this.emit(gv.DISCONNECT_P2P)),i(e)})),this.websocket.on(Iv.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch((e=>{KC.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),this.reconnect(\"tryNext\",lT.SERVER_ERROR)})):this.join().catch((e=>{if(this.emit(gv.REPORT_JOIN_GATEWAY,e.message||e.code||tI.UNKNOWN_REASON,this.url||\"\"),e instanceof xv&&e.code===xg.UNEXPECTED_RESPONSE&&e.data.code===mv.ERR_NO_AUTHORIZED)return KC.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",lT.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",lT.SERVER_ERROR):(this.initError=e,this.close())}))})),this.websocket.on(Iv.REQUEST_NEW_URLS,((e,t)=>{fT(this,gv.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Iv.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(Rv.ON_TOKEN_PRIVILEGE_DID_EXPIRE)}))}}var ZI=\"\\t\\n\\v\\f\\r                　\\u2028\\u2029\\ufeff\",$I=et,ey=gr,ty=ZI,iy=_e(\"\".replace),ny=RegExp(\"^[\"+ty+\"]+\"),ry=RegExp(\"(^|[^\"+ty+\"])[\"+ty+\"]+$\"),sy=function(e){return function(t){var i=ey($I(t));return 1&e&&(i=iy(i,ny,\"\")),2&e&&(i=iy(i,ry,\"$1\")),i}},oy={start:sy(1),end:sy(2),trim:sy(3)},ay=Jd.PROPER,cy=ce,dy=ZI,ly=oy.trim;kn({target:\"String\",proto:!0,forced:function(e){return cy((function(){return!!dy[e]()||\"​᠎\"!==\"​᠎\"[e]()||ay&&dy[e].name!==e}))}(\"trim\")},{trim:function(){return ly(this)}});var hy,uy,py=er(\"String\").trim,_y=Ee,Ey=py,my=String.prototype,fy=J((function(e){var t=e.trim;return\"string\"==typeof e||e===my||_y(my,e)&&t===my.trim?Ey:t}));function gy(e,t,i){return{sampleRate:e,stereo:t,bitrate:i}}function Ty(e,t,i,n,r){return{width:e,height:t,frameRate:i,bitrateMin:n,bitrateMax:r}}function Sy(e,t,i,n,r){return{width:{max:e},height:{max:t},frameRate:i,bitrateMin:n,bitrateMax:r}}function Ry(e,t){return{numSpatialLayers:e,numTemporalLayers:t}}!function(e){e[e.CHOOSE_SERVER=11]=\"CHOOSE_SERVER\",e[e.CLOUD_PROXY=18]=\"CLOUD_PROXY\",e[e.CLOUD_PROXY_5=20]=\"CLOUD_PROXY_5\",e[e.CLOUD_PROXY_FALLBACK=26]=\"CLOUD_PROXY_FALLBACK\"}(hy||(hy={})),function(e){e.IOS_15_16_INTERRUPTION_START=\"ios15_16-interruption-start\",e.IOS_15_16_INTERRUPTION_END=\"ios15_16-interruption-end\",e.IOS_INTERRUPTION_START=\"ios-interruption-start\",e.IOS_INTERRUPTION_END=\"ios-interruption-end\",e.STATE_CHANGE=\"state-change\"}(uy||(uy={}));const Cy={\"90p\":Ty(160,90),\"90p_1\":Ty(160,90),\"120p\":Ty(160,120,15,30,65),\"120p_1\":Ty(160,120,15,30,65),\"120p_3\":Ty(120,120,15,30,50),\"120p_4\":Ty(212,120),\"180p\":Ty(320,180,15,30,140),\"180p_1\":Ty(320,180,15,30,140),\"180p_3\":Ty(180,180,15,30,100),\"180p_4\":Ty(240,180,15,30,120),\"240p\":Ty(320,240,15,40,200),\"240p_1\":Ty(320,240,15,40,200),\"240p_3\":Ty(240,240,15,40,140),\"240p_4\":Ty(424,240,15,40,220),\"360p\":Ty(640,360,15,80,400),\"360p_1\":Ty(640,360,15,80,400),\"360p_3\":Ty(360,360,15,80,260),\"360p_4\":Ty(640,360,30,80,600),\"360p_6\":Ty(360,360,30,80,400),\"360p_7\":Ty(480,360,15,80,320),\"360p_8\":Ty(480,360,30,80,490),\"360p_9\":Ty(640,360,15,80,800),\"360p_10\":Ty(640,360,24,80,800),\"360p_11\":Ty(640,360,24,80,1e3),\"480p\":Ty(640,480,15,100,500),\"480p_1\":Ty(640,480,15,100,500),\"480p_2\":Ty(640,480,30,100,1e3),\"480p_3\":Ty(480,480,15,100,400),\"480p_4\":Ty(640,480,30,100,750),\"480p_6\":Ty(480,480,30,100,600),\"480p_8\":Ty(848,480,15,100,610),\"480p_9\":Ty(848,480,30,100,930),\"480p_10\":Ty(640,480,10,100,400),\"720p\":Ty(1280,720,15,120,1130),\"720p_auto\":Ty(1280,720,30,900,3e3),\"720p_1\":Ty(1280,720,15,120,1130),\"720p_2\":Ty(1280,720,30,120,2e3),\"720p_3\":Ty(1280,720,30,120,1710),\"720p_5\":Ty(960,720,15,120,910),\"720p_6\":Ty(960,720,30,120,1380),\"1080p\":Ty(1920,1080,15,120,2080),\"1080p_1\":Ty(1920,1080,15,120,2080),\"1080p_2\":Ty(1920,1080,30,120,3e3),\"1080p_3\":Ty(1920,1080,30,120,3150),\"1080p_5\":Ty(1920,1080,60,120,4780),\"1440p\":Ty(2560,1440,30,120,4850),\"1440p_1\":Ty(2560,1440,30,120,4850),\"1440p_2\":Ty(2560,1440,60,120,7350),\"4k\":Ty(3840,2160,30,120,8910),\"4k_1\":Ty(3840,2160,30,120,8910),\"4k_3\":Ty(3840,2160,60,120,13500)},vy=[{scaleResolutionDownBy:2,width:1280,height:720,frameRate:30,bitrateMin:300,bitrateMax:900},{scaleResolutionDownBy:1.333333,width:1280,height:720,frameRate:30,bitrateMin:600,bitrateMax:2e3},{scaleResolutionDownBy:1,width:1280,height:720,frameRate:30,bitrateMin:900,bitrateMax:3e3}],Iy={\"480p\":Sy(640,480,5),\"480p_1\":Sy(640,480,5),\"480p_2\":Sy(640,480,30),\"480p_3\":Sy(640,480,15),\"720p\":Sy(1280,720,5),\"720p_auto\":Ty(1280,720,30,900,3e3),\"720p_1\":Sy(1280,720,5),\"720p_2\":Sy(1280,720,30),\"720p_3\":Sy(1280,720,15),\"1080p\":Sy(1920,1080,5),\"1080p_1\":Sy(1920,1080,5),\"1080p_2\":Sy(1920,1080,30),\"1080p_3\":Sy(1920,1080,15)},yy={\"1SL1TL\":Ry(1,1),\"3SL3TL\":Ry(3,3),\"2SL3TL\":Ry(2,3)};function Ay(e){return e||(e=\"480p_1\"),\"string\"==typeof e?Object.assign({},Cy[e]):e}function by(e){return\"string\"==typeof e?Object.assign({},Iy[e]):e}function wy(e){return\"string\"==typeof e?Object.assign({},yy[e]):e}const Oy={speech_low_quality:gy(16e3,!1),speech_standard:gy(32e3,!1,18),music_standard:gy(48e3,!1),standard_stereo:gy(48e3,!0,56),high_quality:gy(48e3,!1,128),high_quality_stereo:gy(48e3,!0,192)};function Ny(e){return\"string\"==typeof e?Object.assign({},Oy[e]):e}const Dy=[];function Py(e){return Bg(e,\"mediaSource\",[\"screen\",\"window\",\"application\"]),!0}var Ly,ky,My,Uy,xy,Vy,Fy,By,jy,Gy;!function(e){e.NEED_RENEGOTIATE=\"@need_renegotiate\",e.NEED_REPLACE_TRACK=\"@need_replace_track\",e.NEED_CLOSE=\"@need_close\",e.NEED_ENABLE_TRACK=\"@need_enable_track\",e.NEED_DISABLE_TRACK=\"@need_disable_track\",e.NEED_SESSION_ID=\"@need_sid\",e.SET_OPTIMIZATION_MODE=\"@set_optimization_mode\",e.GET_STATS=\"@get_stats\",e.GET_RTC_STATS=\"@get_rtc_stats\",e.GET_LOW_VIDEO_TRACK=\"@get_low_video_track\",e.NEED_RESET_REMOTE_SDP=\"@need_reset_remote_sdp\",e.NEED_UPDATE_VIDEO_ENCODER=\"@need_update_video_encoder\",e.NEED_MUTE_TRACK=\"@need_mute_track\",e.NEED_UNMUTE_TRACK=\"@need_unmute_track\"}(Ly||(Ly={})),function(e){e.SCREEN_TRACK=\"screen_track\",e.CUSTOM_TRACK=\"custome_track\",e.LOW_STREAM=\"low_stream\"}(ky||(ky={})),function(e){e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\"}(My||(My={})),function(e){e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\"}(Uy||(Uy={})),function(e){e[e.DISABLE=0]=\"DISABLE\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e[e.AUDIO_ONLY=2]=\"AUDIO_ONLY\"}(xy||(xy={})),function(e){e.TRANSCEIVER_UPDATED=\"transceiver-updated\"}(Vy||(Vy={})),function(e){e.SOURCE_STATE_CHANGE=\"source-state-change\",e.TRACK_ENDED=\"track-ended\",e.BEAUTY_EFFECT_OVERLOAD=\"beauty-effect-overload\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.CLOSED=\"closed\"}(Fy||(Fy={})),function(e){e.FIRST_FRAME_DECODED=\"first-frame-decoded\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\"}(By||(By={})),function(e){e.AUDIO_SOURCE_STATE_CHANGE=\"audio_source_state_change\",e.RECEIVE_TRACK_BUFFER=\"receive_track_buffer\",e.ON_AUDIO_BUFFER=\"on_audio_buffer\",e.UPDATE_SOURCE=\"update_source\"}(jy||(jy={})),function(e){e.UPDATE_TRACK_SOURCE=\"update-track-source\"}(Gy||(Gy={}));const Wy={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,currentPacketLossRate:0},Hy={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,totalDuration:0,totalFreezeTime:0,currentPacketLossRate:0},Ky={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1},Yy={uplinkNetworkQuality:0,downlinkNetworkQuality:0},qy={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1};var Jy,zy,Xy,Qy,Zy;!function(e){e.ON_TRACK=\"on_track\",e.ON_NODE=\"on_node\"}(Jy||(Jy={})),function(e){e.REQUEST_UPDATE_CONSTRAINTS=\"request_update_constraints\",e.REQUEST_CONSTRAINTS=\"request_constraints\"}(zy||(zy={})),function(e){e.IDLE=\"IDLE\",e.INITING=\"INITING\",e.INITEND=\"INITEND\"}(Xy||(Xy={})),function(e){e.STATE_CHANGE=\"state_change\",e.RECORDING_DEVICE_CHANGED=\"recordingDeviceChanged\",e.PLAYOUT_DEVICE_CHANGED=\"playoutDeviceChanged\",e.CAMERA_DEVICE_CHANGED=\"cameraDeviceChanged\"}(Qy||(Qy={})),function(e){e.NONE=\"none\",e.INIT=\"init\",e.CANPLAY=\"canplay\",e.PLAYING=\"playing\",e.PAUSED=\"paused\",e.SUSPEND=\"suspend\",e.STALLED=\"stalled\",e.WAITING=\"waiting\",e.ERROR=\"error\",e.DESTROYED=\"destroyed\",e.ABORT=\"abort\",e.ENDED=\"ended\",e.EMPTIED=\"emptied\",e.LOADEDDATA=\"loadeddata\"}(Zy||(Zy={}));const $y={uninit:100,none:110,init:120,loadeddata:130,canplay:200,playing:210,paused:220,suspend:300,stalled:310,waiting:320,error:330,destroyed:340,abort:350,ended:360,emptied:370};var eA;!function(e){e.OPEN=\"open\",e.MESSAGE=\"message\",e.CLOSE=\"close\",e.CLOSING=\"closing\",e.ERROR=\"error\"}(eA||(eA={}));class tA extends iT{constructor(e,t){super(),nu(this,\"_ID\",void 0),nu(this,\"_rtpTransceiver\",void 0),nu(this,\"_lowRtpTransceiver\",void 0),nu(this,\"_hints\",[]),nu(this,\"_isClosed\",!1),nu(this,\"_originMediaStreamTrack\",void 0),nu(this,\"_mediaStreamTrack\",void 0),nu(this,\"_external\",{}),this._ID=t||xT(8,\"track-\"),this._originMediaStreamTrack=e,this._mediaStreamTrack=e,function(e){Pr(Dy).call(Dy,e)||Dy.push(e)}(this)}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(e){if(!e){const e=rv.reportApiInvoke(null,{name:sT.GET_MEDIA_STREAM_TRACK,options:[],tag:oT.TRACER});this._mediaStreamTrack&&\"string\"==typeof this._mediaStreamTrack.label?e.onSuccess(this._mediaStreamTrack.label):e.onSuccess(\"\")}return this._mediaStreamTrack}getRTCRtpTransceiver(e){return e===My.LOW_STREAM?this._lowRtpTransceiver:this._rtpTransceiver}getMediaStreamTrackSettings(){return this.getMediaStreamTrack(!0).getSettings()}close(){this._isClosed=!0,this._lowRtpTransceiver=void 0,this._rtpTransceiver=void 0,function(e){const t=Dy.indexOf(e);-1!==t&&Dy.splice(t,1)}(this),this.emit(Fy.CLOSED)}_updateRtpTransceiver(e,t){if(t===My.LOW_STREAM){if(this._lowRtpTransceiver===e)return;this._lowRtpTransceiver=e}else{if(this._rtpTransceiver===e)return;this._rtpTransceiver=e}this.emit(Vy.TRANSCEIVER_UPDATED,e,t)}}class iA extends tA{get isExternalTrack(){return this._isExternalTrack}get muted(){return this._muted}get enabled(){return this._enabled}get processorContext(){return this._processorContext}set processorContext(e){this._processorContext=e}constructor(e,t){super(e,t),nu(this,\"_enabled\",!0),nu(this,\"_muted\",!1),nu(this,\"_isExternalTrack\",!1),nu(this,\"_isClosed\",!1),nu(this,\"_enabledMutex\",void 0),nu(this,\"processor\",void 0),nu(this,\"_handleTrackEnded\",(()=>{this.onTrackEnded()})),this._enabledMutex=new YT(\"\".concat(this.getTrackId())),e.addEventListener(\"ended\",this._handleTrackEnded)}getTrackLabel(){var e,t;return null!==(e=null===(t=this._originMediaStreamTrack)||void 0===t?void 0:t.label)&&void 0!==e?e:\"\"}close(){this._isClosed||(this.stop(),this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=null,KC.debug(\"[\".concat(this.getTrackId(),\"] close\")),this.emit(Ly.NEED_CLOSE),super.close())}async _updateOriginMediaStreamTrack(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._isExternalTrack=i,e!==this._originMediaStreamTrack&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await gT(this,Ly.NEED_REPLACE_TRACK,this),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}))}_getDefaultPlayerConfig(){return{}}onTrackEnded(){KC.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(Fy.TRACK_ENDED)}stateCheck(e,t){if(KC.debug(\"check track state, [muted: \".concat(this._muted,\", enabled: \").concat(this._enabled,\"] to [\").concat(e,\": \").concat(t,\"]\")),Fg(t,e),this._enabled&&this._muted&&\"enabled\"===e&&!1===t)throw new Vg(xg.TRACK_STATE_UNREACHABLE,\"cannot set enabled while the track is muted\").print(\"error\",KC);if(!this._enabled&&!this._muted&&\"muted\"===e&&!0===t)throw new Vg(xg.TRACK_STATE_UNREACHABLE,\"cannot set muted while the track is disabled\").print(\"error\",KC)}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}function nA(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const rA=window.AudioContext||window.webkitAudioContext;let sA=null;const oA=new class extends iT{constructor(){super(...arguments),nu(this,\"prevState\",void 0),nu(this,\"curState\",void 0),nu(this,\"currentTime\",void 0),nu(this,\"currentTimeStuckAt\",void 0),nu(this,\"interruptDetectorTrack\",void 0),nu(this,\"onLocalAudioTrackMute\",(()=>{KC.info(\"ios15-interruption-start\"),this.emit(uy.IOS_15_16_INTERRUPTION_START)})),nu(this,\"onLocalAudioTrackUnmute\",(async()=>{KC.info(\"ios15-interruption-end\"),\"running\"!==this.curState||this.duringInterruption?KC.info(\"ios15-interruption-end-canceled\"):(sA&&await sA.suspend(),this.emit(uy.IOS_15_16_INTERRUPTION_END))}))}get duringInterruption(){return\"running\"===this.prevState&&\"interrupted\"===this.curState}bindInterruptDetectorTrack(e){KC.debug(\"webaudio bindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack||(this.interruptDetectorTrack=e,this.interruptDetectorTrack._mediaStreamTrack.onmute=this.onLocalAudioTrackMute,this.interruptDetectorTrack._mediaStreamTrack.onunmute=this.onLocalAudioTrackUnmute)}unbindInterruptDetectorTrack(e){KC.debug(\"webaudio unbindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack&&this.interruptDetectorTrack===e&&(this.interruptDetectorTrack._mediaStreamTrack&&(this.interruptDetectorTrack._mediaStreamTrack.onmute=null,this.interruptDetectorTrack._mediaStreamTrack.onunmute=null),this.interruptDetectorTrack=void 0)}};function aA(){if(!rA)return void KC.error(\"your browser is not support web audio\");KC.info(\"create audio context\");const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?nA(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):nA(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},kC(\"WEBAUDIO_INIT_OPTIONS\"));KC.debug(\"audio context init option:\",JSON.stringify(e)),sA=new rA(e),oA.curState=sA.state,sA.onstatechange=()=>{oA.prevState=oA.curState,oA.curState=sA?sA.state:void 0;const{prevState:e,curState:t}=oA,i=\"running\"===t,n=\"interrupted\"===t,r=\"running\"===e,s=\"suspended\"===e,o=\"interrupted\"===e,a=pg().osVersion;(Cg()||Dg())&&r&&n&&(KC.info(\"ios\".concat(a,\"-interruption-start\")),oA.emit(uy.IOS_INTERRUPTION_START)),(Cg()||Dg())&&(s||o)&&i&&(KC.info(\"ios\".concat(a,\"-interruption-end\")),oA.emit(uy.IOS_INTERRUPTION_END)),e!==t&&(KC.debug(\"AudioContext State Change\",\"\".concat(e,\"=>\").concat(t)),oA.emit(uy.STATE_CHANGE))},setInterval((()=>{var e;const t=null===(e=sA)||void 0===e?void 0:e.currentTime;if(oA.currentTime!==t)oA.currentTimeStuckAt&&(KC.debug(\"AudioContext current time resume at \".concat(t)),oA.currentTimeStuckAt=void 0),oA.currentTime=t;else{if(t!==oA.currentTimeStuckAt){rv.reportApiInvoke(null,{name:\"WEB_AUDIO_CURRENT_TIME_STUCK\",options:{currentTime:t},tag:oT.TRACER}).onSuccess(),KC.warning(\"AudioContext current time stuck at \".concat(t))}oA.currentTimeStuckAt=t}}),5e3),async function(e){const t=[\"click\",\"contextmenu\",\"auxclick\",\"dblclick\",\"mousedown\",\"mouseup\",\"touchend\",\"keydown\",\"keyup\"];let i,n=!1,r=!1,s=!1;function o(t){\"running\"===e.state?a(!1):Cg()||Dg()?\"suspended\"===e.state&&(a(!0),t&&e.resume().then(d,d)):\"closed\"!==e.state&&(a(!0),t&&e.resume().then(d,d))}function a(e){if(n!==e){n=e;for(let i=0,n=t;i<n.length;i+=1){const t=n[i];e?window.addEventListener(t,l,{capture:!0,passive:!0}):window.removeEventListener(t,l,{capture:!0,passive:!0})}}}function c(){o(!0)}function d(){o(!1)}function l(){o(!0)}function h(e){if(!s)if(i.paused)if(e){let e;u(!1),s=!0;try{e=i.play(),e?e.then(p,p):(i.addEventListener(\"playing\",p),i.addEventListener(\"abort\",p),i.addEventListener(\"error\",p))}catch(e){p()}}else u(!0);else u(!1)}function u(e){if(r!==e){r=e;for(let i=0,n=t;i<n.length;i++){const t=n[i];e?window.addEventListener(t,_,{capture:!0,passive:!0}):window.removeEventListener(t,_,{capture:!0,passive:!0})}}}function p(){i.removeEventListener(\"playing\",p),i.removeEventListener(\"abort\",p),i.removeEventListener(\"error\",p),s=!1,h(!1)}function _(){h(!0)}if(Cg()){const t=e.createMediaStreamDestination(),n=document.createElement(\"div\");n.innerHTML=\"<audio x-webkit-airplay='deny'></audio>\",i=n.children.item(0),i.controls=!1,i.disableRemotePlayback=!0,i.preload=\"auto\",i.srcObject=t.stream,h(!0)}oA.on(uy.STATE_CHANGE,c),o(!1)}(sA)}function cA(){if(!sA){if(aA(),!sA)throw new Vg(xg.NOT_SUPPORTED,\"can not create audio context\");return sA}return sA}function dA(){return!!sA}function lA(e){if(function(){if(null!==hA)return hA;const e=cA(),t=e.createBufferSource(),i=e.createGain(),n=e.createGain();t.connect(i),t.connect(n),t.disconnect(i);let r=!1;try{t.disconnect(i)}catch(e){r=!0}return t.disconnect(),hA=r,r}())return;const t=e.connect,i=e.disconnect;e.connect=(i,n,r)=>{var s;return e._inputNodes||(e._inputNodes=[]),Pr(s=e._inputNodes).call(s,i)||(i instanceof AudioNode?(e._inputNodes.push(i),t.call(e,i,n,r)):t.call(e,i,n)),e},e.disconnect=(n,r,s)=>{i.call(e),n?IT(e._inputNodes,n):e._inputNodes=[];for(const i of e._inputNodes)t.call(e,i)}}let hA=null;function uA(e,t){let i=!1;const n=1/t;if(kC(\"DISABLE_WEBAUDIO\")){const t=window.setInterval((()=>{i?window.clearInterval(t):e(performance.now()/1e3)}),1e3*n)}else{const t=cA();let r=t.createGain();r.gain.value=0,r.connect(t.destination);const s=()=>{if(i)return void(r=null);const o=t.createOscillator();o.onended=s,o.connect(r),o.start(0),o.stop(t.currentTime+n),e(t.currentTime)};s()}return()=>{i=!0}}const pA={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1,supportDualStreamEncoding:!1,supportDataChannel:!1,supportPCSetConfiguration:!1,supportWebRTCEncodedTransform:!1,supportWebRTCInsertableStream:!1};function _A(){return pA}class EA{constructor(){nu(this,\"context\",void 0),nu(this,\"analyserNode\",void 0),nu(this,\"sourceNode\",void 0),this.context=cA(),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4}updateSource(e){if(e!==this.sourceNode){if(this.sourceNode)try{this.sourceNode.disconnect(this.analyserNode)}catch(e){}this.sourceNode=e,null==e||e.connect(this.analyserNode)}}getVolumeLevel(){if(!this.sourceNode)return 0;if(!this.context||Cg()||Dg()||\"running\"!==this.context.state&&this.context.resume(),!this.analyserNode)return 0;const e=new Float32Array(this.analyserNode.fftSize);if(this.analyserNode.getFloatTimeDomainData)this.analyserNode.getFloatTimeDomainData(e);else{const t=new Uint8Array(this.analyserNode.fftSize);this.analyserNode.getByteTimeDomainData(t);for(let i=0;i<e.length;++i)e[i]=t[i]/128-1}const t=cS(e).call(e,((e,t)=>e+t*t),0)/e.length;return Math.max(10*Math.log10(t)+100,0)/100}getAnalyserNode(){return this.analyserNode}rebuildAnalyser(){try{var e,t;null===(e=this.sourceNode)||void 0===e||e.disconnect(this.analyserNode),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4,null===(t=this.sourceNode)||void 0===t||t.connect(this.analyserNode)}catch(e){KC.warning(\"rebuild analyser node failed.\")}}destroy(){this.updateSource(void 0)}}class mA extends iT{get processSourceNode(){return this.sourceNode}set processedNode(e){var t;if(!this.isDestroyed&&this._processedNode!==e){try{var i;null===(i=this.sourceNode)||void 0===i||i.disconnect(this.outputNode)}catch(e){}null===(t=this._processedNode)||void 0===t||t.disconnect(),this._processedNode=e,this.connect()}}get processedNode(){return this._processedNode}constructor(){super(),nu(this,\"outputNode\",void 0),nu(this,\"outputTrack\",void 0),nu(this,\"isPlayed\",!1),nu(this,\"context\",void 0),nu(this,\"audioBufferNode\",void 0),nu(this,\"destNode\",void 0),nu(this,\"audioOutputLevel\",0),nu(this,\"volumeLevelAnalyser\",void 0),nu(this,\"_processedNode\",void 0),nu(this,\"playNode\",void 0),nu(this,\"isDestroyed\",!1),nu(this,\"onNoAudioInput\",void 0),nu(this,\"isNoAudioInput\",!1),nu(this,\"_noAudioInputCount\",0),this.context=cA(),this.playNode=this.context.destination,this.outputNode=this.context.createGain(),lA(this.outputNode),this.volumeLevelAnalyser=new EA}startGetAudioBuffer(e){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(e),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=e=>{this.emit(jy.ON_AUDIO_BUFFER,function(e){for(let t=0;t<e.outputBuffer.numberOfChannels;t+=1){const i=e.outputBuffer.getChannelData(t);for(let e=0;e<i.length;e+=1)i[e]=0}return e.inputBuffer}(e))})}stopGetAudioBuffer(){this.audioBufferNode&&(this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!_A().webAudioMediaStreamDest)throw new Vg(xg.NOT_SUPPORTED,\"your browser is not support audio processor\");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(e){\"running\"!==this.context.state&&AT((()=>{oA.emit(\"autoplay-failed\")})),this.isPlayed=!0,this.playNode=e||this.context.destination,this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(e){}this.isPlayed=!1}getAccurateVolumeLevel(){return this.volumeLevelAnalyser.getVolumeLevel()}async checkHasAudioInput(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(e>5)return this.isNoAudioInput=!0,this.onNoAudioInput&&this.onNoAudioInput(),!1;Cg()||Dg()?\"suspended\"===this.context.state&&this.context.resume():\"running\"!==this.context.state&&this.context.resume();const t=this.volumeLevelAnalyser.getAnalyserNode();let i;t.getFloatTimeDomainData?(i=new Float32Array(t.fftSize),t.getFloatTimeDomainData(i)):(i=new Uint8Array(t.fftSize),t.getByteTimeDomainData(i));let n=!1;for(let e=0;e<i.length;e++)0!==i[e]&&(n=!0);return n?(this.isNoAudioInput=!1,!0):(await UT(200),await this.checkHasAudioInput(e?e+1:1)&&n)}getAudioVolume(){return this.outputNode.gain.value}setVolume(e){this.outputNode.gain.setValueAtTime(e,this.context.currentTime)}destroy(){this.disconnect(),this.stop(),this.isDestroyed=!0,this.onNoAudioInput=void 0}disconnect(){var e,t;null===(e=this.processedNode)||void 0===e||e.disconnect(),null===(t=this.sourceNode)||void 0===t||t.disconnect(),this.outputNode&&this.outputNode.disconnect()}connect(){var e;this.processedNode?null===(e=this.processedNode)||void 0===e||e.connect(this.outputNode):this.sourceNode&&this.sourceNode.connect(this.outputNode);this.volumeLevelAnalyser.updateSource(this.outputNode)}}class fA extends mA{get isFreeze(){return!1}constructor(e,t,i){var n;if(super(),nu(this,\"sourceNode\",void 0),nu(this,\"track\",void 0),nu(this,\"clonedTrack\",void 0),nu(this,\"audioElement\",void 0),nu(this,\"isCurrentTrackCloned\",!1),nu(this,\"isRemoteTrack\",!1),nu(this,\"originVolumeLevelAnalyser\",void 0),nu(this,\"rebuildWebAudio\",(async()=>{if(KC.debug(\"ready to rebuild web audio, state:\",this.context.state),this.isNoAudioInput&&await this.checkHasAudioInput(),!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener(\"click\",this.rebuildWebAudio,!0),void KC.debug(\"rebuild web audio success, current volume status\",this.getAccurateVolumeLevel());this.context.resume().then((()=>KC.info(\"resume success\"))),KC.debug(\"rebuild web audio because of ios 12 bugs\"),this.disconnect();const e=this.track;this.track=this.track.clone(),this.isCurrentTrackCloned?e.stop():this.isCurrentTrackCloned=!0;const t=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(t),lA(this.sourceNode),this.volumeLevelAnalyser.rebuildAnalyser();const i=this.outputNode.gain.value;this.outputNode=this.context.createGain(),this.outputNode.gain.setValueAtTime(i,this.context.currentTime),lA(this.outputNode),this.emit(jy.UPDATE_SOURCE),this.connect(),this.audioElement.srcObject=t,this.isPlayed&&this.play(this.playNode),this.checkHasAudioInput()})),\"audio\"!==e.kind)throw new Vg(xg.UNEXPECTED_ERROR);this.track=e;const r=new MediaStream([this.track]);if(this.isRemoteTrack=!!t,this.sourceNode=this.context.createMediaStreamSource(r),lA(this.sourceNode),i){const e=i.clone();e.enabled=!0,this.clonedTrack=e,KC.debug(\"create an unmuted track \".concat(e.id,\" from the original track \").concat(i.id,\" to get the volume\"));const t=this.context.createMediaStreamSource(new MediaStream([e]));lA(t),this.originVolumeLevelAnalyser=new EA,this.originVolumeLevelAnalyser.updateSource(t)}this.connect(),this.audioElement=document.createElement(\"audio\"),this.audioElement.srcObject=r;const s=pg();t&&s.os===ag.IOS&&Number(null===(n=s.osVersion)||void 0===n?void 0:n.split(\".\")[0])<15&&(oA.on(uy.STATE_CHANGE,(()=>{\"suspended\"===this.context.state?document.body.addEventListener(\"click\",this.rebuildWebAudio,!0):\"running\"===this.context.state&&this.rebuildWebAudio()})),this.checkHasAudioInput().then((e=>{e||document.body.addEventListener(\"click\",this.rebuildWebAudio,!0)})))}updateTrack(e){this.sourceNode.disconnect(),this.track=e,this.isCurrentTrackCloned=!1;const t=new MediaStream([e]);this.sourceNode=this.context.createMediaStreamSource(t),lA(this.sourceNode),this.processedNode||this.sourceNode.connect(this.outputNode),this.emit(jy.UPDATE_SOURCE),this.audioElement.srcObject=t}destroy(){var e;this.audioElement.srcObject=null,this.audioElement.remove(),oA.off(\"state-change\",this.rebuildWebAudio),null===(e=this.originVolumeLevelAnalyser)||void 0===e||e.destroy(),this.clonedTrack=void 0,super.destroy()}createMediaStreamSourceNode(e){return this.context.createMediaStreamSource(new MediaStream([e]))}updateOriginTrack(e){const t=e.clone();t.enabled=!0,this.clonedTrack&&(this.clonedTrack.stop(),this.clonedTrack=t),KC.debug(\"create an unmuted track \".concat(t.id,\" from the original track \").concat(e.id,\" to get the volume\"));const i=this.context.createMediaStreamSource(new MediaStream([t]));lA(i),this.originVolumeLevelAnalyser&&this.originVolumeLevelAnalyser.updateSource(i)}getOriginVolumeLevel(){return this.originVolumeLevelAnalyser?this.originVolumeLevelAnalyser.getVolumeLevel():this.getAccurateVolumeLevel()}}async function gA(e,t,i){const n=(e,t)=>e?\"number\"!=typeof e?e.max||e.exact||e.ideal||e.min||t:e:t,r={audio:!!i&&{mandatory:{chromeMediaSource:\"desktop\"}},video:{mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:e,maxHeight:n(t.height,1080),maxWidth:n(t.width,1920)}}};return t.frameRate&&\"number\"!=typeof t.frameRate?(r.video.mandatory.maxFrameRate=t.frameRate.max,r.video.mandatory.minFrameRate=t.frameRate.min):\"number\"==typeof t.frameRate&&(r.video.mandatory.maxFrameRate=t.frameRate),await navigator.mediaDevices.getUserMedia(r)}async function TA(e,t){const i=await SA(e.mediaSource),{sourceId:n,audio:r}=await function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new tg(((i,n)=>{const r=document.createElement(\"div\");r.innerText=\"share screen\",r.setAttribute(\"style\",\"text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;\");const s=document.createElement(\"div\");s.setAttribute(\"style\",\"width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;\");const o=document.createElement(\"div\");o.innerText=\"Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.\",o.setAttribute(\"style\",\"height: 12%;\");const a=document.createElement(\"div\");a.setAttribute(\"style\",\"width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;\");const c=document.createElement(\"div\");c.setAttribute(\"style\",\"display: flex; justify-content: space-between; padding: 16px 0;\");const d=document.createElement(\"button\");d.innerHTML=\"cancel\",d.setAttribute(\"style\",\"width: 85px;\"),d.onclick=()=>{document.body.removeChild(u);const e=new Error(\"NotAllowedError\");e.name=\"NotAllowedError\",n(e)};let l=t;const h=document.createElement(\"div\");if(t){const e=document.createElement(\"input\");e.setAttribute(\"type\",\"checkbox\");const t=document.createElement(\"span\");e.setAttribute(\"style\",\"margin-right: 6px;\"),t.innerText=\"Share audio\",e.checked=l,e.onchange=()=>{l=e.checked},h.appendChild(e),h.appendChild(t)}c.appendChild(h),c.appendChild(d),s.appendChild(o),s.appendChild(a),s.appendChild(c);const u=document.createElement(\"div\");u.setAttribute(\"style\",\"position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);\"),u.appendChild(r),u.appendChild(s),document.body.appendChild(u),e.map((e=>{if(e.id){const t=document.createElement(\"div\");t.setAttribute(\"style\",\"width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;\");let n=e.thumbnail;try{const{width:e}=n.getSize();e>1920&&(n=n.resize({width:1920}))}catch(e){throw e&&e.message.startsWith(\"Illegal invocation\")&&console.error(\"Operate thumbnail error, please try to set contextIsolation: false. (https://github.com/electron/electron/issues/34953)\"),e}t.innerHTML='<div style=\"height: 120px; display: table-cell; vertical-align: middle;\"><img style=\"width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\" src='+n.toDataURL()+' /></div><span style=\"\\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">'+e.name.replace(/[\\u00A0-\\u9999<>\\&]/g,(function(e){return\"&#\"+e.charCodeAt(0)+\";\"}))+\"</span>\",t.onclick=()=>{document.body.removeChild(u),i({sourceId:e.id,audio:l})},a.appendChild(t)}}))}))}(i,t);return await gA(n,e,r)}async function SA(e){let t=[\"window\",\"screen\"];\"application\"!==e&&\"window\"!==e||(t=[\"window\"]),\"screen\"===e&&(t=[\"screen\"]);const i=rT();if(!i)throw console.error(\"failed to fetch electron, please mount it to window\"),new Vg(xg.ELECTRON_IS_NULL);let n=null;try{var r;n=(null===(r=i.desktopCapturer)||void 0===r?void 0:r.getSources({types:t}))||i.ipcRenderer.invoke(\"DESKTOP_CAPTURER_GET_SOURCES\",{types:t})}catch(e){n=null}n&&n.then||(n=new tg(((e,n)=>{i.desktopCapturer.getSources({types:t},((t,i)=>{t?n(t):e(i)}))})));try{return await n}catch(e){throw new Vg(xg.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,e.toString())}}function RA(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const CA=new YT(\"safari\");let vA=!1,IA=!1;async function yA(e,t){let i=0,n=null;for(;i<2;)try{n=await AA(e,t,i>0);break}catch(e){if(e instanceof Vg)throw KC.error(\"[\".concat(t,\"] \").concat(e.toString())),e;const n=bA(e.name||e.code||e,e.message);if(n.code===xg.MEDIA_OPTION_INVALID){KC.debug(\"[\".concat(t,\"] detect media option invalid, retry\")),i+=1,await UT(500);continue}throw KC.error(\"[\".concat(t,\"] \").concat(n.toString())),n}if(!n)throw new Vg(xg.UNEXPECTED_ERROR,\"can not find stream after getUserMedia\");return n}async function AA(e,t,i){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Vg(xg.NOT_SUPPORTED,\"can not find getUserMedia\");i&&(e.video&&(delete e.video.width,delete e.video.height),e.screen&&(delete e.screen.width,delete e.screen.height));const n=_A(),r=new MediaStream;if(e.audioSource&&r.addTrack(e.audioSource),e.videoSource&&r.addTrack(e.videoSource),!e.audio&&!e.video&&!e.screen)return KC.debug(\"Using Video Source/ Audio Source\"),r;if(e.screen)if(rT())if(e.screen.sourceId){wA(r,await gA(e.screen.sourceId,e.screen,e.screenAudio))}else{wA(r,await TA(e.screen,e.screenAudio))}else if(Tg()&&e.screen.extensionId&&e.screen.mandatory){if(!n.getStreamFromExtension)throw new Vg(xg.NOT_SUPPORTED,\"This browser does not support screen sharing\");KC.debug(\"[\".concat(t,'] Screen access on chrome stable, looking for extension\"'));const i=await(o=e.screen.extensionId,a=t,new tg(((e,t)=>{try{chrome.runtime.sendMessage(o,{getStream:!0},(i=>{if(!i||!i.streamId)return KC.error(\"[\".concat(a,\"] No response from Chrome Plugin. Plugin not installed properly\"),i),void t(new Vg(xg.CHROME_PLUGIN_NO_RESPONSE,\"No response from Chrome Plugin. Plugin not installed properly\"));e(i.streamId)}))}catch(e){KC.error(\"[\".concat(a,\"] AgoraRTC screensharing plugin is not accessible(\").concat(o,\")\"),e.toString()),t(new Vg(xg.CHROME_PLUGIN_NOT_INSTALL))}})));e.screen.mandatory.chromeMediaSourceId=i;wA(r,await navigator.mediaDevices.getUserMedia({video:{mandatory:e.screen.mandatory}}))}else if(n.getDisplayMedia){var s;e.screen.mediaSource&&Py(e.screen.mediaSource);const i={width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate,displaySurface:null!==(s=e.screen.displaySurface)&&void 0!==s?s:\"screen\"===e.screen.mediaSource?\"monitor\":e.screen.mediaSource},{selfBrowserSurface:n,surfaceSwitching:o,systemAudio:a}=e.screen,c={selfBrowserSurface:n,surfaceSwitching:o,systemAudio:a};!n&&delete c.selfBrowserSurface,!o&&delete c.surfaceSwitching,!a&&delete c.systemAudio,KC.debug(\"[\".concat(t,\"] getDisplayMedia:\"),JSON.stringify({video:i,audio:!!e.screenAudio,controls:c}));const d=await navigator.mediaDevices.getDisplayMedia(function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?RA(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):RA(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({video:i,audio:!!e.screenAudio},c));wA(r,d)}else{if(!Rg())throw KC.error(\"[\".concat(t,\"] This browser does not support screenSharing\")),new Vg(xg.NOT_SUPPORTED,\"This browser does not support screen sharing\");{e.screen.mediaSource&&Py(e.screen.mediaSource);const i={video:{mediaSource:e.screen.mediaSource,width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate}};KC.debug(\"[\".concat(t,\"] getUserMedia: \").concat(JSON.stringify(i)));wA(r,await navigator.mediaDevices.getUserMedia(i))}}var o,a;if(!e.video&&!e.audio)return r;let c={video:e.video,audio:e.audio},d=kC(\"MEDIA_DEVICE_CONSTRAINTS\");if(d)try{\"string\"==typeof d&&(d=JSON.parse(d)),c=WT(c,d)}catch(e){}KC.debug(\"[\".concat(t,\"] GetUserMedia\"),JSON.stringify(c)),pg();let l,h=null;(Sg()||Cg()||mg())&&(h=await CA.lock());try{l=await navigator.mediaDevices.getUserMedia(c)}catch(e){throw h&&h(),e}return c.audio&&(vA=!0),c.video&&(IA=!0),wA(r,l),h&&h(),r}function bA(e,t){switch(e){case\"Starting video failed\":case\"OverconstrainedError\":case\"TrackStartError\":return new Vg(xg.MEDIA_OPTION_INVALID,\"\".concat(e,\": \").concat(t));case\"NotFoundError\":case\"DevicesNotFoundError\":return new Vg(xg.DEVICE_NOT_FOUND,\"\".concat(e,\": \").concat(t));case\"NotSupportedError\":return new Vg(xg.NOT_SUPPORTED,\"\".concat(e,\": \").concat(t));case\"NotReadableError\":return new Vg(xg.NOT_READABLE,\"\".concat(e,\": \").concat(t));case\"InvalidStateError\":case\"NotAllowedError\":case\"PERMISSION_DENIED\":case\"PermissionDeniedError\":return new Vg(xg.PERMISSION_DENIED,\"\".concat(e,\": \").concat(t));case\"ConstraintNotSatisfiedError\":return new Vg(xg.CONSTRAINT_NOT_SATISFIED,\"\".concat(e,\": \").concat(t));default:return KC.error(\"getUserMedia unexpected error\",e),new Vg(xg.UNEXPECTED_ERROR,\"\".concat(e,\": \").concat(t))}}function wA(e,t){const i=e.getVideoTracks()[0],n=e.getAudioTracks()[0],r=t.getVideoTracks()[0],s=t.getAudioTracks()[0];s&&(n&&e.removeTrack(n),e.addTrack(s)),r&&(i&&e.removeTrack(i),e.addTrack(r))}const OA=new class extends iT{get state(){return this._state}set state(e){e!==this._state&&(this.emit(Qy.STATE_CHANGE,e),this._state=e)}constructor(){super(),nu(this,\"_state\",Xy.IDLE),nu(this,\"isAccessMicrophonePermission\",!1),nu(this,\"isAccessCameraPermission\",!1),nu(this,\"lastAccessMicrophonePermission\",!1),nu(this,\"lastAccessCameraPermission\",!1),nu(this,\"checkdeviceMatched\",!1),nu(this,\"deviceInfoMap\",new Map),this.init().then((()=>{navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener(\"devicechange\",this.updateDevicesInfo.bind(this)),window.setInterval((()=>{(kC(\"ENUMERATE_DEVICES_INTERVAL\")||(Mg()||_g()===ag.HARMONY_OS)&&kg())&&this.updateDevicesInfo()}),kC(\"ENUMERATE_DEVICES_INTERVAL_TIME\"))})).catch((e=>KC.error(e.toString())))}async enumerateDevices(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices){return new Vg(xg.NOT_SUPPORTED,\"enumerateDevices() not supported.\").throw()}const n=await navigator.mediaDevices.enumerateDevices(),r=this.checkMediaDeviceInfoIsOk(n);let s=!this.isAccessMicrophonePermission&&e,o=!this.isAccessCameraPermission&&t;r.audio&&(s=!1),r.video&&(o=!1);let a=null,c=null,d=null;if(!i&&(s||o)){if(CA.isLocked){KC.debug(\"[device manager] wait GUM lock\");(await CA.lock())(),KC.debug(\"[device manager] GUM unlock\")}if(vA&&(s=!1,this.isAccessMicrophonePermission=!0),IA&&(o=!1,this.isAccessCameraPermission=!0),KC.debug(\"[device manager] check media device permissions\",e,t,s,o),s&&o){try{d=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(e){const t=bA(e.name||e.code||e,e.message);if(t.code===xg.PERMISSION_DENIED)throw t;KC.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0,this.isAccessMicrophonePermission=!0}else if(s){try{a=await navigator.mediaDevices.getUserMedia({audio:e})}catch(e){const t=bA(e.name||e.code||e,e.message);if(t.code===xg.PERMISSION_DENIED)throw t;KC.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessMicrophonePermission=!0}else if(o){try{c=await navigator.mediaDevices.getUserMedia({video:t})}catch(e){const t=bA(e.name||e.code||e,e.message);if(t.code===xg.PERMISSION_DENIED)throw t;KC.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0}KC.debug(\"[device manager] mic permission\",e,\"cam permission\",t)}try{const e=await navigator.mediaDevices.enumerateDevices();return a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null,e}catch(e){a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null;return new Vg(xg.ENUMERATE_DEVICES_FAILED,e.toString()).throw()}}async getRecordingDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audioinput\"===e.kind))}async getCamerasDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!1,!0,e)).filter((e=>\"videoinput\"===e.kind))}async getSpeakers(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audiooutput\"===e.kind))}searchDeviceIdByName(e){let t=null;return this.deviceInfoMap.forEach((i=>{i.device.label===e&&(t=i.device.deviceId)})),t}async getDeviceById(e){const t=(await this.enumerateDevices(!0,!0,!0)).find((t=>t.deviceId===e));if(!t)throw new Vg(xg.DEVICE_NOT_FOUND,\"deviceId: \".concat(e));return t}async init(){this.state=Xy.INITING;try{await this.updateDevicesInfo(),this.state=Xy.INITEND}catch(e){if(KC.warning(\"Device Detection functionality cannot start properly.\",e.toString()),this.state=Xy.IDLE,!(\"boolean\"==typeof isSecureContext?isSecureContext:\"https:\"===location.protocol||\"file:\"===location.protocol||\"localhost\"===location.hostname||\"127.0.0.1\"===location.hostname||\"::1\"===location.hostname)){new Vg(xg.WEB_SECURITY_RESTRICT,\"Your context is limited by web security, please try using https protocol or localhost.\").throw()}throw e}}async updateDevicesInfo(){const e=await this.enumerateDevices(!0,!0,!0),t=Date.now(),i=[];if(e[0]&&e[0].label&&!1===this.checkdeviceMatched){this.checkdeviceMatched=!0;const t=e.find((e=>\"audioinput\"===e.kind&&\"default\"===e.deviceId)),i=e.find((e=>\"audiooutput\"===e.kind&&\"default\"===e.deviceId));t&&i?i.groupId===t.groupId?KC.debug(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is the same group\")):KC.warning(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is not the same group\")):KC.debug(\"[device-check] default input or output not found\")}const n=this.checkMediaDeviceInfoIsOk(e);if(e.forEach((e=>{if(!e.deviceId)return;const n=this.deviceInfoMap.get(\"\".concat(e.kind,\"_\").concat(e.deviceId));if(\"ACTIVE\"!==(n?n.state:\"INACTIVE\")){const n={initAt:t,updateAt:t,device:e,state:\"ACTIVE\"};this.deviceInfoMap.set(\"\".concat(e.kind,\"_\").concat(e.deviceId),n),i.push(n)}n&&(n.updateAt=t)})),this.deviceInfoMap.forEach(((e,n)=>{\"ACTIVE\"===e.state&&e.updateAt!==t&&(e.state=\"INACTIVE\",i.push(e))})),this.state!==Xy.INITEND)return n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));i.forEach((e=>{switch(e.device.kind){case\"audioinput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(Qy.RECORDING_DEVICE_CHANGED,e);break;case\"videoinput\":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&this.emit(Qy.CAMERA_DEVICE_CHANGED,e);break;case\"audiooutput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(Qy.PLAYOUT_DEVICE_CHANGED,e)}})),n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(e){const t=e.filter((e=>\"audioinput\"===e.kind)),i=e.filter((e=>\"videoinput\"===e.kind)),n={audio:!1,video:!1};for(const e of t)if(e.label&&e.deviceId){n.audio=!0;break}for(const e of i)if(e.label&&e.deviceId){n.video=!0;break}return n}};let NA=!1;const DA=new class extends iT{constructor(){super(...arguments),nu(this,\"onAutoplayFailed\",void 0),nu(this,\"onAudioAutoplayFailed\",void 0)}};function PA(){if(pg(),!NA){const e=t=>{t.preventDefault(),NA=!1,Ug()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};NA=!0,Ug()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),KC.info(\"detect media autoplay failed, document: https://docs.agora.io/cn/Voice/autoplay_policy_web_ng?platform=Web\"),DA.onAutoplayFailed?DA.onAutoplayFailed():DA.onAudioAutoplayFailed?KC.warning(\"AgoraRTC.onAudioAutoplayFailed has been deprecated in favor of AgoraRTC.onAutoplayFailed.\\n\\n  Please refer to the Agora document to migrate the newer API, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"):KC.warning(\"We have detected a media autoplay failed event, and found out that you haven't implemented AgoraRTC.onAutoplayFailed callback yet.\\n\\n  It will cause audio/video element not playing automatically on some browsers without user interaction, possibly hurting user experiences.\\n\\n  Please refer to the Agora document to properly handle autoplay failed event, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"),DA.emit(\"autoplay-failed\")}}function LA(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function kA(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?LA(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):LA(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function MA(e,t,i,n){if(!e)return;const r=rv.getBaseInfoBySessionId(e);if(!r)return;const s=r.info,o=Date.now(),a=kA(kA({},s),{},{vid:void 0===s.vid?0:Number(s.vid),lts:o,elapse:o-r.startTime,cbRegistered:DA.onAutoplayFailed||DA.onAudioAutoplayFailed?1:-1,errorMsg:i,mediaType:t,trackId:n,extend:void 0});rv.send({type:QC.AUTOPLAY_FAILED,data:a},!0)}const UA=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"error\"],xA=new class{constructor(){nu(this,\"onAutoplayFailed\",void 0),nu(this,\"elementMap\",new Map),nu(this,\"elementStateMap\",new Map),nu(this,\"elementsNeedToResume\",[]),nu(this,\"sinkIdMap\",new Map),nu(this,\"autoResumeAfterInterruption\",(()=>{Array.from(this.elementMap.entries()).forEach((e=>{let[t,i]=e;const n=this.elementStateMap.get(t),r=i.srcObject.getAudioTracks()[0];wg()?r&&\"live\"===r.readyState&&\"running\"===oA.curState&&(KC.debug(\"auto resume after interruption for iOS 15\"),i.pause(),i.play()):n&&\"paused\"===n&&r&&\"live\"===r.readyState&&\"running\"===oA.curState&&(KC.debug(\"auto resume after interruption for iOS\"),i.play())}))})),nu(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{Array.from(this.elementMap.entries()).forEach((e=>{let[t,i]=e;const n=i.srcObject.getAudioTracks()[0];n&&\"live\"===n.readyState&&(KC.debug(\"auto resume after interruption inside autoResumeAfterInterruptionOnIOS15\"),i.pause(),i.play())}))})),this.autoResumeAudioElement(),oA.on(uy.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),oA.on(uy.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),oA.on(uy.STATE_CHANGE,(()=>{Cg()&&\"suspended\"===oA.prevState&&\"running\"===oA.curState&&this.autoResumeAfterInterruption()}))}async setSinkID(e,t){const i=this.elementMap.get(e);if(this.sinkIdMap.set(e,t),i)try{await i.setSinkId(t)}catch(e){throw new Vg(xg.PERMISSION_DENIED,\"can not set sink id: \"+e.toString())}}play(e,t,i,n){if(this.elementMap.has(t))return;const r=document.createElement(\"audio\");r.autoplay=!0,r.srcObject=new MediaStream([e]),this.bindAudioElementEvents(t,r),this.elementMap.set(t,r),this.elementStateMap.set(t,Zy.INIT),this.setVolume(t,i);const s=this.sinkIdMap.get(t);if(s)try{r.setSinkId(s).catch((e=>{KC.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}))}catch(e){KC.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}const o=r.play();o&&o.then&&o.catch((e=>{n&&MA(n,\"audio\",e.message,t),KC.warning(\"audio element play warning\",e.toString()),this.elementMap.has(t)&&\"NotAllowedError\"===e.name&&(KC.warning(\"detected audio element autoplay failed\"),this.elementsNeedToResume.push(r),AT((()=>{this.onAutoplayFailed&&this.onAutoplayFailed(),PA()})))}))}updateTrack(e,t){const i=this.elementMap.get(e);i&&(i.srcObject=new MediaStream([t]))}isPlaying(e){return this.elementMap.has(e)&&\"playing\"===this.elementStateMap.get(e)}setVolume(e,t){const i=this.elementMap.get(e);i&&(t=Math.max(0,Math.min(100,t)),i.volume=t/100)}stop(e){const t=this.elementMap.get(e);if(this.sinkIdMap.delete(e),!t)return;const i=this.elementsNeedToResume.indexOf(t);this.elementsNeedToResume.splice(i,1),t.srcObject=null,t.remove(),this.elementMap.delete(e),this.elementStateMap.delete(e)}bindAudioElementEvents(e,t){UA.forEach((i=>{t.addEventListener(i,(i=>{const n=this.elementStateMap.get(e),r=\"pause\"===i.type?\"paused\":i.type;if(KC.debug(\"[\".concat(e,\"] audio-element-status change \").concat(n,\" => \").concat(r)),\"error\"===i.type){const i=null==t?void 0:t.error;i&&KC.error(\"[\".concat(e,\"] media error, code: \").concat(i.code,\", message: \").concat(i.message))}this.elementStateMap.set(e,r)}))}))}getPlayerState(e){return this.elementStateMap.get(e)||\"uninit\"}autoResumeAudioElement(){const e=()=>{this.elementsNeedToResume.forEach((e=>{e.play().then((e=>{KC.debug(\"Auto resume audio element success\")})).catch((e=>{KC.warning(\"Auto resume audio element failed!\",e)}))})),this.elementsNeedToResume=[]};new tg((e=>{document.body?e():window.addEventListener(\"load\",(()=>e()))})).then((()=>{Ug()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0))}))}};function VA(){return function(e,t,i){const n=i.value;return\"function\"==typeof n&&(i.value=function(){this._isClosed&&new Vg(xg.INVALID_OPERATION,\"[\".concat(this.getTrackId(),\"] cannot operate a closed track\")).print(\"warning\",KC);for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=n.apply(this,t);return r instanceof tg?new tg(((e,t)=>{r.then(e).catch(t)})):r}),i}}function FA(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function BA(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?FA(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):FA(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class jA extends iT{constructor(e){super(),nu(this,\"name\",\"VideoProcessorDestination\"),nu(this,\"ID\",\"0\"),nu(this,\"_source\",void 0),nu(this,\"videoContext\",void 0),nu(this,\"inputTrack\",void 0),this.videoContext=e}get kind(){return\"video\"}get enabled(){return!0}pipe(){throw new Vg(xg.NOT_SUPPORTED,\"VideoProcessor cannot pipe to any other Processor\")}unpipe(){throw new Vg(xg.NOT_SUPPORTED,\"VideoProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}updateInput(e){if(e.context!==this.videoContext)throw new Error(\"ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\\nProbably you are making pipeline like this:\\nvideoTrack1.pipe(processor).pipe(videoTrack2.processorDestination).\");e.track&&e.track!==this.inputTrack&&(this.videoContext.chained=!0,this.inputTrack=e.track,this.emit(Jy.ON_TRACK,e.track))}reset(){this.inputTrack=void 0,this.videoContext.chained=!1,this.emit(Jy.ON_TRACK,void 0)}}class GA extends iT{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t){super(),nu(this,\"constraintsMap\",new Map),nu(this,\"statsRegistry\",[]),nu(this,\"usageRegistry\",[]),nu(this,\"trackId\",void 0),nu(this,\"direction\",void 0),nu(this,\"_chained\",!1),this.trackId=e,this.direction=t}async getConstraints(){return await fT(this,zy.REQUEST_CONSTRAINTS)}async requestApplyConstraints(e,t){var i;return KC.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),gT(this,zy.REQUEST_UPDATE_CONSTRAINTS,Array.from(kv(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return KC.info(\"processor \".concat(e.name,\" requestRevertConstraints for \").concat(this.trackId)),this.constraintsMap.delete(e),gT(this,zy.REQUEST_UPDATE_CONSTRAINTS,Array.from(kv(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const s=r();e.push({processorID:t,processorName:i,type:n,stats:s})}catch(e){KC.error(new Vg(xg.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof tg&&(i=await i),e.push(BA(BA({},i),{},{direction:this.direction}))}catch(e){KC.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class WA extends iT{constructor(e){super(),nu(this,\"name\",\"AudioProcessorDestination\"),nu(this,\"ID\",\"0\"),nu(this,\"inputTrack\",void 0),nu(this,\"inputNode\",void 0),nu(this,\"audioProcessorContext\",void 0),nu(this,\"_source\",void 0),this.audioProcessorContext=e}get kind(){return\"audio\"}get enabled(){return!0}pipe(){throw new Vg(xg.NOT_SUPPORTED,\"AudioProcessorDestination cannot pipe to any other Processor\")}unpipe(){throw new Vg(xg.NOT_SUPPORTED,\"AudioProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}reset(){this.inputTrack=void 0,this.inputNode=void 0,this.audioProcessorContext.chained=!1,this.emit(Jy.ON_TRACK,void 0),this.emit(Jy.ON_NODE,void 0)}updateInput(e){if(e.context!==this.audioProcessorContext)throw new Error(\"ProcessorContext passed to AudioTrack.processorDestination doesn't match it's belonging AudioTrack's context.\\n        Probably you are making pipeline like this: audioTrack1.pipe(processor).pipe(audioTrack2.processorDestination).\");e.track&&this.inputTrack!==e.track&&(this.audioProcessorContext.chained=!0,this.inputTrack=e.track,this.emit(Jy.ON_TRACK,this.inputTrack)),e.node&&this.inputNode!==e.node&&(this.audioProcessorContext.chained=!0,this.inputNode=e.node,this.emit(Jy.ON_NODE,this.inputNode))}}class HA extends iT{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t,i){super(),nu(this,\"constraintsMap\",new Map),nu(this,\"statsRegistry\",[]),nu(this,\"audioContext\",void 0),nu(this,\"trackId\",void 0),nu(this,\"direction\",void 0),nu(this,\"usageRegistry\",[]),nu(this,\"_chained\",!1),this.audioContext=e,this.trackId=t,this.direction=i}async getConstraints(){return fT(this,zy.REQUEST_CONSTRAINTS)}getAudioContext(){return this.audioContext}async requestApplyConstraints(e,t){var i;return KC.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),gT(this,zy.REQUEST_UPDATE_CONSTRAINTS,Array.from(kv(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return this.constraintsMap.delete(e),gT(this,zy.REQUEST_UPDATE_CONSTRAINTS,Array.from(kv(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const s=r();e.push({processorID:t,processorName:i,type:n,stats:s})}catch(e){KC.error(new Vg(xg.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof tg&&(i=await i),e.push(BA(BA({},i),{},{direction:this.direction}))}catch(e){KC.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class KA extends iT{get isPlayed(){return!0}get isFreeze(){return!1}constructor(){super(),nu(this,\"context\",void 0),nu(this,\"processSourceNode\",void 0),nu(this,\"outputTrack\",void 0),nu(this,\"processedNode\",void 0),nu(this,\"clonedTrack\",void 0),nu(this,\"outputNode\",void 0),this.outputNode=new YA}setVolume(){}createOutputTrack(){throw new Vg(xg.NOT_SUPPORTED,\"can not create output MediaStreamTrack when WebAudio disabled\")}getOriginVolumeLevel(){return 0}getAccurateVolumeLevel(){return 0}stopGetAudioBuffer(){}startGetAudioBuffer(){}play(){}stop(){}destroy(){}updateTrack(){}updateOriginTrack(){}createMediaStreamSourceNode(){}}class YA{disconnect(){}connect(){}}let qA=null;class JA{constructor(){nu(this,\"state\",\"open\"),nu(this,\"trigger\",void 0),nu(this,\"tasks\",[]),KC.debug(\"[macro-task-queue] is created.\"),this.trigger=window.setTimeout((()=>{this.state=\"closed\",KC.debug(\"[macro-task-queue] will be closed, all remaining tasks will execute. [\".concat(this.tasks.map((e=>e.key)),\"]\")),this.trigger=void 0,this.tasks.forEach((e=>{let{func:t}=e;return t()})),this.tasks.length=0,KC.debug(\"[macro-task-queue] is closed.\")}))}enqueue(e,t){\"closed\"!==this.state&&(this.tasks.push({key:e,func:t}),KC.debug(\"[macro-task-queue] is queued, current queue \".concat(this.tasks.length,\". \").concat(\"string\"==typeof e?e:\"\")))}runTask(e){if(\"closed\"===this.state)return;const t=this.tasks.findIndex((t=>t.key===e));if(-1!==t){const i=this.tasks.splice(t,1);KC.debug(\"[macro-task-queue] is unqueued, current queue \".concat(this.tasks.length,\". \").concat(\"string\"==typeof e?e:\"\")),i[0].func()}}release(){this.trigger&&(this.state=\"closed\",clearTimeout(this.trigger),this.trigger=void 0,this.tasks.length=0,KC.debug(\"[macro-task-queue] is closed.\"))}}function zA(e){return function(t,i,n){var r;const s=null!==(r=n.value)&&void 0!==r?r:n.get,o=function(){qA&&\"open\"===qA.state&&qA.runTask(e);for(var t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];return null==s?void 0:s.apply(this,...i)};return n.value?n.value=o:n.get=o,n}}function XA(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function QA(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?XA(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):XA(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class ZA extends iA{get _source(){return this._trackSource}set _source(e){this._trackSource=e}get processorContext(){return this._processorContext}set processorContext(e){this._processorContext=e}get processorDestination(){return this._processorDestination}set processorDestination(e){this._processorDestination=e}get isPlaying(){return this._useAudioElement?xA.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"LocalAudioTrack\"}constructor(e,t,i,n,r){super(e,i),nu(this,\"trackMediaType\",\"audio\"),nu(this,\"_encoderConfig\",void 0),nu(this,\"_trackSource\",void 0),nu(this,\"_enabled\",!0),nu(this,\"_volume\",100),nu(this,\"_useAudioElement\",!1),nu(this,\"_bypassWebAudio\",!1),nu(this,\"processor\",void 0),nu(this,\"_processorContext\",void 0),nu(this,\"_processorDestination\",void 0),nu(this,\"_getOriginVolumeLevel\",void 0),this._encoderConfig=t,this._getOriginVolumeLevel=!!n;const s=()=>{this.processorContext=new HA(this._source.context,this.getTrackId(),\"local\"),this.processorDestination=new WA(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(jy.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})}))},o=r&&Sg()&&!dA();if(kC(\"DISABLE_WEBAUDIO\")?(this._source=new KA,this._useAudioElement=!0,this._bypassWebAudio=!0):o?this._source=new KA:(this._source=new fA(e,!1,this._getOriginVolumeLevel?e:void 0),kC(\"LOCAL_AUDIO_TRACK_USES_WEB_AUDIO\")||(this._useAudioElement=!0)),s(),!kC(\"DISABLE_WEBAUDIO\")&&o){(qA||(qA=new JA),qA).enqueue(\"INIT_WEBAUDIO\",(()=>{this._source=new fA(e,!1,this._getOriginVolumeLevel?e:void 0),kC(\"LOCAL_AUDIO_TRACK_USES_WEB_AUDIO\")||(this._useAudioElement=!0),s(),this.emit(Gy.UPDATE_TRACK_SOURCE)}))}}setVolume(e){jg(e,\"volume\",0,1e3),this._volume=e,this._source.setVolume(e/100),this._useAudioElement&&xA.setVolume(this.getTrackId(),e);try{if(this._bypassWebAudio)return void KC.debug(\"[\".concat(this.getTrackId(),\"] setVolume returned because no pass through WebAudio.\"));const e=this._source.createOutputTrack();this._mediaStreamTrack!==e&&(this._mediaStreamTrack=e,gT(this,Ly.NEED_REPLACE_TRACK,this).then((()=>{KC.debug(\"[\".concat(this.getTrackId(),\"] replace web audio track success\"))})).catch((e=>{KC.warning(\"[\".concat(this.getTrackId(),\"] replace web audio track failed\"),e)})))}catch(e){}}getVolumeLevel(){return this._muted&&this.enabled&&this._getOriginVolumeLevel?this._source.getOriginVolumeLevel():this._source.getAccurateVolumeLevel()}async setPlaybackDevice(e){if(!this._useAudioElement)throw new Vg(xg.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await xA.setSinkID(this.getTrackId(),e)}async setEnabled(e,t,i){return this._setEnabled(e,t,i)}async _setEnabled(e,t,i){if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(KC.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){this._originMediaStreamTrack.enabled=!0;try{i||(this._enabled=!0),await gT(this,Ly.NEED_ENABLE_TRACK,this),KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled to \").concat(e,\" success\"))}catch(e){throw i||(this._enabled=!1),KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}}else{this._originMediaStreamTrack.enabled=!1,i||(this._enabled=!1);try{await gT(this,Ly.NEED_DISABLE_TRACK,this)}catch(e){throw i||(this._enabled=!0),KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}}}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,KC.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await gT(this,Ly.NEED_MUTE_TRACK,this):await gT(this,Ly.NEED_UNMUTE_TRACK,this))}getStats(){NT((()=>{KC.warning(\"[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead\")}),\"localAudioTrackGetStatsWarning\");const e=TT(this,Ly.GET_STATS);return e||QA({},Wy)}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(jy.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(jy.ON_AUDIO_BUFFER),this._source.on(jy.ON_AUDIO_BUFFER,(t=>e(t)))}play(){KC.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._useAudioElement?(KC.debug(\"[\".concat(this.getTrackId(),\"] start audio playback in element\")),xA.play(this._mediaStreamTrack,this.getTrackId(),this._volume)):this._source.play()}stop(){KC.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._useAudioElement?xA.stop(this.getTrackId()):this._source.stop()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe(),this._source.destroy()}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];KC.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&xA.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(e,t){this._originMediaStreamTrack!==e&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this.processor&&this.processor.updateInput({track:e,context:this.processorContext}),this._mediaStreamTrack!==this._source.outputTrack?(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await gT(this,Ly.NEED_REPLACE_TRACK,this)):this._source.updateTrack(this._originMediaStreamTrack),this._getOriginVolumeLevel&&this._source.updateOriginTrack(e))}renewMediaStreamTrack(e){return tg.resolve(void 0)}pipe(e){if(this._bypassWebAudio)throw new Vg(xg.INVALID_OPERATION,\"Can not process AudioTrack when bypassWebAudio set to true.\");if(this.processor===e)return e;if(e._source)throw new Vg(xg.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(Jy.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e),await gT(this,Ly.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await gT(this,Ly.NEED_REPLACE_TRACK,this))})),this.processorDestination.on(Jy.ON_NODE,(e=>{this._source.processedNode=e}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(Jy.ON_TRACK),this.processorDestination.removeAllListeners(Jy.ON_NODE)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(zy.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(zy.REQUEST_CONSTRAINTS)}}Mv([zA(\"INIT_WEBAUDIO\"),Uv(\"design:type\",Object),Uv(\"design:paramtypes\",[Object])],ZA.prototype,\"_source\",null),Mv([zA(\"INIT_WEBAUDIO\"),Uv(\"design:type\",HA),Uv(\"design:paramtypes\",[HA])],ZA.prototype,\"processorContext\",null),Mv([zA(\"INIT_WEBAUDIO\"),Uv(\"design:type\",WA),Uv(\"design:paramtypes\",[WA])],ZA.prototype,\"processorDestination\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"setVolume\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],ZA.prototype,\"setPlaybackDevice\",null),Mv([qT(\"LocalAudioTrack\",\"_enabledMutex\"),nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Object,Boolean]),Uv(\"design:returntype\",tg)],ZA.prototype,\"setEnabled\",null),Mv([qT(\"LocalAudioTrack\",\"_enabledMutex\"),nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean]),Uv(\"design:returntype\",tg)],ZA.prototype,\"setMuted\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",Object)],ZA.prototype,\"getStats\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Number]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"setAudioFrameCallback\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"play\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"stop\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"close\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",Object)],ZA.prototype,\"pipe\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],ZA.prototype,\"unpipe\",null);class $A extends ZA{get __className__(){return\"MicrophoneAudioTrack\"}constructor(e,t,i,n){super(e,t.encoderConfig?Ny(t.encoderConfig):{},n,kC(\"GET_VOLUME_OF_MUTED_AUDIO_TRACK\"),!0),nu(this,\"_config\",void 0),nu(this,\"_deviceName\",\"default\"),nu(this,\"_constraints\",void 0),nu(this,\"_originalConstraints\",void 0),nu(this,\"_enabled\",!0),this._config=t,this._constraints=i,this._originalConstraints=i,this._deviceName=e.label,\"boolean\"==typeof t.bypassWebAudio&&(this._bypassWebAudio=t.bypassWebAudio),(wg()||Og())&&oA.bindInterruptDetectorTrack(this),this.on(Gy.UPDATE_TRACK_SOURCE,(()=>{this.bindProcessorContextEvents()})),dA()&&this.bindProcessorContextEvents()}async setDevice(e){if(KC.info(\"[\".concat(this.getTrackId(),\"] start set device to \").concat(e)),this._enabled)try{const t=await OA.getDeviceById(e),i={};i.audio=QA({},this._constraints),i.audio.deviceId={exact:e},this._originMediaStreamTrack.stop();let n=null;try{n=await yA(i,this.getTrackId())}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await yA({audio:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await OA.getDeviceById(e);this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e,\" success\"))}async setEnabled(e,t,i){if(t)return KC.debug(\"[\".concat(this.getTrackId(),\"] setEnabled false (do not close microphone)\")),await super._setEnabled(e);if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(KC.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),!e){var n;this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),null===(n=this._source.clonedTrack)||void 0===n||n.stop(),i||(this._enabled=!1);try{await gT(this,Ly.NEED_DISABLE_TRACK,this)}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled false failed\"),e.toString()),e}return}const r=QA({},this._constraints),s=OA.searchDeviceIdByName(this._deviceName);s&&!r.deviceId&&(r.deviceId=s);try{i||(this._enabled=!0);const e=await yA({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),await gT(this,Ly.NEED_ENABLE_TRACK,this)}catch(e){throw i||(this._enabled=!1),KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled true failed\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled success\"))}close(){super.close(),(wg()||Og())&&oA.unbindInterruptDetectorTrack(this)}onTrackEnded(){if((Cg()||Dg())&&this._enabled&&!this._isClosed&&oA.duringInterruption){const e=async()=>{oA.off(uy.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(KC.debug(\"[\".concat(this.getTrackId(),\"] try capture microphone media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};oA.on(uy.IOS_INTERRUPTION_END,e)}else KC.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(Fy.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=OA.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId=i),this._constraints=t,this._enabled){this._originMediaStreamTrack.stop();const e=await yA({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!0)}}bindProcessorContextEvents(){this.processorContext.on(zy.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}})),this.processorContext.on(zy.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}}Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],$A.prototype,\"setDevice\",null),Mv([qT(\"MicrophoneAudioTrack\",\"_enabledMutex\"),nv({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Boolean,Boolean]),Uv(\"design:returntype\",tg)],$A.prototype,\"setEnabled\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],$A.prototype,\"close\",null);class eb extends ZA{get __className__(){return\"BufferSourceAudioTrack\"}constructor(e,t,i,n){super(t.createOutputTrack(),i,n),nu(this,\"source\",void 0),nu(this,\"_bufferSource\",void 0),this.source=e,this._bufferSource=t,this._bufferSource.on(jy.AUDIO_SOURCE_STATE_CHANGE,(e=>{this.safeEmit(Fy.SOURCE_STATE_CHANGE,e)}));try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}get playbackSpeed(){return this._bufferSource.playbackSpeed}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(e){e&&this._bufferSource.updateOptions(e),this._bufferSource.startProcessAudioBuffer()}pauseProcessAudioBuffer(){this._bufferSource.pauseProcessAudioBuffer()}seekAudioBuffer(e){this._bufferSource.seekAudioBuffer(e)}resumeProcessAudioBuffer(){this._bufferSource.resumeProcessAudioBuffer()}stopProcessAudioBuffer(){this._bufferSource.stopProcessAudioBuffer()}close(){this.source=null,this._bufferSource.destroy(),super.close()}setAudioBufferPlaybackSpeed(e){jg(e,\"speed\",0),this._bufferSource.setAudioBufferPlaybackSpeed(e)}}Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t,e.duration]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",void 0)],eb.prototype,\"startProcessAudioBuffer\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],eb.prototype,\"pauseProcessAudioBuffer\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",void 0)],eb.prototype,\"seekAudioBuffer\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],eb.prototype,\"resumeProcessAudioBuffer\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],eb.prototype,\"stopProcessAudioBuffer\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],eb.prototype,\"close\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",void 0)],eb.prototype,\"setAudioBufferPlaybackSpeed\",null);class tb extends ZA{get __className__(){return\"MixingAudioTrack\"}get isActive(){for(const e of this.trackList)if(e._enabled&&!e._isClosed&&!e.muted)return!0;return!1}constructor(){const e=cA().createMediaStreamDestination();super(e.stream.getAudioTracks()[0],void 0,xT(8,\"track-mix-\")),nu(this,\"trackList\",void 0),nu(this,\"destNode\",void 0);try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}this.destNode=e,this.trackList=[]}hasAudioTrack(e){return-1!==this.trackList.indexOf(e)}addAudioTrack(e){-1===this.trackList.indexOf(e)?(KC.debug(\"add \".concat(e.getTrackId(),\" to mixing track\")),e._source.outputNode.connect(this.destNode),this.trackList.push(e),this.updateEncoderConfig()):KC.debug(\"track \".concat(e.getTrackId(),\" is already added\"))}removeAudioTrack(e){if(-1!==this.trackList.indexOf(e)){KC.debug(\"remove \".concat(e.getTrackId(),\" from mixing track\"));try{e._source.outputNode.disconnect(this.destNode)}catch(e){}IT(this.trackList,e),this.updateEncoderConfig()}}updateEncoderConfig(){const e={};this.trackList.forEach((t=>{t._encoderConfig&&((t._encoderConfig.bitrate||0)>(e.bitrate||0)&&(e.bitrate=t._encoderConfig.bitrate),(t._encoderConfig.sampleRate||0)>(e.sampleRate||0)&&(e.sampleRate=t._encoderConfig.sampleRate),(t._encoderConfig.sampleSize||0)>(e.sampleSize||0)&&(e.sampleSize=t._encoderConfig.sampleSize),t._encoderConfig.stereo&&(e.stereo=!0))})),this._encoderConfig=e}_updateRtpTransceiver(e){this._rtpTransceiver!==e&&(this._rtpTransceiver=e,this.trackList.forEach((t=>{t instanceof tb?t.emit(Vy.TRANSCEIVER_UPDATED,e):t._updateRtpTransceiver(e)})))}}function ib(e){const t={};e.facingMode&&(t.facingMode=e.facingMode),e.cameraId&&(t.deviceId={exact:e.cameraId});const i=Ay(e.encoderConfig);return null!=i.width&&(t.width=i.width),null!=i.height&&(t.height=i.height),!Lg()&&i.frameRate&&(t.frameRate=i.frameRate),pg().name===cg.EDGE&&\"object\"==typeof t.frameRate&&(t.frameRate.max=60),Rg()&&(t.frameRate={ideal:30,max:30}),t}function nb(e){const t={};if(Lg()||(void 0!==e.AGC&&(t.autoGainControl=e.AGC),void 0!==e.AEC&&(t.echoCancellation=e.AEC),void 0!==e.ANS&&(t.noiseSuppression=e.ANS,Tg()&&e.ANS&&(t.googHighpassFilter=e.ANS))),e.encoderConfig){const i=Ny(e.encoderConfig);t.channelCount=i.stereo?2:1,t.sampleRate=i.sampleRate,t.sampleSize=i.sampleSize}return e.microphoneId&&(t.deviceId={exact:e.microphoneId}),Mg()&&(t.sampleRate=void 0),t}class rb extends mA{set currentState(e){e!==this._currentState&&(this._currentState=e,this.safeEmit(jy.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),nu(this,\"audioBuffer\",void 0),nu(this,\"sourceNode\",void 0),nu(this,\"startPlayTime\",0),nu(this,\"startPlayOffset\",0),nu(this,\"pausePlayTime\",0),nu(this,\"options\",void 0),nu(this,\"currentLoopCount\",0),nu(this,\"currentPlaybackSpeed\",100),nu(this,\"_currentState\",\"stopped\"),this.audioBuffer=e,this.options=t,this.startPlayOffset=this.options.startPlayTime||0}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer?this.audioBuffer.duration:0}get playbackSpeed(){return this.currentPlaybackSpeed}get currentTime(){return this.audioBuffer?\"stopped\"===this.currentState?0:\"paused\"===this.currentState?this.pausePlayTime:((this.context.currentTime-this.startPlayTime)*(this.playbackSpeed/100)+this.startPlayOffset)%this.audioBuffer.duration:0}updateOptions(e){\"stopped\"===this.currentState?(this.options=e,this.startPlayOffset=this.options.startPlayTime||0):KC.warning(\"can not set audio source options\")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer(),this.sourceNode=this.createSourceNode(),this.startSourceNode(),this.currentState=\"playing\"}pauseProcessAudioBuffer(){this.sourceNode&&\"playing\"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState=\"paused\")}seekAudioBuffer(e){this.sourceNode&&(this.sourceNode.onended=null,\"playing\"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),\"playing\"===this.currentState?(this.startPlayOffset=e,this.startSourceNode()):\"paused\"===this.currentState&&(this.pausePlayTime=e))}resumeProcessAudioBuffer(){\"paused\"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState=\"playing\")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(e){}this.reset()}}destroy(){this.audioBuffer=null,super.destroy()}setAudioBufferPlaybackSpeed(e){this.sourceNode&&(\"playing\"===this.currentState&&(this.startPlayOffset=this.currentTime,this.startPlayTime=this.context.currentTime),this.sourceNode.playbackRate.value=e/100),this.currentPlaybackSpeed=e}startSourceNode(){this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=this.handleSourceNodeEnded.bind(this))}createSourceNode(){const e=this.context.createBufferSource();return e.buffer=this.audioBuffer,e.loop=!!this.options.loop,e.connect(this.outputNode),e.playbackRate.value=this.currentPlaybackSpeed/100,e}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0,this.currentState=\"stopped\",this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=void 0),this.currentLoopCount=0}}const sb=new Map;async function ob(e,t){let i=null;if(\"string\"==typeof e){const t=sb.get(e);if(t)return KC.debug(\"use cached audio resource: \",e),t;try{i=(await XT((()=>EC.get(e,{responseType:\"arraybuffer\"})),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new Vg(xg.FETCH_AUDIO_FILE_FAILED,e.toString())}}else{const t=new tg(((t,i)=>{const n=new FileReader;n.onload=e=>{e.target?t(e.target.result):i(new Vg(xg.READ_LOCAL_AUDIO_FILE_ERROR))},n.onerror=()=>{i(new Vg(xg.READ_LOCAL_AUDIO_FILE_ERROR))},n.readAsArrayBuffer(e)}));i=await t}const n=await function(e){const t=cA();return new tg(((i,n)=>{t.decodeAudioData(e,(e=>{i(e)}),(e=>{n(new Vg(xg.DECODE_AUDIO_FILE_FAILED,e.toString()))}))}))}(i);return\"string\"==typeof e&&t&&sb.set(e,n),n}const ab=e=>{const t=document.createElement(\"canvas\");return t.width=2,t.height=2,new tg(((i,n)=>{t.toBlob((async e=>{if(t.remove(),e){const n=await cb(e);i({buffer:n,width:t.width,height:t.height})}else n(new Vg(xg.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,1)}))},cb=async e=>{const t=await e.arrayBuffer();return new Uint8Array(t)};const db=new class extends iT{get visibility(){return document.visibilityState}get lastHiddenTime(){return this._lastHiddenTime}get lastVisibleTime(){return this._lastVisibleTime}constructor(){super(),nu(this,\"_lastHiddenTime\",0),nu(this,\"_lastVisibleTime\",0),document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===document.visibilityState?this._lastHiddenTime=performance.now():this._lastVisibleTime=performance.now(),KC.debug(\"document visibility went \".concat(document.visibilityState)),this.emit(\"VISIBILITY_CHANGE\",document.visibilityState)}))}};function lb(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function hb(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?lb(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):lb(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class ub{get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(e){e!==this._videoElementStatus&&(KC.debug(\"[\".concat(this.trackId,\"] video-element-status change \").concat(this._videoElementStatus,\" => \").concat(e)),this._videoElementStatus=e)}constructor(e){nu(this,\"trackId\",void 0),nu(this,\"config\",void 0),nu(this,\"onFirstVideoFrameDecoded\",void 0),nu(this,\"freezeTimeCounterList\",[]),nu(this,\"renderFreezeAccTime\",0),nu(this,\"isKeepLastFrame\",!1),nu(this,\"timeUpdatedCount\",0),nu(this,\"freezeTime\",0),nu(this,\"playbackTime\",0),nu(this,\"lastTimeUpdatedTime\",0),nu(this,\"autoplayFailed\",!1),nu(this,\"videoTrack\",void 0),nu(this,\"videoElement\",void 0),nu(this,\"cacheVideoElement\",void 0),nu(this,\"videoElementCheckInterval\",void 0),nu(this,\"_videoElementStatus\",Zy.NONE),nu(this,\"isGettingVideoDimensions\",!1),nu(this,\"startGetVideoDimensions\",(()=>{const e=()=>{if(this.isGettingVideoDimensions=!0,this.videoElement.videoWidth*this.videoElement.videoHeight>4)return KC.debug(\"[\".concat(this.trackId,\"] current video dimensions:\"),this.videoElement.videoWidth,this.videoElement.videoHeight),void(this.isGettingVideoDimensions=!1);setTimeout(e,500)};!this.isGettingVideoDimensions&&e()})),nu(this,\"autoResumeAfterInterruption\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&\"running\"===oA.curState&&(KC.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(Eg())),Ng()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),nu(this,\"handleVideoEvents\",(e=>{switch(e.type){case\"play\":case\"playing\":this.startGetVideoDimensions(),this.videoElementStatus=Zy.PLAYING;break;case\"loadeddata\":if(this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded(),this.cacheVideoElement){try{this.cacheVideoElement.srcObject=null,this.cacheVideoElement.remove()}catch(e){}this.cacheVideoElement=void 0}break;case\"canplay\":this.videoElementStatus=Zy.CANPLAY;break;case\"stalled\":this.videoElementStatus=Zy.STALLED;break;case\"suspend\":this.videoElementStatus=Zy.SUSPEND;break;case\"pause\":this.videoElementStatus=Zy.PAUSED,Cg()||Dg()||Sg()&&this.autoplayFailed||!this.videoTrack||\"live\"!==this.videoTrack.readyState||(KC.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume\")),this.videoElement.play());break;case\"waiting\":this.videoElementStatus=Zy.WAITING;break;case\"abort\":this.videoElementStatus=Zy.ABORT;break;case\"ended\":this.videoElementStatus=Zy.ENDED;break;case\"emptied\":this.videoElementStatus=Zy.EMPTIED;break;case\"error\":{this.videoElementStatus=Zy.ERROR;const e=this.videoElement.error;e&&KC.error(\"[\".concat(this.trackId,\"] media error, code: \").concat(e.code,\", message: \").concat(e.message));break}case\"timeupdate\":{const e=performance.now();if(this.timeUpdatedCount+=1,this.timeUpdatedCount<10)return void(this.lastTimeUpdatedTime=e);const t=e-this.lastTimeUpdatedTime,i=this.lastTimeUpdatedTime;if(this.lastTimeUpdatedTime=e,db.lastVisibleTime<db.lastHiddenTime||i<db.lastHiddenTime||i<db.lastVisibleTime)return;for(t>kC(\"VIDEO_FREEZE_DURATION\")&&(this.freezeTime+=t),this.playbackTime+=t;this.playbackTime>=6e3;){this.playbackTime-=6e3;const e=Math.min(6e3,this.freezeTime);this.freezeTimeCounterList.push(e),this.freezeTime=Math.max(0,this.freezeTime-6e3)}break}}})),nu(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&(KC.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(Eg())),Ng()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),this.trackId=e.trackId,this.config=e,e.element instanceof HTMLVideoElement?this.videoElement=e.element:this.videoElement=document.createElement(\"video\"),oA.on(uy.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),oA.on(uy.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16)}getVideoElement(){return this.videoElement}getContainerElement(){var e;return null!==(e=this.videoElement.parentElement)&&void 0!==e?e:void 0}updateConfig(e){this.config=e,this.trackId=e.trackId,e.element!==this.videoElement&&(this.destroy(),this.videoElement=e.element),this.videoTrack&&this.initVideoElement()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.initVideoElement())}play(e){const t=this.videoElement.play();t&&t.catch&&t.catch((t=>{e&&MA(e,\"video\",t.message,this.trackId),\"NotAllowedError\"===t.name?(KC.warning(\"detected video element autoplay failed\",t),this.autoplayFailed=!0,this.handleAutoPlayFailed()):KC.warning(\"[\".concat(this.trackId,\"] play warning: \"),t)}));const i=pg();if((\"Safari\"===i.name&&15===Number(i.version)||wg())&&t&&t.then){const e=()=>{this.config.mirror&&(this.videoElement.style.transform=\"rotateY(180deg)\")};t.then(e).catch(e)}}getCurrentFrame(){const e=document.createElement(\"canvas\");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;const t=e.getContext(\"2d\");if(!t)return KC.error(\"create canvas context failed!\"),new ImageData(2,2);t.drawImage(this.videoElement,0,0,e.width,e.height);const i=t.getImageData(0,0,e.width,e.height);return e.remove(),i}async getCurrentFrameToUint8Array(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const i=document.createElement(\"canvas\");i.width=this.videoElement.videoWidth,i.height=this.videoElement.videoHeight;const n=i.getContext(\"2d\");return n?(n.drawImage(this.videoElement,0,0,i.width,i.height),new tg(((n,r)=>{i.toBlob((async e=>{if(i.remove(),e){const t=await cb(e);n({buffer:t,width:i.width,height:i.height})}else r(new Vg(xg.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,t<0?.1:t>1?1:t)}))):await ab(e)}destroy(){oA.off(uy.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),oA.off(uy.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),this.videoElement.srcObject=null,this.resetVideoElement(),this.freezeTimeCounterList=[]}initVideoElement(){if(this.videoElementStatus=Zy.INIT,!this.videoElementCheckInterval&&(pb.forEach((e=>{this.videoElement.addEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval=window.setInterval((()=>{(function(e){return e!==document.body&&document.body.contains(e)})(this.videoElement)||(this.videoElementStatus=Zy.DESTROYED)}),1e3),kC(\"ENABLE_VIDEO_FRAME_CALLBACK\"))){var e,t;let i;const n=(e,t)=>{if(this.videoElementStatus===Zy.PLAYING){if(i){const e=t.presentationTime-i.presentationTime;e>kC(\"VIDEO_FREEZE_DURATION\")&&db.lastVisibleTime>=db.lastHiddenTime&&i.timestamp>db.lastVisibleTime&&i.timestamp>db.lastHiddenTime&&(this.renderFreezeAccTime+=e)}i=hb(hb({},t),{},{timestamp:e})}var r,s;kC(\"ENABLE_VIDEO_FRAME_CALLBACK\")&&(null===(r=(s=this.videoElement).requestVideoFrameCallback)||void 0===r||r.call(s,n))};null===(e=(t=this.videoElement).requestVideoFrameCallback)||void 0===e||e.call(t,n)}this.videoElement.controls=!1,this.videoElement.setAttribute(\"playsinline\",\"\"),Mg()&&(this.videoElement.poster=\"noposter\");const i=pg();if(\"Safari\"===i.name&&15===Number(i.version)||wg()||!this.config.mirror||(this.videoElement.style.transform=\"rotateY(180deg)\"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit=\"cover\",this.videoElement.setAttribute(\"muted\",\"\"),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream){this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,Rg()&&this.videoElement.load())}else this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,Rg()&&this.videoElement.load();const n=this.videoElement.play();void 0!==n&&n.catch((e=>{KC.debug(\"[\".concat(this.trackId,\"] playback interrupted\"),e.toString())}))}resetVideoElement(){pb.forEach((e=>{this.videoElement&&this.videoElement.removeEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0),this.videoElementStatus=Zy.NONE}handleAutoPlayFailed(){const e=t=>{t.preventDefault(),this.videoElement.play().then((()=>{KC.debug(\"[\".concat(this.trackId,\"] Video element for trackId:\").concat(this.trackId,\" autoplay resumed.\"))})).catch((e=>{KC.error(e)})),this.autoplayFailed=!1,Ug()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};Ug()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),PA()}}const pb=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"timeupdate\",\"error\"];class _b extends ub{constructor(e){super(e),nu(this,\"container\",void 0),nu(this,\"slot\",void 0),this.slot=e.element,this.updateConfig(e)}updateConfig(e){this.config=e,this.trackId=e.trackId;const t=e.element;t!==this.slot&&(this.destroy(),this.slot=t),this.createElements()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.createElements())}play(e){var t;null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)&&super.play(e)}getCurrentFrame(){var e;return null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)?super.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameToUint8Array(e){var t;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)?await super.getCurrentFrameToUint8Array(e,i):await ab(e)}destroy(){if(super.destroy(),this.videoElement.remove(),this.videoElement=document.createElement(\"video\"),this.container){try{this.container.remove(),this.slot.removeChild(this.container)}catch(e){}this.container=void 0}}createElements(){this.container||(this.container=document.createElement(\"div\")),this.container.id=\"agora-video-player-\".concat(this.trackId),this.container.style.width=\"100%\",this.container.style.height=\"100%\",this.container.style.position=\"relative\",this.container.style.overflow=\"hidden\",this.videoTrack?(this.container.style.backgroundColor=\"black\",kC(\"KEEP_LAST_FRAME\")&&this.isKeepLastFrame&&this.videoElement.paused&&this.resetVideoElement(),this.mountedVideoElement()):this.unmountedVideoElement(),this.slot.appendChild(this.container)}mountedVideoElement(){var e;!this.container||null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)||this.container.appendChild(this.videoElement),super.initVideoElement(),this.videoElement.id=\"video_\".concat(this.trackId),this.videoElement.className=\"agora_video_player\",this.videoElement.style.width=\"100%\",this.videoElement.style.height=\"100%\",this.videoElement.style.position=\"absolute\",this.videoElement.style.left=\"0\",this.videoElement.style.top=\"0\"}unmountedVideoElement(){var e;if(null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)){super.resetVideoElement();try{this.container&&this.container.removeChild(this.videoElement)}catch(e){}this.videoElement=document.createElement(\"video\")}}resetVideoElement(){var e;null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)&&(super.resetVideoElement(),this.cacheVideoElement=this.videoElement,this.videoElement=document.createElement(\"video\"))}getContainerElement(){return this.container}}function Eb(e){return new tg(((t,i)=>{let n=!1;const r=document.createElement(\"video\");r.setAttribute(\"autoplay\",\"\"),r.setAttribute(\"muted\",\"\"),r.muted=!0,r.autoplay=!0,r.setAttribute(\"playsinline\",\"\"),r.setAttribute(\"style\",\"position: fixed; top: 0; left: 0; width: 1px; height: 1px\"),document.body.appendChild(r);const s=Cg()?\"canplay\":\"playing\";r.addEventListener(s,(()=>{const e=r.videoWidth,i=r.videoHeight;!e&&Rg()||(n=!0,r.srcObject=null,r.remove(),t([e,i]))})),r.srcObject=new MediaStream([e]),r.play().catch(FT),setTimeout((()=>{n||(r.srcObject=null,r.remove(),t([r.videoWidth,r.videoHeight]))}),4e3)}))}const mb=async(e,t,i)=>{const n=function(e){const t=[];for(let i=0;i<e.length;i+=2)t.push(parseInt(e.slice(i,i+2),16));return Uint8Array.from(t)}(function(e){const t=\"0123456789abcdef\";function i(e){let i,n=\"\";for(i=0;i<=3;i++)n+=t.charAt(e>>8*i+4&15)+t.charAt(e>>8*i&15);return n}function n(e,t){const i=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(i>>16)<<16|65535&i}function r(e,t,i,r,s,o){return n(function(e,t){return e<<t|e>>>32-t}(n(n(t,e),n(r,o)),s),i)}function s(e,t,i,n,s,o,a){return r(t&i|~t&n,e,t,s,o,a)}function o(e,t,i,n,s,o,a){return r(t&n|i&~n,e,t,s,o,a)}function a(e,t,i,n,s,o,a){return r(t^i^n,e,t,s,o,a)}function c(e,t,i,n,s,o,a){return r(i^(t|~n),e,t,s,o,a)}const d=function(e){let t;const i=1+(e.length+8>>6),n=new Array(16*i);for(t=0;t<16*i;t++)n[t]=0;for(t=0;t<e.length;t++)n[t>>2]|=e.charCodeAt(t)<<t%4*8;return n[t>>2]|=128<<t%4*8,n[16*i-2]=8*e.length,n}(e);let l,h,u,p,_,E=1732584193,m=-271733879,f=-1732584194,g=271733878;for(l=0;l<d.length;l+=16)h=E,u=m,p=f,_=g,E=s(E,m,f,g,d[l+0],7,-680876936),g=s(g,E,m,f,d[l+1],12,-389564586),f=s(f,g,E,m,d[l+2],17,606105819),m=s(m,f,g,E,d[l+3],22,-1044525330),E=s(E,m,f,g,d[l+4],7,-176418897),g=s(g,E,m,f,d[l+5],12,1200080426),f=s(f,g,E,m,d[l+6],17,-1473231341),m=s(m,f,g,E,d[l+7],22,-45705983),E=s(E,m,f,g,d[l+8],7,1770035416),g=s(g,E,m,f,d[l+9],12,-1958414417),f=s(f,g,E,m,d[l+10],17,-42063),m=s(m,f,g,E,d[l+11],22,-1990404162),E=s(E,m,f,g,d[l+12],7,1804603682),g=s(g,E,m,f,d[l+13],12,-40341101),f=s(f,g,E,m,d[l+14],17,-1502002290),m=s(m,f,g,E,d[l+15],22,1236535329),E=o(E,m,f,g,d[l+1],5,-165796510),g=o(g,E,m,f,d[l+6],9,-1069501632),f=o(f,g,E,m,d[l+11],14,643717713),m=o(m,f,g,E,d[l+0],20,-373897302),E=o(E,m,f,g,d[l+5],5,-701558691),g=o(g,E,m,f,d[l+10],9,38016083),f=o(f,g,E,m,d[l+15],14,-660478335),m=o(m,f,g,E,d[l+4],20,-405537848),E=o(E,m,f,g,d[l+9],5,568446438),g=o(g,E,m,f,d[l+14],9,-1019803690),f=o(f,g,E,m,d[l+3],14,-187363961),m=o(m,f,g,E,d[l+8],20,1163531501),E=o(E,m,f,g,d[l+13],5,-1444681467),g=o(g,E,m,f,d[l+2],9,-51403784),f=o(f,g,E,m,d[l+7],14,1735328473),m=o(m,f,g,E,d[l+12],20,-1926607734),E=a(E,m,f,g,d[l+5],4,-378558),g=a(g,E,m,f,d[l+8],11,-2022574463),f=a(f,g,E,m,d[l+11],16,1839030562),m=a(m,f,g,E,d[l+14],23,-35309556),E=a(E,m,f,g,d[l+1],4,-1530992060),g=a(g,E,m,f,d[l+4],11,1272893353),f=a(f,g,E,m,d[l+7],16,-155497632),m=a(m,f,g,E,d[l+10],23,-1094730640),E=a(E,m,f,g,d[l+13],4,681279174),g=a(g,E,m,f,d[l+0],11,-358537222),f=a(f,g,E,m,d[l+3],16,-722521979),m=a(m,f,g,E,d[l+6],23,76029189),E=a(E,m,f,g,d[l+9],4,-640364487),g=a(g,E,m,f,d[l+12],11,-421815835),f=a(f,g,E,m,d[l+15],16,530742520),m=a(m,f,g,E,d[l+2],23,-995338651),E=c(E,m,f,g,d[l+0],6,-198630844),g=c(g,E,m,f,d[l+7],10,1126891415),f=c(f,g,E,m,d[l+14],15,-1416354905),m=c(m,f,g,E,d[l+5],21,-57434055),E=c(E,m,f,g,d[l+12],6,1700485571),g=c(g,E,m,f,d[l+3],10,-1894986606),f=c(f,g,E,m,d[l+10],15,-1051523),m=c(m,f,g,E,d[l+1],21,-2054922799),E=c(E,m,f,g,d[l+8],6,1873313359),g=c(g,E,m,f,d[l+15],10,-30611744),f=c(f,g,E,m,d[l+6],15,-1560198380),m=c(m,f,g,E,d[l+13],21,1309151649),E=c(E,m,f,g,d[l+4],6,-145523070),g=c(g,E,m,f,d[l+11],10,-1120210379),f=c(f,g,E,m,d[l+2],15,718787259),m=c(m,f,g,E,d[l+9],21,-343485551),E=n(E,h),m=n(m,u),f=n(f,p),g=n(g,_);return i(E)+i(m)+i(f)+i(g)}(\"\"+t+i)).slice(0,16),r=n.slice(0,12),s=await window.crypto.subtle.importKey(\"raw\",n,\"AES-GCM\",!0,[\"encrypt\"]);return new Uint8Array(await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:r},s,e))},fb=async(e,t,i)=>await mb(e.buffer,t,i);function gb(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Tb(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?gb(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):gb(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class Sb extends iA{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==Zy.PLAYING)}get processorContext(){return this._processorContext}set processorContext(e){this._processorContext=e}get __className__(){return\"LocalVideoTrack\"}constructor(e,t,i,n,r,s){if(super(e,r),nu(this,\"trackMediaType\",\"video\"),nu(this,\"_player\",void 0),nu(this,\"isUseScaleResolutionDownBy\",!1),nu(this,\"_videoVisibleTimer\",null),nu(this,\"_statsTimer\",null),nu(this,\"_previousVideoVisibleStatus\",void 0),nu(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),nu(this,\"_encoderConfig\",void 0),nu(this,\"_scalabilityMode\",{numSpatialLayers:1,numTemporalLayers:1}),nu(this,\"_optimizationMode\",void 0),nu(this,\"_videoHeight\",void 0),nu(this,\"_videoWidth\",void 0),nu(this,\"_forceBitrateLimit\",void 0),nu(this,\"_enabled\",!0),nu(this,\"processorDestination\",void 0),nu(this,\"_processorContext\",void 0),Sg()){const{width:t,height:i}=e.getSettings();this._videoWidth=t,this._videoHeight=i}else this.updateMediaStreamTrackResolution();if(this._encoderConfig=t,this._scalabilityMode=i,this._optimizationMode=n,this._hints=s||[],-1===this._hints.indexOf(ky.SCREEN_TRACK))this.updateBitrateFromProfile();else if(function(e,t,i){const n=pg();return!(n.name!==e||!n.osVersion)&&(i?Number(n.version)>=t&&Number(n.version)<=i:Number(n.version)===t)}(cg.CHROME,115)&&-1!==_g().indexOf(\"Windows\")){const t=function(e,t){if(\"VideoFrame\"in window&&\"TransformStream\"in window&&_A().supportWebRTCInsertableStream){const i=new MediaStreamTrackProcessor(e),n=new MediaStreamTrackGenerator({kind:\"video\"});let r,s,o=Date.now();const a=()=>{c&&(clearInterval(c),c=void 0),r&&(r.close(),r=void 0),e.stop(),s=void 0,n.removeEventListener(\"ended\",a)};let c=window.setInterval((()=>{if(s&&r&&Date.now()-o>(null!=t?t:1e3))try{\"live\"===n.readyState?s.enqueue(r.clone()):a()}catch(e){a()}}),null!=t?t:1e3);const d=new TransformStream({transform:(e,t)=>{\"live\"===n.readyState?(s=t,o=Date.now(),void 0===r?(r=e,t.enqueue(e.clone())):(t.enqueue(r),r=e)):e.close()}});return n.addEventListener(\"ended\",a),i.readable.pipeThrough(d).pipeTo(n.writable),n}}(e);t&&(KC.info(\"local screen video track begin to inject frame\"),this._mediaStreamTrack=t)}t&&-1!==this._hints.indexOf(ky.CUSTOM_TRACK)&&this.setEncoderConfiguration(t),this.processorContext=new GA(this.getTrackId(),\"local\"),this.processorDestination=new jA(this.processorContext),this.bindProcessorDestinationEvents()}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(KC.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}KC.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=Tb(Tb(Tb({},this._getDefaultPlayerConfig()),t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new ub(i):this._player=new _b(i),this._player.updateVideoTrack(this._mediaStreamTrack)),this._player.play(),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(Fy.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),kC(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._statsTimer&&(this.isUseScaleResolutionDownBy=!1,window.clearInterval(this._statsTimer),this._statsTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,KC.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(KC.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),!e){this._originMediaStreamTrack.enabled=!1;try{await gT(this,Ly.NEED_DISABLE_TRACK,this)}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}return t||(this._enabled=!1),void KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}this._originMediaStreamTrack.enabled=!0;try{await gT(this,Ly.NEED_ENABLE_TRACK,this)}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,KC.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await gT(this,Ly.NEED_MUTE_TRACK,this):await gT(this,Ly.NEED_UNMUTE_TRACK,this))}async setEncoderConfiguration(e,t){if(!this._enabled)throw new Vg(xg.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");if(\"720p_auto\"===e?this.startMonitorStats():this._statsTimer&&(window.clearInterval(this._statsTimer),this._statsTimer=null),e=Ay(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),e.width||e.height||e.frameRate){const t=ib({encoderConfig:e});(Sg()||Cg()||Dg())&&(t.deviceId=void 0),KC.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(t));try{await this._originMediaStreamTrack.applyConstraints(t),this.updateMediaStreamTrackResolution()}catch(e){const t=new Vg(xg.UNEXPECTED_ERROR,e.toString());throw KC.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}}this._encoderConfig=e,-1===this._hints.indexOf(ky.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await gT(this,Ly.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(KC)}}getStats(){NT((()=>{KC.warning(\"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead\")}),\"localVideoTrackGetStatsWarning\");const e=TT(this,Ly.GET_STATS);return e||Tb({},Hy)}async setBeautyEffect(e){KC.error(\"LocalVideoTrack.setBeautyEffect was deprecated, please migrate to agora-extension-beauty-effect\")}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this._player?this._player.getCurrentFrameToUint8Array(e,t):await ab(e)}async setBitrateLimit(e){if(KC.debug(\"[\".concat(this.getTrackId(),\"] set bitrate limit, \").concat(JSON.stringify(e))),e){this._forceBitrateLimit=e,this._encoderConfig&&(this._encoderConfig.bitrateMax?this._encoderConfig.bitrateMax=this._encoderConfig.bitrateMax<e.max_bitrate?this._encoderConfig.bitrateMax:e.max_bitrate:this._encoderConfig.bitrateMax=e.max_bitrate,this._encoderConfig.bitrateMin,this._encoderConfig.bitrateMin=e.min_bitrate);try{await gT(this,Ly.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(KC)}}}async setOptimizationMode(e){if(\"motion\"!==e&&\"detail\"!==e&&\"balanced\"!==e)return void KC.error(xg.INVALID_PARAMS,\"optimization mode must be motion, detail or balanced\");const t=this._optimizationMode;try{this._optimizationMode=e,await gT(this,Ly.SET_OPTIMIZATION_MODE,this)}catch(e){throw this._optimizationMode=t,KC.error(\"[\".concat(this.getTrackId(),\"] set optimization mode failed\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] set optimization mode success (\").concat(e,\")\"))}setScalabiltyMode(e){if(1===e.numSpatialLayers&&1!==e.numTemporalLayers)return KC.error(xg.INVALID_PARAMS,\"scalability mode currently not supported, no SVC.\"),void(this._scalabilityMode={numSpatialLayers:1,numTemporalLayers:1});this._scalabilityMode=e,KC.info(\"[\".concat(this.getTrackId(),\"] set scalability mode success (\").concat(e,\")\"))}updateMediaStreamTrackResolution(){Eb(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(FT)}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:\"contain\"}}async setSenderConfiguration(e){if(!this._enabled)throw new Vg(xg.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");KC.debug(\"[\".concat(this.getTrackId(),\"] setSenderConfiguration applyConstraints\"),JSON.stringify(e)),e=Ay(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),this._encoderConfig=e,-1===this._hints.indexOf(ky.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await gT(this,Ly.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(KC)}}updateBitrateFromProfile(){if(!this._encoderConfig)return;const{width:e,height:t,frameRate:i}=this.getMediaStreamTrackSettings();if(!e||!t||!i)return;const[n,r]=function(e,t,i,n){let r;const s=200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75),o=s;if(\"STANDARD_BITRATE\"===n)r=4*s;else{if(\"COMPATIABLE_BITRATE\"!==n)return;r=2*s}return[Math.floor(r),Math.floor(o)]}(e,t,i,kC(\"BITRATE_ADAPTER_TYPE\"))||[void 0,void 0];this._encoderConfig.bitrateMin||this._encoderConfig.bitrateMax||(this._encoderConfig.bitrateMin=r,this._encoderConfig.bitrateMax=n,KC.debug(\"[\".concat(this.getTrackId(),\"] update bitrate from profile, [w: \").concat(e,\", h: \").concat(t,\", fps: \").concat(i,\"] => [brMax: \").concat(n,\", brMin: \").concat(r,\"]\")))}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:s}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&s instanceof HTMLElement){const e=Qg.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new Vg(xg.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}async renewMediaStreamTrack(e){}pipe(e){if(this.processor===e)return e;if(e._source)throw new Vg(xg.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe()}clone(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this._encoderConfig;e&&(i=Tb(Tb({},i),Ay(e))),i=wT(i);const n=xT(8,\"track-video-cloned-\"),r=new Sb(t?this._mediaStreamTrack.clone():this._mediaStreamTrack,i,wT(this._scalabilityMode),this._optimizationMode,n,wT(this._hints));return e&&i&&r.setEncoderConfiguration(i),KC.debug(\"clone video track from \".concat(this.getTrackId(),\" to \").concat(n,\", clone \").concat(t)),r}async replaceTrack(e,t){if(!(e instanceof MediaStreamTrack))throw new Vg(xg.INVALID_PARAMS,\"track should be an instance of MediaStreamTrack\");if(\"video\"!==e.kind)throw new Vg(xg.INVALID_PARAMS,\"track should be a video MediaStreamTrack\");await this._updateOriginMediaStreamTrack(e,t,!0),this.updateMediaStreamTrackResolution()}startMonitorStats(){if(!Sg()&&!Cg())return;this._statsTimer&&window.clearInterval(this._statsTimer);let e=2,t=vy[e];let i=-1;let n=Date.now();const r=e=>{e>2||e<0||(n=Date.now(),t=vy[e],this.setSenderConfiguration(t))};this.isUseScaleResolutionDownBy=!0,this._statsTimer=window.setInterval((()=>{const s=this.getStats(),o=TT(this,Ly.GET_RTC_STATS);if(s.sendPackets>0&&o){-1===i&&(i=Date.now());const a=Date.now();if(a-i<1e3||a-n<kC(\"PROFILE_SWITCH_INTERVAL\"))return;const c=s.sendFrameRate,d=.6*t.frameRate,l=.9*t.frameRate;\"number\"==typeof c&&c>0&&c<d?e>0&&(e--,r(e),KC.debug(\"[\".concat(this.getTrackId(),\"] step down for fps \").concat(c,\", switchProfile to \").concat(e))):o.OutgoingAvailableBandwidth<t.bitrateMin?e>0&&(e--,r(e),KC.debug(\"[\".concat(this.getTrackId(),\"] step down for OutgoingAvailableBandwidth \").concat(o.OutgoingAvailableBandwidth,\", bitrateMin \").concat(t.bitrateMin,\", switchProfile to \").concat(e))):\"number\"==typeof c&&c>l&&e<vy.length-1&&o.OutgoingAvailableBandwidth>1.2*vy[e+1].bitrateMin&&(e++,r(e),KC.debug(\"[\".concat(this.getTrackId(),\"] step up for fps \").concat(c,\", OutgoingAvailableBandwidth \").concat(o.OutgoingAvailableBandwidth,\", switchProfile to \").concat(e)))}}),kC(\"CHECK_LOCAL_STATS_INTERVAL\"))}bindProcessorDestinationEvents(){this.processorDestination.on(Jy.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(),await gT(this,Ly.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await gT(this,Ly.NEED_REPLACE_TRACK,this))}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(Jy.ON_TRACK)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(zy.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(zy.REQUEST_CONSTRAINTS)}}Mv([nv({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"play\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"stop\",null),Mv([qT(\"LocalVideoTrack\",\"_enabledMutex\"),nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Boolean]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setEnabled\",null),Mv([qT(\"LocalVideoTrack\",\"_enabledMutex\"),nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setMuted\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Boolean]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setEncoderConfiguration\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",Object)],Sb.prototype,\"getStats\",null),Mv([nv({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Object]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setBeautyEffect\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",ImageData)],Sb.prototype,\"getCurrentFrameData\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Number]),Uv(\"design:returntype\",tg)],Sb.prototype,\"getCurrentFrameImage\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setBitrateLimit\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],Sb.prototype,\"setOptimizationMode\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"setScalabiltyMode\",null),Mv([VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"updateMediaStreamTrackResolution\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",Object)],Sb.prototype,\"pipe\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"unpipe\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"close\",null),Mv([nv({argsMap:(e,t,i)=>[e.getTrackId(),t.label,i]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[MediaStreamTrack,Boolean]),Uv(\"design:returntype\",tg)],Sb.prototype,\"replaceTrack\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Sb.prototype,\"startMonitorStats\",null);class Rb extends Sb{get __className__(){return\"CameraVideoTrack\"}constructor(e,t,i,n,r,s){super(e,Ay(t.encoderConfig),n,r,s),nu(this,\"_config\",void 0),nu(this,\"_originalConstraints\",void 0),nu(this,\"_constraints\",void 0),nu(this,\"_enabled\",!0),nu(this,\"_deviceName\",\"default\"),nu(this,\"tryResumeVideoForIOS15_16WeChat\",(async()=>{(wg()||Og())&&!function(){const e=pg();if(e.os!==ag.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=2}()&&Pg()&&this._enabled&&!this._isClosed&&(KC.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS 15 device on WeChat.\")),await this.renewMediaStreamTrack())})),this._config=t,this._originalConstraints=i,this._constraints=i,this._deviceName=e.label,this._encoderConfig=Ay(this._config.encoderConfig),oA.on(uy.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),oA.on(uy.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),this.bindProcessorContextEvents()}async setDevice(e){return\"string\"==typeof e?this._setDeviceById(e):e.deviceId?this._setDeviceById(e.deviceId):e.facingMode?this._setDeviceByFacingModel(e.facingMode):void 0}async _setDeviceById(e){if(KC.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e)),this._enabled)try{const t=await OA.getDeviceById(e),i={};i.video=Tb({},this._constraints),i.video.deviceId={exact:e},i.video.facingMode=void 0,this._originMediaStreamTrack.stop();let n=null;try{n=await yA(i,this.getTrackId())}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await yA({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution(),this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await OA.getDeviceById(e);this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] setDevice success\"))}async _setDeviceByFacingModel(e){KC.info(\"[\".concat(this.getTrackId(),\"] set facingMode \").concat(e));const t={video:Tb(Tb({},this._constraints),{},{deviceId:void 0,facingMode:{exact:e}})};if(this._enabled){this._originMediaStreamTrack.stop();let e=null;try{e=await yA(t,this.getTrackId())}catch(t){throw KC.error(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel failed\"),t.toString()),e=await yA({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution()}this._deviceName=\"\",this._config.facingMode=e,this._config.cameraId=void 0,this._constraints=Tb({},t.video),KC.info(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel success\"))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(KC.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){try{if(this.isExternalTrack)this._originMediaStreamTrack.enabled=!0;else{const e=await yA({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1)}await gT(this,Ly.NEED_ENABLE_TRACK,this)}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled true error\"),e.toString()),e}this.updateMediaStreamTrackResolution(),KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}else{this.isExternalTrack?this._originMediaStreamTrack.enabled=!1:(this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop()),t||(this._enabled=!1);try{await gT(this,Ly.NEED_DISABLE_TRACK,this)}catch(e){throw KC.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}KC.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}}async setEncoderConfiguration(e,t){if(!this._enabled)throw new Vg(xg.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");\"720p_auto\"===e?this.startMonitorStats():this._statsTimer&&(window.clearInterval(this._statsTimer),this._statsTimer=null),e=Ay(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin);const i=bT(this._config);i.encoderConfig=e;const n=ib(i);(Sg()||Cg()||Dg())&&(n.deviceId=void 0),KC.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(n));try{await this._originMediaStreamTrack.applyConstraints(n),this.updateMediaStreamTrackResolution()}catch(e){const t=new Vg(xg.UNEXPECTED_ERROR,e.toString());throw KC.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}this._config=i,this._constraints=n,this._originalConstraints=n,this._encoderConfig=e,-1===this._hints.indexOf(ky.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await gT(this,Ly.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(KC)}}_getDefaultPlayerConfig(){return{mirror:!0,fit:\"cover\"}}onTrackEnded(){if((Cg()||Dg())&&this._enabled&&!this._isClosed&&oA.duringInterruption){const e=async()=>{oA.off(uy.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(KC.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};oA.on(uy.IOS_INTERRUPTION_END,e)}else KC.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(Fy.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=OA.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId={exact:i}),this._enabled){const e=await yA({video:t},this.getTrackId());this._constraints=t,await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!0),this.updateMediaStreamTrackResolution()}}close(){super.close(),oA.off(uy.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),oA.off(uy.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat)}clone(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this._encoderConfig;e&&(i=Tb(Tb({},i),Ay(e))),i=wT(i);const n=xT(8,\"track-cam-cloned-\"),r=new Rb(t?this._mediaStreamTrack.clone():this._mediaStreamTrack,wT(Tb(Tb({},this._config),{},{encoderConfig:i})),wT(this._constraints),wT(this._scalabilityMode),this._optimizationMode,n);return e&&i&&r.setEncoderConfiguration(i),KC.debug(\"clone track from \".concat(this.getTrackId(),\" to \").concat(n,\", clone \").concat(t)),r}bindProcessorContextEvents(){this.processorContext.on(zy.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}})),this.processorContext.on(zy.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}}function Cb(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function vb(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Cb(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Cb(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function Ib(e,t,i,n){i.optimizationMode&&(n&&n.width&&n.height?(i.encoderConfig=vb(vb({},n),{},{bitrateMin:n.bitrateMin,bitrateMax:n.bitrateMax}),\"motion\"!==i.optimizationMode&&\"detail\"!==i.optimizationMode||(t.contentHint=i.optimizationMode,t.contentHint===i.optimizationMode?KC.debug(\"[\".concat(e,\"] set content hint to\"),i.optimizationMode):KC.debug(\"[\".concat(e,\"] set content hint failed\")))):KC.warning(\"[\".concat(e,\"] can not apply optimization mode bitrate config, no encoderConfig\")))}function yb(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Ab(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?yb(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):yb(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],Rb.prototype,\"setDevice\",null),Mv([qT(\"CameraVideoTrack\",\"_enabledMutex\"),nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Boolean]),Uv(\"design:returntype\",tg)],Rb.prototype,\"setEnabled\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),VA(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Boolean]),Uv(\"design:returntype\",tg)],Rb.prototype,\"setEncoderConfiguration\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Rb.prototype,\"close\",null);class bb extends tA{getUserId(){return this._userId}constructor(e,t,i,n){super(e,\"track-\".concat(e.kind,\"-\").concat(t,\"-\").concat(n.clientId,\"_\").concat(xT(5,\"\"))),nu(this,\"_userId\",void 0),nu(this,\"_uintId\",void 0),nu(this,\"_isDestroyed\",!1),nu(this,\"store\",void 0),nu(this,\"processor\",void 0),this._userId=t,this._uintId=i,this.store=n}_updateOriginMediaStreamTrack(e){this._originMediaStreamTrack=e,this._mediaStreamTrack=e,this._updatePlayerSource(),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}_destroy(){this._isDestroyed=!0,KC.info(\"[\".concat(this.getTrackId(),\"] is destroyed\")),this.stop(),super.close()}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}class wb extends bb{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==Zy.PLAYING)}get __className__(){return\"RemoteVideoTrack\"}constructor(e,t,i,n){super(e,t,i,n),nu(this,\"_videoVisibleTimer\",null),nu(this,\"_previousVideoVisibleStatus\",void 0),nu(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),nu(this,\"trackMediaType\",\"video\"),nu(this,\"_videoWidth\",void 0),nu(this,\"_videoHeight\",void 0),nu(this,\"_player\",void 0),nu(this,\"processorDestination\",void 0),nu(this,\"processorContext\",void 0),this.updateMediaStreamTrackResolution(),this.processorContext=new GA(this.getTrackId(),\"remote\"),this.processorDestination=new jA(this.processorContext),this.bindProcessorDestinationEvents()}getStats(){NT((()=>{KC.warning(\"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead\")}),\"remoteVideoTrackGetStatsWarning\");return TT(this,Ly.GET_STATS)||Ab({},qy)}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(KC.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}KC.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=Ab(Ab({fit:\"cover\"},t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new ub(i):this._player=new _b(i),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.store.subscribe(this.getUserId(),\"video\",void 0,void 0,Date.now()),this.safeEmit(By.FIRST_FRAME_DECODED)}),this._player.play(this.store.sessionId||void 0),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(By.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),kC(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,KC.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}updateMediaStreamTrackResolution(){Eb(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(FT)}_updatePlayerSource(){KC.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:s}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&s instanceof HTMLElement){const e=Qg.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new Vg(xg.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}pipe(e){if(this.processor===e)return e;if(e._source)throw new Vg(xg.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(Jy.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource()):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(Jy.ON_TRACK)}_destroy(){super._destroy(),this.unbindProcessorDestinationEvents()}}Mv([nv({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object]),Uv(\"design:returntype\",void 0)],wb.prototype,\"play\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],wb.prototype,\"stop\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",Object)],wb.prototype,\"pipe\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],wb.prototype,\"unpipe\",null);class Ob extends bb{get isPlaying(){return this._useAudioElement?xA.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"RemoteAudioTrack\"}constructor(e,t,i,n){super(e,t,i,n),nu(this,\"trackMediaType\",\"audio\"),nu(this,\"_source\",void 0),nu(this,\"_useAudioElement\",!0),nu(this,\"_volume\",100),nu(this,\"processorContext\",void 0),nu(this,\"processorDestination\",void 0),nu(this,\"_played\",!1),nu(this,\"_bypassWebAudio\",!1),kC(\"DISABLE_WEBAUDIO\")?(this._source=new KA,this._bypassWebAudio=!0,this._useAudioElement=!0):(this._source=new fA(e,!0),kC(\"REMOTE_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1)),this._source.once(jy.RECEIVE_TRACK_BUFFER,(()=>{this.safeEmit(By.FIRST_FRAME_DECODED)})),this.processorContext=new HA(this._source.context,this.getTrackId(),\"remote\"),this.processorDestination=new WA(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(jy.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})}))}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(jy.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(jy.ON_AUDIO_BUFFER),this._source.on(jy.ON_AUDIO_BUFFER,(t=>e(t)))}setVolume(e){this._volume=e,this._useAudioElement?xA.setVolume(this.getTrackId(),e):this._source.setVolume(e/100)}async setPlaybackDevice(e){if(!this._useAudioElement)throw new Vg(xg.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await xA.setSinkID(this.getTrackId(),e)}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}getStats(){NT((()=>{KC.warning(\"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead\")}),\"remoteAudioTrackGetStatsWarning\");return TT(this,Ly.GET_STATS)||Ab({},Ky)}play(){KC.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._played=!0,this._useAudioElement?(KC.debug(\"[\".concat(this.getTrackId(),\"] use audio element to play\")),xA.play(this._mediaStreamTrack,this.getTrackId(),this._volume,this.store.sessionId||void 0)):this._source.play()}stop(){KC.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._played=!1,this._useAudioElement?xA.stop(this.getTrackId()):this._source.stop()}_destroy(){super._destroy(),this._played=!1,this.unbindProcessorDestinationEvents(),this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];KC.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&xA.updateTrack(this.getTrackId(),this._mediaStreamTrack)}pipe(e){if(this._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"can not pipe extension when WebAudio disabled\");if(this.processor===e)return e;if(e._source)throw new Vg(xg.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(this._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"can not unpipe extension when WebAudio disabled\");if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(Jy.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())})),this.processorDestination.on(Jy.ON_NODE,(e=>{this._source.processedNode=e;const t=!e;this._useAudioElement!==t&&(this._played?(this.stop(),this._useAudioElement=t,this.play()):this._useAudioElement=t)}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(Jy.ON_TRACK),this.processorDestination.removeAllListeners(Jy.ON_NODE)}}Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",void 0)],Ob.prototype,\"setVolume\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],Ob.prototype,\"setPlaybackDevice\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Ob.prototype,\"play\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Ob.prototype,\"stop\",null),Mv([nv({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",Object)],Ob.prototype,\"pipe\",null),Mv([nv({argsMap:e=>[e.getTrackId()]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],Ob.prototype,\"unpipe\",null);function Nb(e){let t=e.length;for(;--t>=0;)e[t]=0}const Db=256,Pb=286,Lb=30,kb=15,Mb=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),Ub=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),xb=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),Vb=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Fb=new Array(576);Nb(Fb);const Bb=new Array(60);Nb(Bb);const jb=new Array(512);Nb(jb);const Gb=new Array(256);Nb(Gb);const Wb=new Array(29);Nb(Wb);const Hb=new Array(Lb);function Kb(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}let Yb,qb,Jb;function zb(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}Nb(Hb);const Xb=e=>e<256?jb[e]:jb[256+(e>>>7)],Qb=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},Zb=(e,t,i)=>{e.bi_valid>16-i?(e.bi_buf|=t<<e.bi_valid&65535,Qb(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=i-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)},$b=(e,t,i)=>{Zb(e,i[2*t],i[2*t+1])},ew=(e,t)=>{let i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1},tw=(e,t,i)=>{const n=new Array(16);let r,s,o=0;for(r=1;r<=kb;r++)o=o+i[r-1]<<1,n[r]=o;for(s=0;s<=t;s++){let t=e[2*s+1];0!==t&&(e[2*s]=ew(n[t]++,t))}},iw=e=>{let t;for(t=0;t<Pb;t++)e.dyn_ltree[2*t]=0;for(t=0;t<Lb;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},nw=e=>{e.bi_valid>8?Qb(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},rw=(e,t,i,n)=>{const r=2*t,s=2*i;return e[r]<e[s]||e[r]===e[s]&&n[t]<=n[i]},sw=(e,t,i)=>{const n=e.heap[i];let r=i<<1;for(;r<=e.heap_len&&(r<e.heap_len&&rw(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!rw(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n},ow=(e,t,i)=>{let n,r,s,o,a=0;if(0!==e.sym_next)do{n=255&e.pending_buf[e.sym_buf+a++],n+=(255&e.pending_buf[e.sym_buf+a++])<<8,r=e.pending_buf[e.sym_buf+a++],0===n?$b(e,r,t):(s=Gb[r],$b(e,s+Db+1,t),o=Mb[s],0!==o&&(r-=Wb[s],Zb(e,r,o)),n--,s=Xb(n),$b(e,s,i),o=Ub[s],0!==o&&(n-=Hb[s],Zb(e,n,o)))}while(a<e.sym_next);$b(e,256,t)},aw=(e,t)=>{const i=t.dyn_tree,n=t.stat_desc.static_tree,r=t.stat_desc.has_stree,s=t.stat_desc.elems;let o,a,c,d=-1;for(e.heap_len=0,e.heap_max=573,o=0;o<s;o++)0!==i[2*o]?(e.heap[++e.heap_len]=d=o,e.depth[o]=0):i[2*o+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=d<2?++d:0,i[2*c]=1,e.depth[c]=0,e.opt_len--,r&&(e.static_len-=n[2*c+1]);for(t.max_code=d,o=e.heap_len>>1;o>=1;o--)sw(e,i,o);c=s;do{o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],sw(e,i,1),a=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=a,i[2*c]=i[2*o]+i[2*a],e.depth[c]=(e.depth[o]>=e.depth[a]?e.depth[o]:e.depth[a])+1,i[2*o+1]=i[2*a+1]=c,e.heap[1]=c++,sw(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const i=t.dyn_tree,n=t.max_code,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,a=t.stat_desc.extra_base,c=t.stat_desc.max_length;let d,l,h,u,p,_,E=0;for(u=0;u<=kb;u++)e.bl_count[u]=0;for(i[2*e.heap[e.heap_max]+1]=0,d=e.heap_max+1;d<573;d++)l=e.heap[d],u=i[2*i[2*l+1]+1]+1,u>c&&(u=c,E++),i[2*l+1]=u,l>n||(e.bl_count[u]++,p=0,l>=a&&(p=o[l-a]),_=i[2*l],e.opt_len+=_*(u+p),s&&(e.static_len+=_*(r[2*l+1]+p)));if(0!==E){do{for(u=c-1;0===e.bl_count[u];)u--;e.bl_count[u]--,e.bl_count[u+1]+=2,e.bl_count[c]--,E-=2}while(E>0);for(u=c;0!==u;u--)for(l=e.bl_count[u];0!==l;)h=e.heap[--d],h>n||(i[2*h+1]!==u&&(e.opt_len+=(u-i[2*h+1])*i[2*h],i[2*h+1]=u),l--)}})(e,t),tw(i,d,e.bl_count)},cw=(e,t,i)=>{let n,r,s=-1,o=t[1],a=0,c=7,d=4;for(0===o&&(c=138,d=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=o,o=t[2*(n+1)+1],++a<c&&r===o||(a<d?e.bl_tree[2*r]+=a:0!==r?(r!==s&&e.bl_tree[2*r]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,a=0,s=r,0===o?(c=138,d=3):r===o?(c=6,d=3):(c=7,d=4))},dw=(e,t,i)=>{let n,r,s=-1,o=t[1],a=0,c=7,d=4;for(0===o&&(c=138,d=3),n=0;n<=i;n++)if(r=o,o=t[2*(n+1)+1],!(++a<c&&r===o)){if(a<d)do{$b(e,r,e.bl_tree)}while(0!=--a);else 0!==r?(r!==s&&($b(e,r,e.bl_tree),a--),$b(e,16,e.bl_tree),Zb(e,a-3,2)):a<=10?($b(e,17,e.bl_tree),Zb(e,a-3,3)):($b(e,18,e.bl_tree),Zb(e,a-11,7));a=0,s=r,0===o?(c=138,d=3):r===o?(c=6,d=3):(c=7,d=4)}};let lw=!1;const hw=(e,t,i,n)=>{Zb(e,0+(n?1:0),3),nw(e),Qb(e,i),Qb(e,~i),i&&e.pending_buf.set(e.window.subarray(t,t+i),e.pending),e.pending+=i};var uw=e=>{lw||((()=>{let e,t,i,n,r;const s=new Array(16);for(i=0,n=0;n<28;n++)for(Wb[n]=i,e=0;e<1<<Mb[n];e++)Gb[i++]=n;for(Gb[i-1]=n,r=0,n=0;n<16;n++)for(Hb[n]=r,e=0;e<1<<Ub[n];e++)jb[r++]=n;for(r>>=7;n<Lb;n++)for(Hb[n]=r<<7,e=0;e<1<<Ub[n]-7;e++)jb[256+r++]=n;for(t=0;t<=kb;t++)s[t]=0;for(e=0;e<=143;)Fb[2*e+1]=8,e++,s[8]++;for(;e<=255;)Fb[2*e+1]=9,e++,s[9]++;for(;e<=279;)Fb[2*e+1]=7,e++,s[7]++;for(;e<=287;)Fb[2*e+1]=8,e++,s[8]++;for(tw(Fb,287,s),e=0;e<Lb;e++)Bb[2*e+1]=5,Bb[2*e]=ew(e,5);Yb=new Kb(Fb,Mb,257,Pb,kb),qb=new Kb(Bb,Ub,0,Lb,kb),Jb=new Kb(new Array(0),xb,0,19,7)})(),lw=!0),e.l_desc=new zb(e.dyn_ltree,Yb),e.d_desc=new zb(e.dyn_dtree,qb),e.bl_desc=new zb(e.bl_tree,Jb),e.bi_buf=0,e.bi_valid=0,iw(e)},pw=(e,t,i,n)=>{let r,s,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<Db;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),aw(e,e.l_desc),aw(e,e.d_desc),o=(e=>{let t;for(cw(e,e.dyn_ltree,e.l_desc.max_code),cw(e,e.dyn_dtree,e.d_desc.max_code),aw(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*Vb[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,s=e.static_len+3+7>>>3,s<=r&&(r=s)):r=s=i+5,i+4<=r&&-1!==t?hw(e,t,i,n):4===e.strategy||s===r?(Zb(e,2+(n?1:0),3),ow(e,Fb,Bb)):(Zb(e,4+(n?1:0),3),((e,t,i,n)=>{let r;for(Zb(e,t-257,5),Zb(e,i-1,5),Zb(e,n-4,4),r=0;r<n;r++)Zb(e,e.bl_tree[2*Vb[r]+1],3);dw(e,e.dyn_ltree,t-1),dw(e,e.dyn_dtree,i-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),ow(e,e.dyn_ltree,e.dyn_dtree)),iw(e),n&&nw(e)},_w=(e,t,i)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=i,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(Gb[i]+Db+1)]++,e.dyn_dtree[2*Xb(t)]++),e.sym_next===e.sym_end),Ew={_tr_init:uw,_tr_stored_block:hw,_tr_flush_block:pw,_tr_tally:_w,_tr_align:e=>{Zb(e,2,3),$b(e,256,Fb),(e=>{16===e.bi_valid?(Qb(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var mw=(e,t,i,n)=>{let r=65535&e|0,s=e>>>16&65535|0,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{r=r+t[n++]|0,s=s+r|0}while(--o);r%=65521,s%=65521}return r|s<<16|0};const fw=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var gw=(e,t,i,n)=>{const r=fw,s=n+i;e^=-1;for(let i=n;i<s;i++)e=e>>>8^r[255&(e^t[i])];return-1^e},Tw={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},Sw={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Rw,_tr_stored_block:Cw,_tr_flush_block:vw,_tr_tally:Iw,_tr_align:yw}=Ew,{Z_NO_FLUSH:Aw,Z_PARTIAL_FLUSH:bw,Z_FULL_FLUSH:ww,Z_FINISH:Ow,Z_BLOCK:Nw,Z_OK:Dw,Z_STREAM_END:Pw,Z_STREAM_ERROR:Lw,Z_DATA_ERROR:kw,Z_BUF_ERROR:Mw,Z_DEFAULT_COMPRESSION:Uw,Z_FILTERED:xw,Z_HUFFMAN_ONLY:Vw,Z_RLE:Fw,Z_FIXED:Bw,Z_DEFAULT_STRATEGY:jw,Z_UNKNOWN:Gw,Z_DEFLATED:Ww}=Sw,Hw=286,Kw=30,Yw=19,qw=2*Hw+1,Jw=15,zw=258,Xw=262,Qw=42,Zw=113,$w=666,eO=(e,t)=>(e.msg=Tw[t],t),tO=e=>2*e-(e>4?9:0),iO=e=>{let t=e.length;for(;--t>=0;)e[t]=0},nO=e=>{let t,i,n,r=e.w_size;t=e.hash_size,n=t;do{i=e.head[--n],e.head[n]=i>=r?i-r:0}while(--t);t=r,n=t;do{i=e.prev[--n],e.prev[n]=i>=r?i-r:0}while(--t)};let rO=(e,t,i)=>(t<<e.hash_shift^i)&e.hash_mask;const sO=e=>{const t=e.state;let i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))},oO=(e,t)=>{vw(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,sO(e.strm)},aO=(e,t)=>{e.pending_buf[e.pending++]=t},cO=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},dO=(e,t,i,n)=>{let r=e.avail_in;return r>n&&(r=n),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),i),1===e.state.wrap?e.adler=mw(e.adler,t,r,i):2===e.state.wrap&&(e.adler=gw(e.adler,t,r,i)),e.next_in+=r,e.total_in+=r,r)},lO=(e,t)=>{let i,n,r=e.max_chain_length,s=e.strstart,o=e.prev_length,a=e.nice_match;const c=e.strstart>e.w_size-Xw?e.strstart-(e.w_size-Xw):0,d=e.window,l=e.w_mask,h=e.prev,u=e.strstart+zw;let p=d[s+o-1],_=d[s+o];e.prev_length>=e.good_match&&(r>>=2),a>e.lookahead&&(a=e.lookahead);do{if(i=t,d[i+o]===_&&d[i+o-1]===p&&d[i]===d[s]&&d[++i]===d[s+1]){s+=2,i++;do{}while(d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&d[++s]===d[++i]&&s<u);if(n=zw-(u-s),s=u-zw,n>o){if(e.match_start=t,o=n,n>=a)break;p=d[s+o-1],_=d[s+o]}}}while((t=h[t&l])>c&&0!=--r);return o<=e.lookahead?o:e.lookahead},hO=e=>{const t=e.w_size;let i,n,r;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Xw)&&(e.window.set(e.window.subarray(t,t+t-n),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),nO(e),n+=t),0===e.strm.avail_in)break;if(i=dO(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=i,e.lookahead+e.insert>=3)for(r=e.strstart-e.insert,e.ins_h=e.window[r],e.ins_h=rO(e,e.ins_h,e.window[r+1]);e.insert&&(e.ins_h=rO(e,e.ins_h,e.window[r+3-1]),e.prev[r&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=r,r++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Xw&&0!==e.strm.avail_in)},uO=(e,t)=>{let i,n,r,s=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,o=0,a=e.strm.avail_in;do{if(i=65535,r=e.bi_valid+42>>3,e.strm.avail_out<r)break;if(r=e.strm.avail_out-r,n=e.strstart-e.block_start,i>n+e.strm.avail_in&&(i=n+e.strm.avail_in),i>r&&(i=r),i<s&&(0===i&&t!==Ow||t===Aw||i!==n+e.strm.avail_in))break;o=t===Ow&&i===n+e.strm.avail_in?1:0,Cw(e,0,0,o),e.pending_buf[e.pending-4]=i,e.pending_buf[e.pending-3]=i>>8,e.pending_buf[e.pending-2]=~i,e.pending_buf[e.pending-1]=~i>>8,sO(e.strm),n&&(n>i&&(n=i),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+n),e.strm.next_out),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n,e.block_start+=n,i-=n),i&&(dO(e.strm,e.strm.output,e.strm.next_out,i),e.strm.next_out+=i,e.strm.avail_out-=i,e.strm.total_out+=i)}while(0===o);return a-=e.strm.avail_in,a&&(a>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=a&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-a,e.strm.next_in),e.strstart),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),o?4:t!==Aw&&t!==Ow&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(r=e.window_size-e.strstart,e.strm.avail_in>r&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,r+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),r>e.strm.avail_in&&(r=e.strm.avail_in),r&&(dO(e.strm,e.window,e.strstart,r),e.strstart+=r,e.insert+=r>e.w_size-e.insert?e.w_size-e.insert:r),e.high_water<e.strstart&&(e.high_water=e.strstart),r=e.bi_valid+42>>3,r=e.pending_buf_size-r>65535?65535:e.pending_buf_size-r,s=r>e.w_size?e.w_size:r,n=e.strstart-e.block_start,(n>=s||(n||t===Ow)&&t!==Aw&&0===e.strm.avail_in&&n<=r)&&(i=n>r?r:n,o=t===Ow&&0===e.strm.avail_in&&i===n?1:0,Cw(e,e.block_start,i,o),e.block_start+=i,sO(e.strm)),o?3:1)},pO=(e,t)=>{let i,n;for(;;){if(e.lookahead<Xw){if(hO(e),e.lookahead<Xw&&t===Aw)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=rO(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-Xw&&(e.match_length=lO(e,i)),e.match_length>=3)if(n=Iw(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=rO(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=rO(e,e.ins_h,e.window[e.strstart+1]);else n=Iw(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(oO(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===Ow?(oO(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(oO(e,!1),0===e.strm.avail_out)?1:2},_O=(e,t)=>{let i,n,r;for(;;){if(e.lookahead<Xw){if(hO(e),e.lookahead<Xw&&t===Aw)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=rO(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-Xw&&(e.match_length=lO(e,i),e.match_length<=5&&(e.strategy===xw||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,n=Iw(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=rO(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(oO(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=Iw(e,0,e.window[e.strstart-1]),n&&oO(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=Iw(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===Ow?(oO(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(oO(e,!1),0===e.strm.avail_out)?1:2};function EO(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}const mO=[new EO(0,0,0,0,uO),new EO(4,4,8,4,pO),new EO(4,5,16,8,pO),new EO(4,6,32,32,pO),new EO(4,4,16,16,_O),new EO(8,16,32,32,_O),new EO(8,16,128,128,_O),new EO(8,32,128,256,_O),new EO(32,128,258,1024,_O),new EO(32,258,258,4096,_O)];function fO(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Ww,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*qw),this.dyn_dtree=new Uint16Array(2*(2*Kw+1)),this.bl_tree=new Uint16Array(2*(2*Yw+1)),iO(this.dyn_ltree),iO(this.dyn_dtree),iO(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(Jw+1),this.heap=new Uint16Array(2*Hw+1),iO(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*Hw+1),iO(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const gO=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==Qw&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==Zw&&t.status!==$w?1:0},TO=e=>{if(gO(e))return eO(e,Lw);e.total_in=e.total_out=0,e.data_type=Gw;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?Qw:Zw,e.adler=2===t.wrap?0:1,t.last_flush=-2,Rw(t),Dw},SO=e=>{const t=TO(e);var i;return t===Dw&&((i=e.state).window_size=2*i.w_size,iO(i.head),i.max_lazy_match=mO[i.level].max_lazy,i.good_match=mO[i.level].good_length,i.nice_match=mO[i.level].nice_length,i.max_chain_length=mO[i.level].max_chain,i.strstart=0,i.block_start=0,i.lookahead=0,i.insert=0,i.match_length=i.prev_length=2,i.match_available=0,i.ins_h=0),t},RO=(e,t,i,n,r,s)=>{if(!e)return Lw;let o=1;if(t===Uw&&(t=6),n<0?(o=0,n=-n):n>15&&(o=2,n-=16),r<1||r>9||i!==Ww||n<8||n>15||t<0||t>9||s<0||s>Bw||8===n&&1!==o)return eO(e,Lw);8===n&&(n=9);const a=new fO;return e.state=a,a.strm=e,a.status=Qw,a.wrap=o,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=r+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+3-1)/3),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<r+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=3*(a.lit_bufsize-1),a.level=t,a.strategy=s,a.method=i,SO(e)};var CO=(e,t)=>{if(gO(e)||t>Nw||t<0)return e?eO(e,Lw):Lw;const i=e.state;if(!e.output||0!==e.avail_in&&!e.input||i.status===$w&&t!==Ow)return eO(e,0===e.avail_out?Mw:Lw);const n=i.last_flush;if(i.last_flush=t,0!==i.pending){if(sO(e),0===e.avail_out)return i.last_flush=-1,Dw}else if(0===e.avail_in&&tO(t)<=tO(n)&&t!==Ow)return eO(e,Mw);if(i.status===$w&&0!==e.avail_in)return eO(e,Mw);if(i.status===Qw&&0===i.wrap&&(i.status=Zw),i.status===Qw){let t=Ww+(i.w_bits-8<<4)<<8,n=-1;if(n=i.strategy>=Vw||i.level<2?0:i.level<6?1:6===i.level?2:3,t|=n<<6,0!==i.strstart&&(t|=32),t+=31-t%31,cO(i,t),0!==i.strstart&&(cO(i,e.adler>>>16),cO(i,65535&e.adler)),e.adler=1,i.status=Zw,sO(e),0!==i.pending)return i.last_flush=-1,Dw}if(57===i.status)if(e.adler=0,aO(i,31),aO(i,139),aO(i,8),i.gzhead)aO(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),aO(i,255&i.gzhead.time),aO(i,i.gzhead.time>>8&255),aO(i,i.gzhead.time>>16&255),aO(i,i.gzhead.time>>24&255),aO(i,9===i.level?2:i.strategy>=Vw||i.level<2?4:0),aO(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(aO(i,255&i.gzhead.extra.length),aO(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=gw(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69;else if(aO(i,0),aO(i,0),aO(i,0),aO(i,0),aO(i,0),aO(i,9===i.level?2:i.strategy>=Vw||i.level<2?4:0),aO(i,3),i.status=Zw,sO(e),0!==i.pending)return i.last_flush=-1,Dw;if(69===i.status){if(i.gzhead.extra){let t=i.pending,n=(65535&i.gzhead.extra.length)-i.gzindex;for(;i.pending+n>i.pending_buf_size;){let r=i.pending_buf_size-i.pending;if(i.pending_buf.set(i.gzhead.extra.subarray(i.gzindex,i.gzindex+r),i.pending),i.pending=i.pending_buf_size,i.gzhead.hcrc&&i.pending>t&&(e.adler=gw(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex+=r,sO(e),0!==i.pending)return i.last_flush=-1,Dw;t=0,n-=r}let r=new Uint8Array(i.gzhead.extra);i.pending_buf.set(r.subarray(i.gzindex,i.gzindex+n),i.pending),i.pending+=n,i.gzhead.hcrc&&i.pending>t&&(e.adler=gw(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex=0}i.status=73}if(73===i.status){if(i.gzhead.name){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=gw(e.adler,i.pending_buf,i.pending-n,n)),sO(e),0!==i.pending)return i.last_flush=-1,Dw;n=0}t=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,aO(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=gw(e.adler,i.pending_buf,i.pending-n,n)),i.gzindex=0}i.status=91}if(91===i.status){if(i.gzhead.comment){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=gw(e.adler,i.pending_buf,i.pending-n,n)),sO(e),0!==i.pending)return i.last_flush=-1,Dw;n=0}t=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,aO(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=gw(e.adler,i.pending_buf,i.pending-n,n))}i.status=103}if(103===i.status){if(i.gzhead.hcrc){if(i.pending+2>i.pending_buf_size&&(sO(e),0!==i.pending))return i.last_flush=-1,Dw;aO(i,255&e.adler),aO(i,e.adler>>8&255),e.adler=0}if(i.status=Zw,sO(e),0!==i.pending)return i.last_flush=-1,Dw}if(0!==e.avail_in||0!==i.lookahead||t!==Aw&&i.status!==$w){let n=0===i.level?uO(i,t):i.strategy===Vw?((e,t)=>{let i;for(;;){if(0===e.lookahead&&(hO(e),0===e.lookahead)){if(t===Aw)return 1;break}if(e.match_length=0,i=Iw(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(oO(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Ow?(oO(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(oO(e,!1),0===e.strm.avail_out)?1:2})(i,t):i.strategy===Fw?((e,t)=>{let i,n,r,s;const o=e.window;for(;;){if(e.lookahead<=zw){if(hO(e),e.lookahead<=zw&&t===Aw)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,n=o[r],n===o[++r]&&n===o[++r]&&n===o[++r])){s=e.strstart+zw;do{}while(n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&r<s);e.match_length=zw-(s-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(i=Iw(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=Iw(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(oO(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Ow?(oO(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(oO(e,!1),0===e.strm.avail_out)?1:2})(i,t):mO[i.level].func(i,t);if(3!==n&&4!==n||(i.status=$w),1===n||3===n)return 0===e.avail_out&&(i.last_flush=-1),Dw;if(2===n&&(t===bw?yw(i):t!==Nw&&(Cw(i,0,0,!1),t===ww&&(iO(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),sO(e),0===e.avail_out))return i.last_flush=-1,Dw}return t!==Ow?Dw:i.wrap<=0?Pw:(2===i.wrap?(aO(i,255&e.adler),aO(i,e.adler>>8&255),aO(i,e.adler>>16&255),aO(i,e.adler>>24&255),aO(i,255&e.total_in),aO(i,e.total_in>>8&255),aO(i,e.total_in>>16&255),aO(i,e.total_in>>24&255)):(cO(i,e.adler>>>16),cO(i,65535&e.adler)),sO(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?Dw:Pw)},vO=(e,t)=>{let i=t.length;if(gO(e))return Lw;const n=e.state,r=n.wrap;if(2===r||1===r&&n.status!==Qw||n.lookahead)return Lw;if(1===r&&(e.adler=mw(e.adler,t,i,0)),n.wrap=0,i>=n.w_size){0===r&&(iO(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(i-n.w_size,i),0),t=e,i=n.w_size}const s=e.avail_in,o=e.next_in,a=e.input;for(e.avail_in=i,e.next_in=0,e.input=t,hO(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=rO(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,hO(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=o,e.input=a,e.avail_in=s,n.wrap=r,Dw},IO={deflateInit:(e,t)=>RO(e,t,Ww,15,8,jw),deflateInit2:RO,deflateReset:SO,deflateResetKeep:TO,deflateSetHeader:(e,t)=>gO(e)||2!==e.state.wrap?Lw:(e.state.gzhead=t,Dw),deflate:CO,deflateEnd:e=>{if(gO(e))return Lw;const t=e.state.status;return e.state=null,t===Zw?eO(e,kw):Dw},deflateSetDictionary:vO,deflateInfo:\"pako deflate (from Nodeca project)\"};const yO=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var AO={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)yO(i,t)&&(e[t]=i[t])}}return e},flattenChunks:e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i}};let bO=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){bO=!1}const wO=new Uint8Array(256);for(let e=0;e<256;e++)wO[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;wO[254]=wO[254]=1;var OO={string2buf:e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,s,o=e.length,a=0;for(r=0;r<o;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),a+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(a),s=0,r=0;s<a;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[s++]=i:i<2048?(t[s++]=192|i>>>6,t[s++]=128|63&i):i<65536?(t[s++]=224|i>>>12,t[s++]=128|i>>>6&63,t[s++]=128|63&i):(t[s++]=240|i>>>18,t[s++]=128|i>>>12&63,t[s++]=128|i>>>6&63,t[s++]=128|63&i);return t},buf2string:(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const s=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){s[r++]=t;continue}let o=wO[t];if(o>4)s[r++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?s[r++]=65533:t<65536?s[r++]=t:(t-=65536,s[r++]=55296|t>>10&1023,s[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&bO)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(s,r)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+wO[e[i]]>t?i:t}};var NO=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const DO=Object.prototype.toString,{Z_NO_FLUSH:PO,Z_SYNC_FLUSH:LO,Z_FULL_FLUSH:kO,Z_FINISH:MO,Z_OK:UO,Z_STREAM_END:xO,Z_DEFAULT_COMPRESSION:VO,Z_DEFAULT_STRATEGY:FO,Z_DEFLATED:BO}=Sw;function jO(e){this.options=AO.assign({level:VO,method:BO,chunkSize:16384,windowBits:15,memLevel:8,strategy:FO},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new NO,this.strm.avail_out=0;let i=IO.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==UO)throw new Error(Tw[i]);if(t.header&&IO.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e=\"string\"==typeof t.dictionary?OO.string2buf(t.dictionary):\"[object ArrayBuffer]\"===DO.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,i=IO.deflateSetDictionary(this.strm,e),i!==UO)throw new Error(Tw[i]);this._dict_set=!0}}function GO(e,t){const i=new jO(t);if(i.push(e,!0),i.err)throw i.msg||Tw[i.err];return i.result}jO.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize;let r,s;if(this.ended)return!1;for(s=t===~~t?t:!0===t?MO:PO,\"string\"==typeof e?i.input=OO.string2buf(e):\"[object ArrayBuffer]\"===DO.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;)if(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),(s===LO||s===kO)&&i.avail_out<=6)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else{if(r=IO.deflate(i,s),r===xO)return i.next_out>0&&this.onData(i.output.subarray(0,i.next_out)),r=IO.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===UO;if(0!==i.avail_out){if(s>0&&i.next_out>0)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else if(0===i.avail_in)break}else this.onData(i.output)}return!0},jO.prototype.onData=function(e){this.chunks.push(e)},jO.prototype.onEnd=function(e){e===UO&&(this.result=AO.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var WO={Deflate:jO,deflate:GO,deflateRaw:function(e,t){return(t=t||{}).raw=!0,GO(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,GO(e,t)},constants:Sw};const HO=16209;var KO=function(e,t){let i,n,r,s,o,a,c,d,l,h,u,p,_,E,m,f,g,T,S,R,C,v,I,y;const A=e.state;i=e.next_in,I=e.input,n=i+(e.avail_in-5),r=e.next_out,y=e.output,s=r-(t-e.avail_out),o=r+(e.avail_out-257),a=A.dmax,c=A.wsize,d=A.whave,l=A.wnext,h=A.window,u=A.hold,p=A.bits,_=A.lencode,E=A.distcode,m=(1<<A.lenbits)-1,f=(1<<A.distbits)-1;e:do{p<15&&(u+=I[i++]<<p,p+=8,u+=I[i++]<<p,p+=8),g=_[u&m];t:for(;;){if(T=g>>>24,u>>>=T,p-=T,T=g>>>16&255,0===T)y[r++]=65535&g;else{if(!(16&T)){if(0==(64&T)){g=_[(65535&g)+(u&(1<<T)-1)];continue t}if(32&T){A.mode=16191;break e}e.msg=\"invalid literal/length code\",A.mode=HO;break e}S=65535&g,T&=15,T&&(p<T&&(u+=I[i++]<<p,p+=8),S+=u&(1<<T)-1,u>>>=T,p-=T),p<15&&(u+=I[i++]<<p,p+=8,u+=I[i++]<<p,p+=8),g=E[u&f];i:for(;;){if(T=g>>>24,u>>>=T,p-=T,T=g>>>16&255,!(16&T)){if(0==(64&T)){g=E[(65535&g)+(u&(1<<T)-1)];continue i}e.msg=\"invalid distance code\",A.mode=HO;break e}if(R=65535&g,T&=15,p<T&&(u+=I[i++]<<p,p+=8,p<T&&(u+=I[i++]<<p,p+=8)),R+=u&(1<<T)-1,R>a){e.msg=\"invalid distance too far back\",A.mode=HO;break e}if(u>>>=T,p-=T,T=r-s,R>T){if(T=R-T,T>d&&A.sane){e.msg=\"invalid distance too far back\",A.mode=HO;break e}if(C=0,v=h,0===l){if(C+=c-T,T<S){S-=T;do{y[r++]=h[C++]}while(--T);C=r-R,v=y}}else if(l<T){if(C+=c+l-T,T-=l,T<S){S-=T;do{y[r++]=h[C++]}while(--T);if(C=0,l<S){T=l,S-=T;do{y[r++]=h[C++]}while(--T);C=r-R,v=y}}}else if(C+=l-T,T<S){S-=T;do{y[r++]=h[C++]}while(--T);C=r-R,v=y}for(;S>2;)y[r++]=v[C++],y[r++]=v[C++],y[r++]=v[C++],S-=3;S&&(y[r++]=v[C++],S>1&&(y[r++]=v[C++]))}else{C=r-R;do{y[r++]=y[C++],y[r++]=y[C++],y[r++]=y[C++],S-=3}while(S>2);S&&(y[r++]=y[C++],S>1&&(y[r++]=y[C++]))}break}}break}}while(i<n&&r<o);S=p>>3,i-=S,p-=S<<3,u&=(1<<p)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<o?o-r+257:257-(r-o),A.hold=u,A.bits=p};const YO=15,qO=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),JO=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),zO=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),XO=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var QO=(e,t,i,n,r,s,o,a)=>{const c=a.bits;let d,l,h,u,p,_,E=0,m=0,f=0,g=0,T=0,S=0,R=0,C=0,v=0,I=0,y=null;const A=new Uint16Array(16),b=new Uint16Array(16);let w,O,N,D=null;for(E=0;E<=YO;E++)A[E]=0;for(m=0;m<n;m++)A[t[i+m]]++;for(T=c,g=YO;g>=1&&0===A[g];g--);if(T>g&&(T=g),0===g)return r[s++]=20971520,r[s++]=20971520,a.bits=1,0;for(f=1;f<g&&0===A[f];f++);for(T<f&&(T=f),C=1,E=1;E<=YO;E++)if(C<<=1,C-=A[E],C<0)return-1;if(C>0&&(0===e||1!==g))return-1;for(b[1]=0,E=1;E<YO;E++)b[E+1]=b[E]+A[E];for(m=0;m<n;m++)0!==t[i+m]&&(o[b[t[i+m]]++]=m);if(0===e?(y=D=o,_=20):1===e?(y=qO,D=JO,_=257):(y=zO,D=XO,_=0),I=0,m=0,E=f,p=s,S=T,R=0,h=-1,v=1<<T,u=v-1,1===e&&v>852||2===e&&v>592)return 1;for(;;){w=E-R,o[m]+1<_?(O=0,N=o[m]):o[m]>=_?(O=D[o[m]-_],N=y[o[m]-_]):(O=96,N=0),d=1<<E-R,l=1<<S,f=l;do{l-=d,r[p+(I>>R)+l]=w<<24|O<<16|N|0}while(0!==l);for(d=1<<E-1;I&d;)d>>=1;if(0!==d?(I&=d-1,I+=d):I=0,m++,0==--A[E]){if(E===g)break;E=t[i+o[m]]}if(E>T&&(I&u)!==h){for(0===R&&(R=T),p+=f,S=E-R,C=1<<S;S+R<g&&(C-=A[S+R],!(C<=0));)S++,C<<=1;if(v+=1<<S,1===e&&v>852||2===e&&v>592)return 1;h=I&u,r[h]=T<<24|S<<16|p-s|0}}return 0!==I&&(r[p+I]=E-R<<24|64<<16|0),a.bits=T,0};const{Z_FINISH:ZO,Z_BLOCK:$O,Z_TREES:eN,Z_OK:tN,Z_STREAM_END:iN,Z_NEED_DICT:nN,Z_STREAM_ERROR:rN,Z_DATA_ERROR:sN,Z_MEM_ERROR:oN,Z_BUF_ERROR:aN,Z_DEFLATED:cN}=Sw,dN=16180,lN=16190,hN=16191,uN=16192,pN=16194,_N=16199,EN=16200,mN=16206,fN=16209,gN=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function TN(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const SN=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<dN||t.mode>16211?1:0},RN=e=>{if(SN(e))return rN;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=dN,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,tN},CN=e=>{if(SN(e))return rN;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,RN(e)},vN=(e,t)=>{let i;if(SN(e))return rN;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?rN:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,CN(e))},IN=(e,t)=>{if(!e)return rN;const i=new TN;e.state=i,i.strm=e,i.window=null,i.mode=dN;const n=vN(e,t);return n!==tN&&(e.state=null),n};let yN,AN,bN=!0;const wN=e=>{if(bN){yN=new Int32Array(512),AN=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(QO(1,e.lens,0,288,yN,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;QO(2,e.lens,0,32,AN,0,e.work,{bits:5}),bN=!1}e.lencode=yN,e.lenbits=9,e.distcode=AN,e.distbits=5},ON=(e,t,i,n)=>{let r;const s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),n>=s.wsize?(s.window.set(t.subarray(i-s.wsize,i),0),s.wnext=0,s.whave=s.wsize):(r=s.wsize-s.wnext,r>n&&(r=n),s.window.set(t.subarray(i-n,i-n+r),s.wnext),(n-=r)?(s.window.set(t.subarray(i-n,i),0),s.wnext=n,s.whave=s.wsize):(s.wnext+=r,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=r))),0};var NN=(e,t)=>{let i,n,r,s,o,a,c,d,l,h,u,p,_,E,m,f,g,T,S,R,C,v,I=0;const y=new Uint8Array(4);let A,b;const w=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(SN(e)||!e.output||!e.input&&0!==e.avail_in)return rN;i=e.state,i.mode===hN&&(i.mode=uN),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,h=a,u=c,v=tN;e:for(;;)switch(i.mode){case dN:if(0===i.wrap){i.mode=uN;break}for(;l<16;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(2&i.wrap&&35615===d){0===i.wbits&&(i.wbits=15),i.check=0,y[0]=255&d,y[1]=d>>>8&255,i.check=gw(i.check,y,2,0),d=0,l=0,i.mode=16181;break}if(i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg=\"incorrect header check\",i.mode=fN;break}if((15&d)!==cN){e.msg=\"unknown compression method\",i.mode=fN;break}if(d>>>=4,l-=4,C=8+(15&d),0===i.wbits&&(i.wbits=C),C>15||C>i.wbits){e.msg=\"invalid window size\",i.mode=fN;break}i.dmax=1<<i.wbits,i.flags=0,e.adler=i.check=1,i.mode=512&d?16189:hN,d=0,l=0;break;case 16181:for(;l<16;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(i.flags=d,(255&i.flags)!==cN){e.msg=\"unknown compression method\",i.mode=fN;break}if(57344&i.flags){e.msg=\"unknown header flags set\",i.mode=fN;break}i.head&&(i.head.text=d>>8&1),512&i.flags&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=gw(i.check,y,2,0)),d=0,l=0,i.mode=16182;case 16182:for(;l<32;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.head&&(i.head.time=d),512&i.flags&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,y[2]=d>>>16&255,y[3]=d>>>24&255,i.check=gw(i.check,y,4,0)),d=0,l=0,i.mode=16183;case 16183:for(;l<16;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.head&&(i.head.xflags=255&d,i.head.os=d>>8),512&i.flags&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=gw(i.check,y,2,0)),d=0,l=0,i.mode=16184;case 16184:if(1024&i.flags){for(;l<16;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.length=d,i.head&&(i.head.extra_len=d),512&i.flags&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=gw(i.check,y,2,0)),d=0,l=0}else i.head&&(i.head.extra=null);i.mode=16185;case 16185:if(1024&i.flags&&(p=i.length,p>a&&(p=a),p&&(i.head&&(C=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(s,s+p),C)),512&i.flags&&4&i.wrap&&(i.check=gw(i.check,n,p,s)),a-=p,s+=p,i.length-=p),i.length))break e;i.length=0,i.mode=16186;case 16186:if(2048&i.flags){if(0===a)break e;p=0;do{C=n[s+p++],i.head&&C&&i.length<65536&&(i.head.name+=String.fromCharCode(C))}while(C&&p<a);if(512&i.flags&&4&i.wrap&&(i.check=gw(i.check,n,p,s)),a-=p,s+=p,C)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=16187;case 16187:if(4096&i.flags){if(0===a)break e;p=0;do{C=n[s+p++],i.head&&C&&i.length<65536&&(i.head.comment+=String.fromCharCode(C))}while(C&&p<a);if(512&i.flags&&4&i.wrap&&(i.check=gw(i.check,n,p,s)),a-=p,s+=p,C)break e}else i.head&&(i.head.comment=null);i.mode=16188;case 16188:if(512&i.flags){for(;l<16;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(4&i.wrap&&d!==(65535&i.check)){e.msg=\"header crc mismatch\",i.mode=fN;break}d=0,l=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=hN;break;case 16189:for(;l<32;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}e.adler=i.check=gN(d),d=0,l=0,i.mode=lN;case lN:if(0===i.havedict)return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=d,i.bits=l,nN;e.adler=i.check=1,i.mode=hN;case hN:if(t===$O||t===eN)break e;case uN:if(i.last){d>>>=7&l,l-=7&l,i.mode=mN;break}for(;l<3;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}switch(i.last=1&d,d>>>=1,l-=1,3&d){case 0:i.mode=16193;break;case 1:if(wN(i),i.mode=_N,t===eN){d>>>=2,l-=2;break e}break;case 2:i.mode=16196;break;case 3:e.msg=\"invalid block type\",i.mode=fN}d>>>=2,l-=2;break;case 16193:for(d>>>=7&l,l-=7&l;l<32;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if((65535&d)!=(d>>>16^65535)){e.msg=\"invalid stored block lengths\",i.mode=fN;break}if(i.length=65535&d,d=0,l=0,i.mode=pN,t===eN)break e;case pN:i.mode=16195;case 16195:if(p=i.length,p){if(p>a&&(p=a),p>c&&(p=c),0===p)break e;r.set(n.subarray(s,s+p),o),a-=p,s+=p,c-=p,o+=p,i.length-=p;break}i.mode=hN;break;case 16196:for(;l<14;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(i.nlen=257+(31&d),d>>>=5,l-=5,i.ndist=1+(31&d),d>>>=5,l-=5,i.ncode=4+(15&d),d>>>=4,l-=4,i.nlen>286||i.ndist>30){e.msg=\"too many length or distance symbols\",i.mode=fN;break}i.have=0,i.mode=16197;case 16197:for(;i.have<i.ncode;){for(;l<3;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.lens[w[i.have++]]=7&d,d>>>=3,l-=3}for(;i.have<19;)i.lens[w[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,A={bits:i.lenbits},v=QO(0,i.lens,0,19,i.lencode,0,i.work,A),i.lenbits=A.bits,v){e.msg=\"invalid code lengths set\",i.mode=fN;break}i.have=0,i.mode=16198;case 16198:for(;i.have<i.nlen+i.ndist;){for(;I=i.lencode[d&(1<<i.lenbits)-1],m=I>>>24,f=I>>>16&255,g=65535&I,!(m<=l);){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(g<16)d>>>=m,l-=m,i.lens[i.have++]=g;else{if(16===g){for(b=m+2;l<b;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(d>>>=m,l-=m,0===i.have){e.msg=\"invalid bit length repeat\",i.mode=fN;break}C=i.lens[i.have-1],p=3+(3&d),d>>>=2,l-=2}else if(17===g){for(b=m+3;l<b;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}d>>>=m,l-=m,C=0,p=3+(7&d),d>>>=3,l-=3}else{for(b=m+7;l<b;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}d>>>=m,l-=m,C=0,p=11+(127&d),d>>>=7,l-=7}if(i.have+p>i.nlen+i.ndist){e.msg=\"invalid bit length repeat\",i.mode=fN;break}for(;p--;)i.lens[i.have++]=C}}if(i.mode===fN)break;if(0===i.lens[256]){e.msg=\"invalid code -- missing end-of-block\",i.mode=fN;break}if(i.lenbits=9,A={bits:i.lenbits},v=QO(1,i.lens,0,i.nlen,i.lencode,0,i.work,A),i.lenbits=A.bits,v){e.msg=\"invalid literal/lengths set\",i.mode=fN;break}if(i.distbits=6,i.distcode=i.distdyn,A={bits:i.distbits},v=QO(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,A),i.distbits=A.bits,v){e.msg=\"invalid distances set\",i.mode=fN;break}if(i.mode=_N,t===eN)break e;case _N:i.mode=EN;case EN:if(a>=6&&c>=258){e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=d,i.bits=l,KO(e,u),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,i.mode===hN&&(i.back=-1);break}for(i.back=0;I=i.lencode[d&(1<<i.lenbits)-1],m=I>>>24,f=I>>>16&255,g=65535&I,!(m<=l);){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(f&&0==(240&f)){for(T=m,S=f,R=g;I=i.lencode[R+((d&(1<<T+S)-1)>>T)],m=I>>>24,f=I>>>16&255,g=65535&I,!(T+m<=l);){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}d>>>=T,l-=T,i.back+=T}if(d>>>=m,l-=m,i.back+=m,i.length=g,0===f){i.mode=16205;break}if(32&f){i.back=-1,i.mode=hN;break}if(64&f){e.msg=\"invalid literal/length code\",i.mode=fN;break}i.extra=15&f,i.mode=16201;case 16201:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.length+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=16202;case 16202:for(;I=i.distcode[d&(1<<i.distbits)-1],m=I>>>24,f=I>>>16&255,g=65535&I,!(m<=l);){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(0==(240&f)){for(T=m,S=f,R=g;I=i.distcode[R+((d&(1<<T+S)-1)>>T)],m=I>>>24,f=I>>>16&255,g=65535&I,!(T+m<=l);){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}d>>>=T,l-=T,i.back+=T}if(d>>>=m,l-=m,i.back+=m,64&f){e.msg=\"invalid distance code\",i.mode=fN;break}i.offset=g,i.extra=15&f,i.mode=16203;case 16203:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}i.offset+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg=\"invalid distance too far back\",i.mode=fN;break}i.mode=16204;case 16204:if(0===c)break e;if(p=u-c,i.offset>p){if(p=i.offset-p,p>i.whave&&i.sane){e.msg=\"invalid distance too far back\",i.mode=fN;break}p>i.wnext?(p-=i.wnext,_=i.wsize-p):_=i.wnext-p,p>i.length&&(p=i.length),E=i.window}else E=r,_=o-i.offset,p=i.length;p>c&&(p=c),c-=p,i.length-=p;do{r[o++]=E[_++]}while(--p);0===i.length&&(i.mode=EN);break;case 16205:if(0===c)break e;r[o++]=i.length,c--,i.mode=EN;break;case mN:if(i.wrap){for(;l<32;){if(0===a)break e;a--,d|=n[s++]<<l,l+=8}if(u-=c,e.total_out+=u,i.total+=u,4&i.wrap&&u&&(e.adler=i.check=i.flags?gw(i.check,r,u,o-u):mw(i.check,r,u,o-u)),u=c,4&i.wrap&&(i.flags?d:gN(d))!==i.check){e.msg=\"incorrect data check\",i.mode=fN;break}d=0,l=0}i.mode=16207;case 16207:if(i.wrap&&i.flags){for(;l<32;){if(0===a)break e;a--,d+=n[s++]<<l,l+=8}if(4&i.wrap&&d!==(4294967295&i.total)){e.msg=\"incorrect length check\",i.mode=fN;break}d=0,l=0}i.mode=16208;case 16208:v=iN;break e;case fN:v=sN;break e;case 16210:return oN;default:return rN}return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=d,i.bits=l,(i.wsize||u!==e.avail_out&&i.mode<fN&&(i.mode<mN||t!==ZO))&&ON(e,e.output,e.next_out,u-e.avail_out),h-=e.avail_in,u-=e.avail_out,e.total_in+=h,e.total_out+=u,i.total+=u,4&i.wrap&&u&&(e.adler=i.check=i.flags?gw(i.check,r,u,e.next_out-u):mw(i.check,r,u,e.next_out-u)),e.data_type=i.bits+(i.last?64:0)+(i.mode===hN?128:0)+(i.mode===_N||i.mode===pN?256:0),(0===h&&0===u||t===ZO)&&v===tN&&(v=aN),v},DN={inflateReset:CN,inflateReset2:vN,inflateResetKeep:RN,inflateInit:e=>IN(e,15),inflateInit2:IN,inflate:NN,inflateEnd:e=>{if(SN(e))return rN;let t=e.state;return t.window&&(t.window=null),e.state=null,tN},inflateGetHeader:(e,t)=>{if(SN(e))return rN;const i=e.state;return 0==(2&i.wrap)?rN:(i.head=t,t.done=!1,tN)},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,s;return SN(e)?rN:(n=e.state,0!==n.wrap&&n.mode!==lN?rN:n.mode===lN&&(r=1,r=mw(r,t,i,0),r!==n.check)?sN:(s=ON(e,t,i,i),s?(n.mode=16210,oN):(n.havedict=1,tN)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var PN=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const LN=Object.prototype.toString,{Z_NO_FLUSH:kN,Z_FINISH:MN,Z_OK:UN,Z_STREAM_END:xN,Z_NEED_DICT:VN,Z_STREAM_ERROR:FN,Z_DATA_ERROR:BN,Z_MEM_ERROR:jN}=Sw;function GN(e){this.options=AO.assign({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new NO,this.strm.avail_out=0;let i=DN.inflateInit2(this.strm,t.windowBits);if(i!==UN)throw new Error(Tw[i]);if(this.header=new PN,DN.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=OO.string2buf(t.dictionary):\"[object ArrayBuffer]\"===LN.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=DN.inflateSetDictionary(this.strm,t.dictionary),i!==UN)))throw new Error(Tw[i])}function WN(e,t){const i=new GN(t);if(i.push(e),i.err)throw i.msg||Tw[i.err];return i.result}GN.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let s,o,a;if(this.ended)return!1;for(o=t===~~t?t:!0===t?MN:kN,\"[object ArrayBuffer]\"===LN.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),s=DN.inflate(i,o),s===VN&&r&&(s=DN.inflateSetDictionary(i,r),s===UN?s=DN.inflate(i,o):s===BN&&(s=VN));i.avail_in>0&&s===xN&&i.state.wrap>0&&0!==e[i.next_in];)DN.inflateReset(i),s=DN.inflate(i,o);switch(s){case FN:case BN:case VN:case jN:return this.onEnd(s),this.ended=!0,!1}if(a=i.avail_out,i.next_out&&(0===i.avail_out||s===xN))if(\"string\"===this.options.to){let e=OO.utf8border(i.output,i.next_out),t=i.next_out-e,r=OO.buf2string(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(s!==UN||0!==a){if(s===xN)return s=DN.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},GN.prototype.onData=function(e){this.chunks.push(e)},GN.prototype.onEnd=function(e){e===UN&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=AO.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var HN={Inflate:GN,inflate:WN,inflateRaw:function(e,t){return(t=t||{}).raw=!0,WN(e,t)},ungzip:WN,constants:Sw};const{Deflate:KN,deflate:YN,deflateRaw:qN,gzip:JN}=WO,{Inflate:zN,inflate:XN,inflateRaw:QN,ungzip:ZN}=HN;var $N,eD=YN,tD=XN;!function(e){e[e.ONE_BYTE=0]=\"ONE_BYTE\",e[e.TWO_BYTE=1]=\"TWO_BYTE\"}($N||($N={}));class iD{constructor(){nu(this,\"_sequence\",0),nu(this,\"_startTime\",Date.now()),nu(this,\"isUseOneByte\",!0)}get startTime(){const e=Date.now()-this._startTime;return e<Math.pow(2,16)?e:(this._startTime+=Math.pow(2,16),this.startTime)}get sequence(){return this._sequence<Math.pow(2,32)?this._sequence++:(this._sequence-=Math.pow(2,32),this.sequence)}serialize(e){const t={commonPacketHeader:{length:0,reserved:0,extension:0,sequence:this.sequence},commonStreamHeader:this.startTime,extension:void 0,payload:e};if(e.byteLength>128){const i=new Uint8Array(4);i.set([1,0,0,0]);const n={id:0,length:4,data:i.buffer},r={profile:this.isUseOneByte?0:1,length:this.isUseOneByte?5:6,datas:[n]};t.commonPacketHeader.extension=1,t.extension=r,t.payload=this.compress(e),t.commonPacketHeader.length=8+(t.extension.length+2)+t.payload.byteLength}else t.commonPacketHeader.length=8+t.payload.byteLength;const i=new ArrayBuffer(t.commonPacketHeader.length),n=new Uint8Array(i),r=new DataView(i);let s=0;if(r.setUint16(s,t.commonPacketHeader.extension<<15|t.commonPacketHeader.reserved<<14|t.commonPacketHeader.length,!0),s+=2,r.setUint32(s,t.commonPacketHeader.sequence,!0),s+=4,r.setUint16(s,t.commonStreamHeader,!0),s+=2,t.extension){const e=this.serializeExtension(t.extension);n.set(new Uint8Array(e),s),s+=e.byteLength}if(n.set(new Uint8Array(t.payload),s),s+=t.payload.byteLength,s!==t.commonPacketHeader.length)throw Error(\"serialize error!\");return i}deserialize(e){if(e.byteLength<4)return new ArrayBuffer(0);const t=new DataView(e);let i=0;const n=t.getUint16(i,!0);i+=2;const r=(32768&n)>>15;t.getUint16(i+2,!0),t.getUint16(i,!0);let s,o;if(i+=4,t.getUint16(i,!0),i+=2,r){o=this.deserializeExtension(e.slice(i)),i+=2+o.length,s=e.slice(i);let t=!1;if(o.datas.length>0){const e=o.datas.find((e=>0===e.id));if(e){t=1==(1&new DataView(e.data).getUint32(0,!0))}}s=t?this.decompress(s):s}else s=e.slice(8);return s}serializeExtension(e){const{profile:t,length:i,datas:n}=e,r=new ArrayBuffer(i+2),s=new Uint8Array(r),o=new DataView(r);let a=0;if(o.setUint8(a++,t),o.setUint8(a++,i),n.forEach((e=>{t?(o.setUint8(a++,e.id),o.setUint8(a++,e.length),s.set(new Uint8Array(e.data),a),a+=e.data.byteLength):(o.setUint8(a++,e.id|e.length<<4),s.set(new Uint8Array(e.data),a),a+=e.data.byteLength)})),a!==i+2)throw Error(\"serialize extension error, is \".concat(a,\"!==\").concat(i+2));return r}deserializeExtension(e){const t=new DataView(e);let i=0;const n=t.getUint8(i);i++;const r=t.getUint8(i);i++;const s=n===$N.TWO_BYTE,o=[],a=new DataView(e,2);let c=0;for(;c<r;){let e=0,t=0,i=new ArrayBuffer(0);s?(e=a.getUint8(c),c++,t=a.getUint8(c),c++):(e=15&a.getUint8(c),t=a.getUint8(c)>>4,c++),t>0&&(i=a.buffer.slice(c+2,c+2+t),c+=i.byteLength),o.push({id:e,length:t,data:i})}if(c!==r)throw Error(\"parse error\");return{profile:n,length:r,datas:o}}decompress(e){return tD(new Uint8Array(e))}compress(e){return eD(new Uint8Array(e))}}class nD extends iT{constructor(e,t){super(),nu(this,\"_version\",1),nu(this,\"_type\",3),nu(this,\"_config\",void 0),nu(this,\"_originDataChannel\",void 0),nu(this,\"_dataStreamPacketHeader\",new ArrayBuffer(4)),nu(this,\"_dataStreamPacketHandler\",void 0),nu(this,\"_datachannelEventMap\",new Map),this._config=e,t&&(this._originDataChannel=t,this._bandDataChannelEvents(t)),this._initPacketHeader(),this._dataStreamPacketHandler=new iD}get id(){return this._config.id}get ordered(){return this._config.ordered}get maxRetransmits(){return kC(\"DATASTREAM_MAX_RETRANSMITS\")}get metadata(){return this._config.metadata}get readyState(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.readyState)&&void 0!==e?e:\"connecting\"}get _originDataChannelId(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.id)&&void 0!==e?e:null}getChannelId(){return this.id}getConfig(){return this._config}_close(){this._originDataChannel&&(this._unbindDataChannelEvents(this._originDataChannel),this._originDataChannel=void 0)}async _waitTillOpen(){return new tg(((e,t)=>{if(this._originDataChannel){\"open\"===this._originDataChannel.readyState&&e();const i=setTimeout((()=>{var e;t(new Vg(xg.DATACHANNEL_CONNECTION_TIMEOUT,\"Cannot create datachannel, id: \".concat(null===(e=this._originDataChannel)||void 0===e?void 0:e.id)))}),1e4);this._originDataChannel.onopen=()=>{clearTimeout(i),this._originDataChannel&&this._bandDataChannelEvents(this._originDataChannel),e()},this._originDataChannel.onerror=()=>{throw clearTimeout(i),new Vg(xg.DATACHANNEL_CONNECTION_TIMEOUT)}}else t(new Vg(xg.DATACHANNEL_CONNECTION_TIMEOUT,\"cannot find dataChannel\"))}))}_updateOriginDataChannel(e){this._originDataChannel=e,this._bandDataChannelEvents(e)}_initPacketHeader(){const e=new DataView(this._dataStreamPacketHeader);e.setUint16(0,this._version),e.setUint8(2,this._type),e.setUint8(3,this._config.id)}_bandDataChannelEvents(e){this._unbindDataChannelEvents(e),[eA.OPEN,eA.CLOSE,eA.ERROR].forEach((t=>{const i=()=>{this.emit(t)};this._datachannelEventMap.set(t,i),e.addEventListener(t,i)}))}_unbindDataChannelEvents(e){Array.from(this._datachannelEventMap.entries()).forEach((t=>{let[i,n]=t;e.removeEventListener(i,n)})),this._datachannelEventMap.clear()}}class rD extends nD{constructor(e){super(e),nu(this,\"_messageListener\",void 0),this._messageListener=e=>{if(e.data.byteLength<this._dataStreamPacketHeader.byteLength)throw Error(\"invalid byteLength: the byte length must exceed \"+this._dataStreamPacketHeader.byteLength);const t=e.data.slice(0,this._dataStreamPacketHeader.byteLength);if(new DataView(t).getUint8(3)!==this.id)return;let i=e.data.slice(this._dataStreamPacketHeader.byteLength);i=this._dataStreamPacketHandler.deserialize(i),this.emit(eA.MESSAGE,i)}}_updateOriginDataChannel(e){super._updateOriginDataChannel(e),this._bandRemoteDataChannelEvents()}_close(){this._originDataChannel&&(this._originDataChannel.removeEventListener(\"message\",this._messageListener),super._close())}_bandRemoteDataChannelEvents(){this._originDataChannel&&this._originDataChannel.addEventListener(\"message\",this._messageListener)}}class sD extends nD{send(e){if(this._originDataChannel){let t=e;t=this._dataStreamPacketHandler.serialize(e);const i=new Uint8Array(this._dataStreamPacketHeader.byteLength+t.byteLength);i.set(new Uint8Array(this._dataStreamPacketHeader),0),i.set(new Uint8Array(t),this._dataStreamPacketHeader.byteLength),this._originDataChannel.send(i.buffer)}}}class oD extends iT{constructor(){super(...arguments),nu(this,\"resultStorage\",new Map)}setLocalAudioStats(e,t,i){this.record(\"AUDIO_INPUT_LEVEL_TOO_LOW\",e,this.checkAudioInputLevel(i,t)),this.record(\"SEND_AUDIO_BITRATE_TOO_LOW\",e,this.checkSendAudioBitrate(i,t))}setLocalVideoStats(e,t,i){this.record(\"SEND_VIDEO_BITRATE_TOO_LOW\",e,this.checkSendVideoBitrate(i,t)),this.record(\"FRAMERATE_INPUT_TOO_LOW\",e,this.checkFramerateInput(i,t)),this.record(\"FRAMERATE_SENT_TOO_LOW\",e,this.checkFramerateSent(i))}setRemoteAudioStats(e,t){const i=e.getUserId();this.record(\"AUDIO_OUTPUT_LEVEL_TOO_LOW\",i,this.checkAudioOutputLevel(t))}setRemoteVideoStats(e,t){const i=e.getUserId();this.record(\"RECV_VIDEO_DECODE_FAILED\",i,this.checkVideoDecode(t))}record(e,t,i){if(kC(\"STATS_UPDATE_INTERVAL\")>500)return;this.resultStorage.has(e)||this.resultStorage.set(e,{result:[],isPrevNormal:!0});const n=this.resultStorage.get(e);if(n&&(n.result.push(i),n.result.length>=5)){var r;const i=Pr(r=n.result).call(r,!0);n.isPrevNormal&&!i&&this.emit(\"exception\",aD[e],e,t),!n.isPrevNormal&&i&&this.emit(\"exception\",aD[e]+2e3,e+\"_RECOVER\",t),n.isPrevNormal=i,n.result=[]}}checkAudioOutputLevel(e){return!(e.receiveBitrate>0&&0===e.receiveLevel)}checkAudioInputLevel(e,t){return t instanceof tb&&!t.isActive||(!!t.muted||0!==e.sendVolumeLevel)}checkFramerateInput(e,t){let i=null;t._encoderConfig&&t._encoderConfig.frameRate&&(i=mD(t._encoderConfig.frameRate));const n=e.captureFrameRate;return!i||!n||!(i>10&&n<5||i<10&&i>=5&&n<=1)}checkFramerateSent(e){return!(e.captureFrameRate&&e.sendFrameRate&&e.captureFrameRate>5&&e.sendFrameRate<=1)}checkSendVideoBitrate(e,t){return!!t.muted||0!==e.sendBitrate}checkSendAudioBitrate(e,t){return t instanceof tb&&!t.isActive||(!!t.muted||0!==e.sendBitrate)}checkVideoDecode(e){return 0===e.receiveBitrate||0!==e.decodeFrameRate}}const aD={FRAMERATE_INPUT_TOO_LOW:1001,FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};const cD=new class{markSubscribeStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t))}markPublishStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t))}measureFromSubscribeStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}measureFromPublishStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}};function dD(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function lD(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?dD(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):dD(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class hD{constructor(e){nu(this,\"store\",void 0),nu(this,\"onStatsException\",void 0),nu(this,\"onUploadPublishDuration\",void 0),nu(this,\"onStatsChanged\",void 0),nu(this,\"localStats\",new Map),nu(this,\"remoteStats\",new Map),nu(this,\"updateStatsInterval\",void 0),nu(this,\"trafficStats\",void 0),nu(this,\"trafficStatsPeerList\",[]),nu(this,\"uplinkStats\",void 0),nu(this,\"exceptionMonitor\",void 0),nu(this,\"p2pChannel\",void 0),nu(this,\"scalabilityMode\",lv.L1T1),nu(this,\"updateStats\",(()=>{this.p2pChannel&&(this.updateRemoteStats(this.p2pChannel),this.updateLocalStats(this.p2pChannel))})),this.store=e,this.updateStatsInterval=window.setInterval(this.updateStats,1e3),this.exceptionMonitor=new oD,this.exceptionMonitor.on(\"exception\",((e,t,i)=>{this.onStatsException&&this.onStatsException(e,t,i)}))}reset(){this.localStats=new Map,this.remoteStats=new Map,this.trafficStats=void 0,this.trafficStatsPeerList=[],this.uplinkStats=void 0}getLocalAudioTrackStats(){return this.localStats.get(_I.LocalAudioTrack)||lD({},Wy)}getLocalVideoTrackStats(){return this.localStats.get(_I.LocalVideoTrack)||lD({},Hy)}getRemoteAudioTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppad+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.audioStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{audioStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRemoteNetworkQualityStats(e){const t={};if(e){var i;const n=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.networkStats;n&&(t[e]=n)}else Array.from(this.remoteStats.entries()).forEach((e=>{let[i,{networkStats:n}]=e;n&&(t[i]=n)}));return t}getRemoteVideoTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppvd+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.videoStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{videoStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRTCStats(){let e=0,t=0,i=0,n=0;const r=this.localStats.get(_I.LocalAudioTrack);r&&(e+=r.sendBytes,t+=r.sendBitrate);const s=this.localStats.get(_I.LocalVideoTrack);s&&(e+=s.sendBytes,t+=s.sendBitrate);const o=this.localStats.get(_I.LocalVideoLowTrack);o&&(e+=o.sendBytes,t+=o.sendBitrate),this.remoteStats.forEach((e=>{let{audioStats:t,videoStats:r}=e;t&&(i+=t.receiveBytes,n+=t.receiveBitrate),r&&(i+=r.receiveBytes,n+=r.receiveBitrate)}));let a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:t,SendBytes:e,RecvBytes:i,RecvBitrate:n,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1e3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}addLocalStats(e){this.localStats.set(e,void 0)}removeLocalStats(e){e?this.localStats.delete(e):this.localStats.clear()}addRemoteStats(e){this.remoteStats.set(e,{})}removeRemoteStats(e){e?this.remoteStats.delete(e):this.remoteStats.clear()}addP2PChannel(e){this.p2pChannel=e}updateTrafficStats(e){e.peer_delay=e.peer_delay.filter((e=>void 0!==e.B_ppad||void 0!==e.B_ppvd));e.peer_delay.filter((e=>-1===this.trafficStatsPeerList.indexOf(e.peer_uid))).forEach((e=>{var t;const i=null===(t=this.p2pChannel)||void 0===t?void 0:t.getRemoteMedia(e.peer_uid),n=null!=i&&i.videoSSRC?cD.measureFromSubscribeStart(this.store.clientId,i.videoSSRC):0,r=null!=i&&i.audioSSRC?cD.measureFromSubscribeStart(this.store.clientId,i.audioSSRC):0;void 0!==e.B_ppad&&void 0!==e.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(e.peer_uid,e.B_ppad,e.B_ppvd,n>r?n:r),this.trafficStatsPeerList.push(e.peer_uid))})),this.trafficStats=e}updateUplinkStats(e){this.uplinkStats&&this.uplinkStats.B_fir!==e.B_fir&&KC.debug(\"[\".concat(this.store.clientId,\"]: Period fir changes to \").concat(e.B_fir)),this.uplinkStats=e}static isRemoteVideoFreeze(e,t,i){if(!e)return!1;const n=!!i&&t.framesDecodeFreezeTime>i.framesDecodeFreezeTime,r=!i||t.framesDecodeCount>i.framesDecodeCount;return n||!r}static isRemoteAudioFreeze(e){return!!e&&e._isFreeze()}isLocalVideoFreeze(e){return!(!e.inputFrame||!e.sentFrame)&&(e.inputFrame.frameRate>5&&e.sentFrame.frameRate<3)}updateLocalStats(e){Array.from(this.localStats.entries()).forEach((t=>{let[i,n]=t;switch(i){case _I.LocalVideoTrack:case _I.LocalVideoLowTrack:{const t=n,s=lD({},Hy),o=e.getStats(),a=e.getLocalMedia(i);if(o){const i=o.videoSend.find((e=>e.ssrc===(null==a?void 0:a.ssrcs[0].ssrcId)));if(i){const n=e.getLocalVideoSize(),r=e.getEncoderConfig(_I.LocalVideoTrack);\"H264\"!==i.codec&&\"H265\"!==i.codec&&\"VP8\"!==i.codec&&\"VP9\"!==i.codec&&\"AV1X\"!==i.codec&&\"AV1\"!==i.codec||(s.codecType=i.codec),s.sendBytes=i.bytes,s.sendBitrate=t?8*Math.max(0,s.sendBytes-t.sendBytes):0,i.inputFrame?(s.captureFrameRate=i.inputFrame.frameRate,s.captureResolutionHeight=i.inputFrame.height,s.captureResolutionWidth=i.inputFrame.width):n&&(s.captureResolutionWidth=n.width,s.captureResolutionHeight=n.height),i.sentFrame?(s.sendFrameRate=i.sentFrame.frameRate,s.sendResolutionHeight=i.sentFrame.height,s.sendResolutionWidth=i.sentFrame.width):n&&(s.sendResolutionWidth=n.width,s.sendResolutionHeight=n.height),i.avgEncodeMs&&(s.encodeDelay=i.avgEncodeMs),r&&r.bitrateMax&&(s.targetSendBitrate=1e3*r.bitrateMax),s.sendPackets=i.packets,s.sendPacketsLost=i.packetsLost,s.sendJitterMs=i.jitterMs,s.sendRttMs=i.rttMs,s.totalDuration=t?t.totalDuration+1:1,s.totalFreezeTime=t?t.totalFreezeTime:0,this.isLocalVideoFreeze(i)&&(s.totalFreezeTime+=1),i.scalabilityMode&&this.scalabilityMode!==i.scalabilityMode&&(KC.debug(\"[\".concat(this.store.clientId,\"]: The scalabilityMode of the video sending stream is \").concat(i.scalabilityMode)),this.scalabilityMode=i.scalabilityMode)}this.trafficStats&&(s.currentPacketLossRate=(this.trafficStats.B_pvlr4||0)/100)}var r;if(this.localStats.set(i,s),(null==t?void 0:t.sendResolutionWidth)!==s.sendResolutionWidth||(null==t?void 0:t.sendResolutionHeight)!==s.sendResolutionHeight)null===(r=this.onStatsChanged)||void 0===r||r.call(this,\"resolution\",{width:s.sendResolutionWidth,height:s.sendResolutionHeight});s&&a&&this.exceptionMonitor.setLocalVideoStats(this.store.uid,a.track,s);break}case _I.LocalAudioTrack:{const t=n,r=lD({},Wy),s=e.getStats(),o=e.getLocalMedia(i);if(s){const i=s.audioSend.find((e=>e.ssrc===(null==o?void 0:o.ssrcs[0].ssrcId)));if(i){if(\"opus\"!==i.codec&&\"aac\"!==i.codec&&\"PCMU\"!==i.codec&&\"PCMA\"!==i.codec&&\"G722\"!==i.codec||(r.codecType=i.codec),i.inputLevel)r.sendVolumeLevel=Math.round(32767*i.inputLevel);else{const t=e.getLocalAudioVolume();t&&(r.sendVolumeLevel=Math.round(32767*t))}r.sendBytes=i.bytes,r.sendPackets=i.packets,r.sendPacketsLost=i.packetsLost,r.sendJitterMs=i.jitterMs,r.sendRttMs=i.rttMs,r.sendBitrate=t?8*Math.max(0,r.sendBytes-t.sendBytes):0}}this.trafficStats&&(r.currentPacketLossRate=(this.trafficStats.B_palr4||0)/100),this.localStats.set(_I.LocalAudioTrack,r),r&&o&&this.exceptionMonitor.setLocalAudioStats(this.store.uid,o.track,r);break}}}))}updateRemoteStats(e){Array.from(this.remoteStats.entries()).forEach((t=>{let[i,{videoStats:n,audioStats:r,videoPcStats:s}]=t;const o=r,a=n,c=s,d=lD({},Ky),l=lD({},qy),h=lD({},Yy),{audioTrack:u,videoTrack:p,audioSSRC:_,videoSSRC:E}=e.getRemoteMedia(i),m=e.getStats(),f=null==m?void 0:m.audioRecv.find((e=>e.ssrc===_)),g=null==m?void 0:m.videoRecv.find((e=>e.ssrc===E)),T=this.trafficStats&&this.trafficStats.peer_delay.find((e=>e.peer_uid===i));if(f&&(\"opus\"!==f.codec&&\"aac\"!==f.codec&&\"PCMU\"!==f.codec&&\"PCMA\"!==f.codec&&\"G722\"!==f.codec||(d.codecType=f.codec),f.outputLevel?d.receiveLevel=Math.round(32767*f.outputLevel):u&&(d.receiveLevel=Math.round(32767*u.getVolumeLevel())),d.receiveBytes=f.bytes,d.receivePackets=f.packets,d.receivePacketsLost=f.packetsLost,d.packetLossRate=d.receivePacketsLost/(d.receivePackets+d.receivePacketsLost),d.receiveBitrate=o?8*Math.max(0,d.receiveBytes-o.receiveBytes):0,d.totalDuration=o?o.totalDuration+1:1,d.totalFreezeTime=o?o.totalFreezeTime:0,d.freezeRate=d.totalFreezeTime/d.totalDuration,d.receiveDelay=f.jitterBufferMs,d.totalDuration>10&&hD.isRemoteAudioFreeze(u)&&(d.totalFreezeTime+=1)),g){\"H264\"!==g.codec&&\"H265\"!==g.codec&&\"VP8\"!==g.codec&&\"VP9\"!==g.codec&&\"AV1X\"!==g.codec&&\"AV1\"!==g.codec||(l.codecType=g.codec),l.receiveBytes=g.bytes,l.receiveBitrate=a?8*Math.max(0,l.receiveBytes-a.receiveBytes):0,l.decodeFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,l.renderFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,g.outputFrame&&(l.renderFrameRate=g.outputFrame.frameRate),g.receivedFrame?(l.receiveFrameRate=g.receivedFrame.frameRate,l.receiveResolutionHeight=g.receivedFrame.height,l.receiveResolutionWidth=g.receivedFrame.width):p&&(l.receiveResolutionHeight=p._videoHeight||0,l.receiveResolutionWidth=p._videoWidth||0),void 0!==g.framesRateFirefox&&(l.receiveFrameRate=Math.round(g.framesRateFirefox)),l.receivePackets=g.packets,l.receivePacketsLost=g.packetsLost,l.packetLossRate=l.receivePacketsLost/(l.receivePackets+l.receivePacketsLost),l.totalDuration=a?a.totalDuration+1:1,l.totalFreezeTime=a?a.totalFreezeTime:0,l.receiveDelay=g.jitterBufferMs||0;const t=!!E&&e.getRemoteVideoIsReady(E);p&&t&&hD.isRemoteVideoFreeze(p,g,c)&&(l.totalFreezeTime+=1),l.freezeRate=l.totalFreezeTime/l.totalDuration}T&&(d.end2EndDelay=T.B_ad,l.end2EndDelay=T.B_vd,d.transportDelay=T.B_ed,l.transportDelay=T.B_ed,d.currentPacketLossRate=T.B_ealr4/100,l.currentPacketLossRate=T.B_evlr4/100,h.uplinkNetworkQuality=T.B_punq?T.B_punq:0,h.downlinkNetworkQuality=T.B_pdnq?T.B_pdnq:0),this.remoteStats.set(i,{audioStats:d,videoStats:l,videoPcStats:g,networkStats:h}),u&&this.exceptionMonitor.setRemoteAudioStats(u,d),p&&this.exceptionMonitor.setRemoteVideoStats(p,l)}))}}function uD(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function pD(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?uD(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):uD(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function _D(e){return e.match(/^[\\.\\:\\d]+$/)?\"\".concat(e.replace(/[^\\d]/g,\"-\"),\".\").concat(kC(\"TURN_DOMAIN\")):(KC.info(\"Cannot recognized as IP address \".concat(e,\". Used As Host instead\")),e)}function ED(e,t){var i,n;const r=kC(\"GATEWAY_DOMAINS\");let s=r[1]&&-1!==t.indexOf(r[1])?1:0;e.addresses=e.addresses||[];const o=e.addresses.map((e=>e.domain_prefix?{address:\"\".concat(e.domain_prefix,\".\").concat(r[s++%r.length],\":\").concat(e.port)}:e.ip.match(/^[\\.\\:\\d]+$/)?{ip:e.ip,port:e.port,address:\"\".concat(e.ip.replace(/[^\\d]/g,\"-\"),\".\").concat(r[s++%r.length],\":\").concat(e.port)}:(KC.info(\"Cannot recognized as IP address \".concat(e.ip,\". Used As Host instead\")),{ip:e.ip,port:e.port,address:\"\".concat(e.ip,\":\").concat(e.port)})));if(null!==(i=e.detail)&&void 0!==i&&i[18]&&\"string\"==typeof(null===(n=e.detail)||void 0===n?void 0:n[18])){const t=e.detail[18],i=null==t?void 0:t.split(\";\");for(let e=0;e<i.length;e++){var a;const t=fy(a=i[e]).call(a);o[e]&&t&&(o[e].ip6=t)}}return{gatewayAddrs:o,uid:e.uid,cid:e.cid,cert:e.cert,vid:e.detail&&e.detail[8],uni_lbs_ip:e.detail&&e.detail[1],res:e,csIp:e.detail&&e.detail[502]}}function mD(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function fD(e){const t=e._encoderConfig;if(!t)return{};const i={resolution:t.width&&t.height?\"\".concat(mD(t.width),\"x\").concat(mD(t.height)):void 0,maxVideoBW:t.bitrateMax,minVideoBW:t.bitrateMin};return\"number\"==typeof t.frameRate?(i.maxFrameRate=t.frameRate,i.minFrameRate=t.frameRate):t.frameRate&&(i.maxFrameRate=t.frameRate.max||t.frameRate.ideal||t.frameRate.exact||t.frameRate.min,i.minFrameRate=t.frameRate.min||t.frameRate.ideal||t.frameRate.exact||t.frameRate.max),i}function gD(e){const t={connectionType:0,googRtt:e.rtt};switch(e.selectedCandidatePair.localCandidate.candidateType){case\"relay\":{const i=e.selectedCandidatePair.localCandidate.relayProtocol;\"udp\"===i&&(t.connectionType=1),\"tcp\"===i&&(t.connectionType=3),\"tls\"===i&&(t.connectionType=4);break}case\"srflx\":t.connectionType=2}return t}function TD(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0}function SD(e,t){let i,n,r;switch(t){case hy.CHOOSE_SERVER:n=4096,r=\"choose server\";break;case hy.CLOUD_PROXY:n=1048576,r=\"proxy\";break;case hy.CLOUD_PROXY_5:n=4194304,r=\"proxy5\";break;case hy.CLOUD_PROXY_FALLBACK:n=4194310,r=\"proxy fallback\";break;default:throw new xv(xg.UNEXPECTED_ERROR,\"multi unlibs response transformer get unknown service id\",{csIp:e.detail&&e.detail[502],retry:!1})}if(e.response_body.forEach((t=>{t.buffer&&t.buffer.flag===n&&(i={code:t.buffer.code,addresses:(t.buffer.edges_services||[]).map((e=>pD(pD({},e),{},{ticket:t.buffer.cert}))),server_ts:e.enter_ts,uid:t.buffer.uid,cid:t.buffer.cid,cname:t.buffer.cname,detail:pD(pD({},t.buffer.detail),e.detail),flag:t.buffer.flag,opid:e.opid,cert:t.buffer.cert})})),!i)throw new xv(xg.MULTI_UNILBS_RESPONSE_ERROR,\"cannot parse response \".concat(r,\" from multi unilbs response\"),{csIp:e.detail&&e.detail[502]});return i}async function RD(e,t){return await tg.all(e.addresses.map((async e=>({address:_D(e.ip),tcpport:e.port,udpport:e.port,username:t&&kC(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?t.toString():ov.username,password:t&&kC(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?await tT(t.toString()):ov.password}))))}function CD(e,t){const i=t._videoHeight||t.getMediaStreamTrack(!0).getSettings().height;return i?Math.max(i/mD(e.height),1):(KC.warning(\"can't get ori-track's height, default scale down 4 times for low stream\"),4)}function vD(e){let{candidateType:t,relayProtocol:i,type:n,address:r,port:s,protocol:o}=e;return\"local-candidate\"===n?{candidateType:t,relayProtocol:i,protocol:o}:{candidateType:t,relayProtocol:i,address:r,port:s,protocol:o}}function ID(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class yD extends iT{get url(){return this._url?this._url:null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){var t;Pr(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(CI.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(CI.CONNECTED):\"closed\"===this._state?this.emit(CI.CLOSED):\"failed\"===this._state&&this.emit(CI.FAILED))}constructor(e,t,i,n){super(),nu(this,\"connectionID\",0),nu(this,\"currentURLIndex\",0),nu(this,\"reconnectReason\",void 0),nu(this,\"_reconnectMode\",\"tryNext\"),nu(this,\"_name\",void 0),nu(this,\"_state\",\"closed\"),nu(this,\"_retryConfig\",void 0),nu(this,\"_reconnectCount\",0),nu(this,\"_forceCloseTimeout\",5e3),nu(this,\"_onlineReconnectListener\",void 0),nu(this,\"_closeEstablishingTransmitter\",(()=>{})),nu(this,\"_store\",void 0),nu(this,\"_joinChannelServiceRecordIndex\",void 0),nu(this,\"_useCompress\",void 0),nu(this,\"_inflateLength\",0),nu(this,\"_deflateLength\",0),this._store=n,this._name=e,this._retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ID(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ID(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this._useCompress=i}resetReconnectCount(e){KC.debug(\"\".concat(this._name,\" reset reconnect count, reason: \").concat(e)),this._reconnectCount=0}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),this._reconnectInterrupter&&this._reconnectInterrupter(),this._transmitter){this._transmitter.onclose=null,this._transmitter.onopen=null,this._transmitter.onmessage=null;const e=this._transmitter;t?setTimeout((()=>e.close()),500):e.close(),this._transmitter=void 0}this.state=e?\"failed\":\"closed\",this._closeEstablishingTransmitter&&this._closeEstablishingTransmitter()}reconnect(e,t){if(!this._transmitter)return void KC.warning(\"[\".concat(this._name,\"] can not reconnect, no websocket\"));var i;(void 0!==e&&(this.reconnectMode=e),KC.debug(\"[\".concat(this._name,\"] reconnect is triggered initiative\")),\"number\"==typeof this._joinChannelServiceRecordIndex)&&(null===(i=this._store)||void 0===i||i.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this._joinChannelServiceRecordIndex));const n=this._transmitter.onclose;this._transmitter.onclose=null,this._transmitter.close(),n&&n.bind(this._transmitter)({code:9999,reason:t})}getInflateData(){const e=this._inflateLength,t=this._deflateLength;return this.clearInflateData(),{inflateLength:e,deflateLength:t}}setInflateData(e){this._deflateLength=this._deflateLength+e.originLength,this._inflateLength=this._inflateLength+e.compressedLength}clearInflateData(){this._inflateLength=0,this._deflateLength=0}}var AD;!function(e){e[e.Default=0]=\"Default\",e[e.Ack=1]=\"Ack\"}(AD||(AD={}));class bD{constructor(e,t,i){nu(this,\"version\",1),nu(this,\"initialRTO\",void 0),nu(this,\"maxBatchAckCount\",void 0),nu(this,\"maxRTO\",void 0),nu(this,\"initialRTT\",void 0),nu(this,\"ID\",void 0),nu(this,\"rtt\",void 0),nu(this,\"packetNumber\",1),nu(this,\"rtoRatioMap\",new Map),nu(this,\"timeoutMap\",new Map),nu(this,\"unorderedPacketQueue\",[]),nu(this,\"batchAckPacketQueue\",[]),nu(this,\"lastOrderedPacketNumber\",0),nu(this,\"batchAckTimer\",void 0),nu(this,\"sendImpl\",void 0),nu(this,\"receiveImpl\",void 0),this.sendImpl=e,this.receiveImpl=t,this.ID=xT(7,\"transmitter-\"),this.initialRTO=void 0!==(null==i?void 0:i.initialRTO)?i.initialRTO:kC(\"TRANSMITTER_INITIAL_RTO\"),this.initialRTT=void 0!==(null==i?void 0:i.initialRTT)?i.initialRTT:kC(\"TRANSMITTER_INITIAL_RTT\"),this.rtt=void 0!==(null==i?void 0:i.initialRTT)?i.initialRTT:kC(\"TRANSMITTER_INITIAL_RTT\"),this.maxBatchAckCount=void 0!==(null==i?void 0:i.maxBatchAckCount)?i.maxBatchAckCount:kC(\"TRANSMITTER_MAX_BATCH_ACK_COUNT\"),this.maxRTO=void 0!==(null==i?void 0:i.maxRTO)?i.maxRTO:kC(\"TRANSMITTER_MAX_RTO\")}packetize(e,t){return{type:AD.Default,version:this.version,packetNumber:t,payload:e}}serialize(e){switch(e.type){case AD.Default:{let t;if(\"string\"==typeof e.payload){t=(new TextEncoder).encode(e.payload)}else t=e.payload;const i=new ArrayBuffer(t.length+15),n=new DataView(i);n.setUint16(0,e.version),n.setUint8(2,e.type),n.setUint32(3,e.packetNumber),Jg(n,7,BigInt(e.sendTs));return new Uint8Array(n.buffer).set(t,15),i}case AD.Ack:{const t=new ArrayBuffer(16),i=new DataView(t);return i.setUint16(0,e.version),i.setUint8(2,e.type),i.setUint32(3,e.maxAckPacketNumber),i.setUint8(7,e.shift),Jg(i,8,BigInt(e.ackSendTs)),t}}}deserialize(e){const t=new DataView(e),i=t.getUint16(0),n=t.getUint8(2);switch(n){case AD.Default:{const r=t.getUint32(3),s=qg(t,7),o=e.slice(15),a=(new TextDecoder).decode(o);return{version:i,type:n,packetNumber:r,sendTs:Number(s),payload:a}}case AD.Ack:{const e=t.getUint32(3),r=t.getUint8(7),s=qg(t,8);return{version:i,type:n,maxAckPacketNumber:e,shift:r,ackSendTs:Number(s)}}default:throw KC.error(\"[\".concat(this.ID,\"] Unrecognized packet type \").concat(n)),new Error(\"Unrecognized packet type \".concat(n))}}sendMessage(e){const t=this.packetize(e,this.packetNumber);this.packetNumber=4294967295===this.packetNumber?1:this.packetNumber+1;const i=this.calculateRTO(t),n=window.setTimeout((()=>{this.resendMessage(t)}),i);this.timeoutMap.set(t.packetNumber,n),this.sendPacket(t)}onData(e){const t=this.deserialize(e);t.type===AD.Default?this.ack(t):t.type===AD.Ack&&(this.updateRTT(t,Math.round(performance.now())),this.clearRTO(t))}close(){this.rtt=this.initialRTT,this.packetNumber=1,Array.from(this.timeoutMap.entries()).forEach((e=>{let[t,i]=e;window.clearTimeout(i)})),this.timeoutMap=new Map,this.rtoRatioMap=new Map,this.unorderedPacketQueue=[],this.batchAckPacketQueue=[],this.lastOrderedPacketNumber=0,void 0!==this.batchAckTimer&&window.clearTimeout(this.batchAckTimer)}resendMessage(e){const t=this.calculateRTO(e),i=window.setTimeout((()=>{this.resendMessage(e)}),t);this.timeoutMap.set(e.packetNumber,i),this.sendPacket(e)}calculateRTO(e){const t=this.rtoRatioMap.get(e.packetNumber);if(void 0===t)return this.rtoRatioMap.set(e.packetNumber,1),this.initialRTO;{const i=9*this.rtt/8*t;return this.rtoRatioMap.set(e.packetNumber,t+1),i>this.maxRTO?this.maxRTO:i}}updateRTT(e,t){const i=e.ackSendTs;this.rtt=this.rtt*(7/8)+(t-i-this.rtt)/8}ack(e){if(e.packetNumber===this.lastOrderedPacketNumber+1)for(this.batchAckPacketQueue.length>=this.maxBatchAckCount&&this.batchAck(),this.batchAckTimer?this.batchAckPacketQueue.push(e):(this.batchAckPacketQueue.push(e),this.batchAckTimer=window.setTimeout((()=>{this.batchAck()}),this.rtt/8)),this.lastOrderedPacketNumber+=1,this.receiveImpl(e.payload);;){const e=this.unorderedPacketQueue[0];if(!e){this.unorderedPacketQueue.shift();break}this.batchAckTimer&&this.batchAck(),this.receiveImpl(e.payload),this.unorderedPacketQueue.shift(),this.lastOrderedPacketNumber+=1}else if(e.packetNumber<=this.lastOrderedPacketNumber){const t={ackSendTs:e.sendTs,maxAckPacketNumber:e.packetNumber,shift:0,type:AD.Ack,version:this.version};this.sendPacket(t)}else if(e.packetNumber>this.lastOrderedPacketNumber){this.unorderedPacketQueue[e.packetNumber-this.lastOrderedPacketNumber-2]=e;const t={ackSendTs:e.sendTs,maxAckPacketNumber:e.packetNumber,shift:0,type:AD.Ack,version:this.version};this.sendPacket(t)}}batchAck(){window.clearTimeout(this.batchAckTimer),this.batchAckTimer=void 0;const e={ackSendTs:this.batchAckPacketQueue[this.batchAckPacketQueue.length-1].sendTs,maxAckPacketNumber:this.batchAckPacketQueue[this.batchAckPacketQueue.length-1].packetNumber,shift:this.batchAckPacketQueue.length-1,type:AD.Ack,version:this.version};this.sendPacket(e),this.batchAckPacketQueue=[]}sendPacket(e){e.type===AD.Default&&(e.sendTs=Math.round(performance.now()));const t=this.serialize(e);this.sendImpl(t)}clearRTO(e){for(let t=e.maxAckPacketNumber-e.shift;t<=e.maxAckPacketNumber;t++){const e=this.timeoutMap.get(t);void 0!==e&&window.clearTimeout(e),this.timeoutMap.delete(t),this.rtoRatioMap.delete(t)}}}class wD extends yD{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3?arguments[3]:void 0),nu(this,\"_initMutex\",void 0),nu(this,\"_reconnectInterrupter\",void 0),nu(this,\"_url\",void 0),nu(this,\"_transmitter\",void 0),nu(this,\"_addresses\",void 0),nu(this,\"_reliableTransmission\",void 0),this._initMutex=new YT(\"datachannel\");const{timeout:i,timeoutFactor:n}=t,r=Math.max(300,Math.floor(3*i/5)),s=Math.max(1.2,Math.floor(8*n)/10);hT.ONLINE&&(this._retryConfig.timeout=r,this._retryConfig.timeoutFactor=s),RT.on(uT.NETWORK_STATE_CHANGE,((e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===hT.ONLINE?(this._retryConfig.timeout=r,this._retryConfig.timeoutFactor=s):(this._retryConfig.timeout=i,this._retryConfig.timeoutFactor=n))}))}getConnection(){if(this._reliableTransmission)return this._reliableTransmission}async init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._forceCloseTimeout=t;const i=(t,i)=>{this._addresses=e,this.currentURLIndex=this._addresses.findIndex((e=>e.fingerprint||kC(\"FINGERPRINT\")));const n=this._addresses[this.currentURLIndex];this.state=\"connecting\",this.createTransmitterConnection(n).then(t).catch(i),this.once(CI.CLOSED,(()=>i(new xv(xg.WS_DISCONNECT)))),this.once(CI.CONNECTED,(()=>t()))};return this._initMutex.lock().then((e=>new tg(((e,t)=>{i(e,t)})).then((()=>{e()})).catch((()=>{e()}))))}sendMessage(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this._transmitter||!this._reliableTransmission)throw new xv(xg.WS_ABORT,\"datachannel is not ready\");try{t||(e=JSON.stringify(e)),this._reliableTransmission.sendMessage(e)}catch(e){throw new xv(xg.WS_ERR,\"send datachannel signal message error\"+e.toString())}}unbindDcCloseEventListener(){this._transmitter&&(this._transmitter.onclose=null)}sendMessageWithJSON(e){const t=JSON.stringify(e);return{compressed:t,compressedLength:t.length,origin:e}}sendMessageWithUint8Array(e){return{compressed:e,compressedLength:e.byteLength,origin:e}}createTransmitterConnection(e){return this.connectionID+=1,this._joinChannelServiceRecordIndex=void 0,this._url=\"dc://\".concat(e.ip,\":\").concat(e.port),new tg(((t,i)=>{var n;const r=()=>{KC.debug(\"[\".concat(this._name,\"] datachannel opened:\"),this._url),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),t()},s=async e=>{var n;if(null===(n=this._closeEstablishingTransmitter)||void 0===n||n.call(this),KC.debug(\"[\".concat(this._name,\"] datachannel close \").concat(this._url,\", code: \").concat(e.code,\", reason: \").concat(e.reason,\", current mode: \").concat(this.reconnectMode)),this._reconnectCount<this._retryConfig.maxRetryCount){\"connected\"===this.state&&(this.reconnectReason=e.reason,this.state=\"reconnecting\");const n=TT(this,CI.WILL_RECONNECT,this.reconnectMode)||this.reconnectMode,r=await this.reconnectWithAction(n);if(\"closed\"===this.state)return void KC.debug(\"[\".concat(this.connectionID,\"] dc is closed, no need to reconnect\"));if(!r)return i(new xv(xg.WS_DISCONNECT,\"datachannel reconnect failed: \".concat(e.code))),void this.close(!0);t()}else i(new xv(xg.WS_DISCONNECT,\"datachannel close: \".concat(e.code))),this.close()},o=e=>{var t;null===(t=this._reliableTransmission)||void 0===t||t.onData(e.data)};this._transmitter&&(this._transmitter.onclose=null,this._transmitter.close()),this._reliableTransmission&&(this._reliableTransmission.close(),this._reliableTransmission=void 0),KC.debug(\"[\".concat(this._name,\"] start connect, address: \").concat(JSON.stringify(e)));const a=null===(n=this._store)||void 0===n?void 0:n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"}),c=Date.now();fT(this,CI.TO_CONNECT_DATACHANNEL,e).then((e=>{var t,i;if(!e)throw new Error(\"transmissonInfo not exist yet\");const{transmitter:n,close:d}=e;this._transmitter=n,null===(t=this._store)||void 0===t||t.signalChannelOpen();const l=Date.now()-c;KC.debug(\"[choose dc] dc open cost \".concat(l,\"ms\"));this._reliableTransmission=new bD((e=>{var t;this._transmitter&&\"open\"===this._transmitter.readyState&&(null===(t=this._transmitter)||void 0===t||t.send(e))}),(e=>{\"string\"==typeof e&&this.emit(CI.ON_MESSAGE,e)})),this._closeEstablishingTransmitter=()=>{var e;null===(e=this._reliableTransmission)||void 0===e||e.close(),this._reliableTransmission=void 0,d()},r&&r(),n.onclose=s,n.onmessage=o,null===(i=this._store)||void 0===i||i.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),this._joinChannelServiceRecordIndex=a})).catch((e=>{var t;if(null===(t=this._store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:e instanceof xv&&e.code===xg.WS_ABORT?\"aborted\":\"error\",errors:[e]},a),\"closed\"!==this.state){if(e instanceof xv&&e.code===xg.WS_ERR){const t=new xv(xg.WS_ERR,\"init datachannel failed! Error: \".concat(e.toString()));return KC.error(\"[\".concat(this._name,\"]\").concat(t)),void i(t)}s&&s(e)}else i(new xv(xg.WS_DISCONNECT,\"datachannel is closed: \".concat(e.toString())))}))}))}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this._reconnectCount>=this._retryConfig.maxRetryCount)return!1;if(!this._addresses)return!1;if(\"closed\"===this.state)return!1;this._onlineReconnectListener||RT.networkState!==hT.OFFLINE||(this._onlineReconnectListener=RT.onlineWaiter&&RT.onlineWaiter.then((()=>{this._onlineReconnectListener=void 0})));let i=!0;if(this._reconnectInterrupter=()=>{i=!1},t){const t=zT(this._reconnectCount,this._retryConfig);KC.debug(\"[\".concat(this._name,\"] wait \").concat(t,\"ms to reconnect datachannel, mode: \").concat(e)),await tg.race([UT(t),this._onlineReconnectListener||new tg((()=>{}))])}if(\"closed\"===this.state||!i)return!1;this._reconnectCount+=1;const n=async(e,t)=>{this.emit(CI.RECONNECT_CREATE_CONNECTION,t),await this.createTransmitterConnection(e)};try{if(\"retry\"===e){const t=this._addresses[this.currentURLIndex];this.emit(CI.RECONNECT_WAITTING_FINISH,e),await n(t,e)}else if(\"tryNext\"===e){this.currentURLIndex+=1;for(let e=this.currentURLIndex;e<this._addresses.length;e++){if(this._addresses[e].fingerprint||kC(\"FINGERPRINT\")){this.currentURLIndex=e;break}this.currentURLIndex+=1}if(this.currentURLIndex>=this._addresses.length)return KC.debug(\"[\".concat(this._name,\"] the available addresses are exhausted, change to recover\")),await this.reconnectWithAction(\"recover\",!1);KC.debug(\"[\".concat(this._name,\"] datachannel url length: \").concat(this._addresses.length,\" current index: \").concat(this.currentURLIndex));const t=this._addresses[this.currentURLIndex];this.emit(CI.RECONNECT_WAITTING_FINISH,e),await n(t,e)}else\"recover\"===e&&(KC.debug(\"[\".concat(this._name,\"] start to failback to websocket\")),this.resetReconnectCount(\"recover mode\"),this.emit(CI.RECONNECT_WAITTING_FINISH,e),this.emit(CI.FAILBACK));return!0}catch(i){var r,s;return KC.error(\"[\".concat(this._name,\"] reconnect failed\"),i.toString()),null!=i&&null!==(r=i.data)&&void 0!==r&&r.desc&&Array.isArray(i.data.desc)&&i.data.desc.length&&Pr(s=i.data.desc).call(s,\"dynamic key expired\")?(this.emit(CI.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):await this.reconnectWithAction(e,t)}}}class OD extends iT{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===fv.CONNECTED?this.emit(gv.WS_CONNECTED):e===fv.RECONNECTING?this.emit(gv.WS_RECONNECTING,this._websocketReconnectReason):e===fv.CLOSED&&this.emit(gv.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket?this.websocket.url:null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),nu(this,\"_disconnectedReason\",void 0),nu(this,\"_websocketReconnectReason\",void 0),nu(this,\"_connectionState\",fv.CLOSED),nu(this,\"reconnectToken\",void 0),nu(this,\"websocket\",void 0),nu(this,\"openConnectionTime\",void 0),nu(this,\"clientId\",void 0),nu(this,\"lastMsgTime\",Date.now()),nu(this,\"uploadCache\",[]),nu(this,\"uploadCacheInterval\",void 0),nu(this,\"rttRolling\",new dS(5)),nu(this,\"pingpongTimer\",void 0),nu(this,\"inflateDataTimer\",void 0),nu(this,\"pingpongTimeoutCount\",0),nu(this,\"joinResponse\",void 0),nu(this,\"multiIpOption\",void 0),nu(this,\"initError\",void 0),nu(this,\"spec\",void 0),nu(this,\"store\",void 0),nu(this,\"onWebsocketMessage\",(e=>{if(e instanceof ArrayBuffer)return void this.emit(gv.ON_BINARY_DATA,e);const t=JSON.parse(e);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")&&(this.emit(t._type,t._message),t._type===Rv.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===Rv.ON_USER_BANNED))switch(t._message.error_code){case 14:this.close(cT.UID_BANNED);break;case 15:this.close(cT.IP_BANNED);break;case 16:this.close(cT.CHANNEL_BANNED)}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new wD(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===fv.CONNECTED&&this.reconnect(\"retry\",RI.OFFLINE)}))}async request(e,t,i,n){const r=xT(6,\"\"),s={_id:r,_type:e,_message:t},o=this.websocket.connectionID,a=()=>new tg(((t,i)=>{if(this.connectionState===fv.CONNECTED)return t();const n=()=>{this.off(gv.WS_CLOSED,r),t()},r=()=>{this.off(gv.WS_CONNECTED,n),i(new xv(xg.WS_ABORT))};this.once(gv.WS_CONNECTED,n),this.once(gv.WS_CLOSED,r),e!==Tv.PUBLISH&&e!==Tv.SUBSCRIBE&&e!==Tv.UNSUBSCRIBE&&e!==Tv.UNPUBLISH&&e!==Tv.CONTROL&&e!==Tv.RESTART_ICE||this.once(gv.DISCONNECT_P2P,(()=>{i(new xv(xg.DISCONNECT_P2P))})),e!==Tv.PUBLISH&&e!==Tv.RESTART_ICE||this.once(gv.ABORT_P2P_EXECUTION,(()=>{i(new xv(xg.DISCONNECT_P2P))}))}));if(this.connectionState!==fv.CONNECTING&&this.connectionState!==fv.RECONNECTING||e===Tv.JOIN||e===Tv.REJOIN||await a(),e===Tv.LEAVE&&(this.websocket.unbindDcCloseEventListener(),n=!0),this.websocket.sendMessage(s,!0,!1),n)return;const c=new tg(((i,n)=>{let s=!1;const a=(n,r)=>{s=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.emit(gv.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new xv(xg.WS_ABORT,\"type: \".concat(e))),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(gv.WS_CLOSED,c),this.once(gv.WS_RECONNECTING,c),UT(kC(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==o||s||(KC.warning(\"dc request timeout, type: \".concat(e)),this.emit(gv.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===fv.CLOSED||e===Tv.LEAVE)throw new xv(xg.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===Tv.JOIN||e===Tv.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),h=UI(l),u=new xv(xg.UNEXPECTED_RESPONSE,\"\".concat(h.desc,\": \").concat(d.message.error_str),{code:l,data:d.message});return\"success\"===h.action?d.message:(KC.warning(\"[\".concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(h.desc,\", action: \").concat(h.action)),l===mv.ERR_TOO_MANY_BROADCASTERS?e===Tv.JOIN||e===Tv.REJOIN?(this.initError=u,this.close(),u.throw()):u.throw():\"failed\"===h.action?u.throw():\"quit\"===h.action?(this.initError=u,this.close(),u.throw()):(l===mv.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,KC.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",RI.MULTI_IP)):this.reconnect(h.action,RI.SERVER_ERROR),e===Tv.JOIN||e===Tv.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new tg((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=kC(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==fv.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),kC(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new tg(((i,n)=>{this.once(gv.WS_CONNECTED,(()=>i(this.joinResponse))),this.once(gv.WS_CLOSED,(()=>n(this.initError||new xv(xg.WS_ABORT)))),this.connectionState=fv.CONNECTING,this.websocket.init(e).catch(n),this.websocket.once(CI.FAILBACK,(()=>{void 0===this.openConnectionTime&&n(new xv(xg.INIT_DATACHANNEL_TIMEOUT))})),this.inflateDataTimer&&window.clearInterval(this.inflateDataTimer),this.inflateDataTimer=window.setInterval((()=>{this.handleInflateData()}),2e4),setTimeout((()=>{t&&void 0===this.openConnectionTime&&(KC.debug(\"[\".concat(this.clientId,\"] init datachannel timeout while join with failback to websocket\")),n(new xv(xg.INIT_DATACHANNEL_TIMEOUT)))}),kC(\"DC_JOIN_WITH_FAILBACK\"))}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.inflateDataTimer&&(this.handleInflateData(),window.clearInterval(this.inflateDataTimer),this.inflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||cT.LEAVE,this.connectionState=fv.CLOSED,KC.debug(\"[\".concat(this.clientId,\"] \")+\"will close datachannel in signal\"),this.websocket.close(),e===cT.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new wD(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(gv.ABORT_P2P_EXECUTION);const e=await fT(this,gv.DATACHANNEL_CONNECTING),t=await this.request(Tv.JOIN,e);if(!t)return this.emit(gv.REPORT_JOIN_GATEWAY,xg.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(gv.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new xv(xg.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=ST(this,gv.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(Tv.REJOIN,e);return!!t&&(this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach((e=>{this.emit(Rv.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(Rv.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(Rv.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(Rv.MUTE_AUDIO,{uid:e.uid}):this.emit(Rv.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(Rv.MUTE_VIDEO,{uid:e.uid}):this.emit(Rv.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(Rv.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(Rv.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(Rv.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(Rv.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(Rv.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})})),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){KC.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=UI(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(cT.UID_BANNED),void this.close()):void this.reconnect(t.action,RI.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=kC(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(KC.warning(\"PINGPONG Timeout. Last Socket Message: \".concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>kC(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",RI.TIMEOUT):this.request(Tv.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),kC(\"REPORT_STATS\")&&this.send(Tv.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleInflateData(){const{inflateLength:e,deflateLength:t}=this.websocket.getInflateData();0!==e&&0!==t&&this.upload(Sv.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(CI.RECONNECT_WAITTING_FINISH,(e=>{this.emit(gv.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(CI.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(gv.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(CI.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(CI.CLOSED,(()=>{this.connectionState=fv.CLOSED})),this.websocket.on(CI.FAILED,(()=>{this._disconnectedReason=cT.NETWORK_ERROR,this.connectionState=fv.CLOSED})),this.websocket.on(CI.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===fv.CONNECTED?this.connectionState=fv.RECONNECTING:this.connectionState=fv.CONNECTING})),this.websocket.on(CI.WILL_RECONNECT,((e,t)=>{if(ST(this,gv.IS_P2P_DISCONNECTED)&&\"retry\"===e)return KC.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),this.reconnectToken=void 0,this.emit(gv.NEED_RENEW_SESSION),this.emit(gv.DISCONNECT_P2P),t(\"tryNext\");\"retry\"!==e&&(KC.debug(\"\".concat(this.clientId,\" websockt will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0,this.emit(gv.NEED_RENEW_SESSION),this.emit(gv.DISCONNECT_P2P)),t(e)})),this.websocket.on(CI.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch((e=>{KC.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),this.reconnect(\"tryNext\",RI.SERVER_ERROR)})):this.join().catch((e=>{if(this.emit(gv.REPORT_JOIN_GATEWAY,e.message||e.code,this.url||\"\"),e instanceof xv&&e.code===xg.UNEXPECTED_RESPONSE&&e.data.code===mv.ERR_NO_AUTHORIZED)return KC.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",RI.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",RI.SERVER_ERROR):(this.initError=e,this.close())}))})),this.websocket.on(CI.REQUEST_NEW_URLS,((e,t)=>{fT(this,gv.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(CI.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(Rv.ON_TOKEN_PRIVILEGE_DID_EXPIRE)})),this.websocket.on(CI.TO_CONNECT_DATACHANNEL,(async(e,t,i)=>fT(this,gv.DATACHANNEL_PRECONNECT,e).then(t).catch(i))),this.websocket.on(CI.FAILBACK,(()=>{void 0!==this.openConnectionTime&&this.emit(gv.DATACHANNEL_FAILBACK)}))}}class ND extends iT{constructor(e){super(),nu(this,\"_signal\",void 0),nu(this,\"_sequence\",0),nu(this,\"_userMap\",new Map),nu(this,\"_encoder\",new TextEncoder),this._signal=e}async send(e,t,i,n,r){var s,o,a;\"string\"!=typeof t&&(t=JSON.stringify(t)),n=null!==(s=n)&&void 0!==s?s:xT(6,\"\"),r=null!==(o=r)&&void 0!==o?o:this._sequence++;const c={_id:n,_type:e,_seq:null!==(a=r)&&void 0!==a?a:this._sequence++,_message:t};if(kC(\"SHOW_P2P_LOG\")&&KC.debug(\"send message\",c),this.sendStreamMessage(JSON.stringify(c)),i)return;const d=new tg(((t,i)=>{const r=window.setTimeout((()=>{this.off(\"res-@\".concat(n),s),KC.warning(\"[external-signal] request timeout, type: \".concat(e)),0===this._userMap.size?i(new Vg(xg.INVALID_REMOTE_USER)):i(new Vg(xg.TIMEOUT))}),kC(\"EXTERNAL_SIGNAL_REQUEST_TIMEOUT\")),s=(e,n)=>{r&&window.clearTimeout(r),\"success\"===e?t({isSuccess:!0,message:n}):i(new Vg(xg.UNEXPECTED_ERROR,n))};this.once(\"res-@\".concat(n),s)}));let l;try{l=await d}catch(i){if(i.code===xg.TIMEOUT)return await this.send(e,t,!1,n,r);throw i}return l.isSuccess?l.message:void 0}sendStreamMessage(e){this._splitMessage(e).forEach((e=>{this._signal.request(Tv.DATA_STREAM,{payload:PT(this._encoder.encode(e))})}))}onMessage(e){const{_uid:t}=e;let i;const n=this._userMap.get(t);if(n?i=n.splitMessageMap:(i=new Map,this._userMap.set(t,{isStart:!1,splitMessageMap:i,nextExpectedSequenceNumber:0,receivedMessagesMap:new Map})),\"id\"in e&&\"total\"in e){var r;const{id:n,total:s}=e,o=null!==(r=i.get(n))&&void 0!==r?r:[];if(o.push(e),i.has(n)||i.set(n,o),o.length!==s)return;{const r=Zu(o).call(o,((e,t)=>e.index-t.index)).map((e=>e.payload)).join(\"\");i.delete(n),(e=JSON.parse(r))._uid=t}}this.handleReceivedMessage(e)}setStart(e){this._userMap.has(e)?this._userMap.get(e).isStart=!0:this._userMap.set(e,{isStart:!0,splitMessageMap:new Map,nextExpectedSequenceNumber:0,receivedMessagesMap:new Map}),this.handleReceivedMessage()}setEnd(e){return this._userMap.delete(e),0===this._userMap.size}ack(e,t,i){this.send(wI.ACK,JSON.stringify({success:!i,message:t}),!0,e)}handleReceivedMessage(e){const t=()=>{this._userMap.forEach((e=>{const{receivedMessagesMap:t,nextExpectedSequenceNumber:i}=e;for(;t.has(i);){const n=t.get(i);t.delete(i),this.receiveMessage(n),e.nextExpectedSequenceNumber++}}))};if(!e)return void t();const{_uid:i,_seq:n}=e,r=this._userMap.get(i),{receivedMessagesMap:s,isStart:o,nextExpectedSequenceNumber:a}=r;n<a?KC.debug(\"[external-signal] receive old message, seq: \".concat(n)):(s.set(n,e),o&&n===a&&(this.receiveMessage(e),s.delete(a),r.nextExpectedSequenceNumber++,t()))}receiveMessage(e){const{_id:t,_type:i,_message:n,_uid:r}=e;if(kC(\"SHOW_P2P_LOG\")&&KC.debug(\"收到消息\",e),t)switch(e._type){case wI.PUBLISH:const s=JSON.parse(n);this._signal.emit(i,s,r),this.ack(e._id);break;case wI.CONTROL:case wI.UNPUBLISH:case wI.DO_SUBSCRIBE:case wI.DO_UNSUBSCRIBE:{const t=JSON.parse(n);t.uid=r,fT(this._signal,i,t).then((t=>{this.ack(e._id,t)})).catch((t=>{this.ack(e._id,void 0,!0)}));break}case wI.ACK:{const{success:e,message:i}=JSON.parse(n);this.emit(\"res-@\".concat(t),e?\"success\":\"failed\",i);break}case wI.CALL:fT(this,i,n).then((e=>{this.ack(t,e)}));break;case wI.RESTART_ICE:case wI.EXCHANGE_SDP:case wI.SUBSCRIBE:case wI.UNSUBSCRIBE:fT(this._signal,i,n).then((e=>{this.ack(t,e)})).catch((t=>{this.ack(e._id,void 0,!0)}));break;case wI.CANDIDATE:this._signal.emit(i,n),this.ack(t);break;case wI.JOIN:this.emit(i,JSON.parse(n));break;default:this.emit(i,n),this.ack(t)}}_splitMessage(e){if(e.length<ND.MAX_MESSAGE_SIZE)return[e];const t=[],i=xT(6,\"\");let n=0;const r=Math.ceil(e.length/800);for(;e.length>0;){n++;const s=e.slice(0,800);t.push({id:i,index:n,total:r,payload:s}),e=e.slice(800)}return t.map((e=>JSON.stringify(e)))}clear(){this._sequence=0,this._userMap.clear()}}nu(ND,\"MAX_MESSAGE_SIZE\",1024);class DD extends iT{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===fv.CONNECTED?this.emit(gv.WS_CONNECTED):e===fv.RECONNECTING?this.emit(gv.WS_RECONNECTING,this._websocketReconnectReason):e===fv.CLOSED&&this.emit(gv.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),nu(this,\"_disconnectedReason\",void 0),nu(this,\"_websocketReconnectReason\",void 0),nu(this,\"_connectionState\",fv.CLOSED),nu(this,\"reconnectToken\",void 0),nu(this,\"_userInRoom\",!1),nu(this,\"_userOnlineTime\",void 0),nu(this,\"websocket\",void 0),nu(this,\"openConnectionTime\",void 0),nu(this,\"clientId\",void 0),nu(this,\"lastMsgTime\",Date.now()),nu(this,\"uploadCache\",[]),nu(this,\"uploadCacheInterval\",void 0),nu(this,\"rttRolling\",new dS(5)),nu(this,\"pingpongTimer\",void 0),nu(this,\"wsInflateDataTimer\",void 0),nu(this,\"pingpongTimeoutCount\",0),nu(this,\"joinResponse\",void 0),nu(this,\"multiIpOption\",void 0),nu(this,\"initError\",void 0),nu(this,\"spec\",void 0),nu(this,\"store\",void 0),nu(this,\"_external_signal\",void 0),nu(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(gv.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){switch(t._type){case Rv.ON_DATA_STREAM:return void this.handleDataStream(t._message);case Rv.MUTE_AUDIO:case Rv.MUTE_VIDEO:case Rv.ON_P2P_LOST:return;case Rv.ON_USER_ONLINE:this.emit(t._type,t._message);const{uid:e}=t._message;return this._external_signal.setStart(e),void this._external_signal.send(wI.JOIN,{onlineTime:this._userOnlineTime},!0)}if(this.emit(t._type,t._message),t._type===Rv.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===Rv.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(cT.UID_BANNED);break;case 15:this.close(cT.IP_BANNED);break;case 16:this.close(cT.CHANNEL_BANNED)}if(t._type===Rv.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case mv.ERR_LICENSE_MISSING:this.close(cT.LICENSE_MISSING);break;case mv.ERR_LICENSE_EXPIRED:this.close(cT.LICENSE_EXPIRED);break;case mv.ERR_LICENSE_MINUTES_EXCEEDED:this.close(cT.LICENSE_MINUTES_EXCEEDED);break;case mv.ERR_LICENSE_PERIOD_INVALID:this.close(cT.LICENSE_PERIOD_INVALID);break;case mv.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(cT.LICENSE_MULTIPLE_SDK_SERVICE);break;case mv.ERR_LICENSE_ILLEGAL:this.close(cT.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new zI(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,kC(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),kC(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===fv.CONNECTED&&this.reconnect(\"retry\",lT.OFFLINE)})),this._external_signal=new ND(this),this._handleSignalP2PEvents()}async request(e,t,i,n){const r=xT(6,\"\"),s={_id:r,_type:e,_message:t},o=this.websocket.connectionID,a=()=>new tg(((t,i)=>{if(this.connectionState===fv.CONNECTED)return t();const n=()=>{this.off(gv.WS_CLOSED,r),t()},r=()=>{this.off(gv.WS_CONNECTED,n),i(new Vg(xg.WS_ABORT))};this.once(gv.WS_CONNECTED,n),this.once(gv.WS_CLOSED,r),e!==Tv.PUBLISH&&e!==Tv.SUBSCRIBE&&e!==Tv.UNSUBSCRIBE&&e!==Tv.UNPUBLISH&&e!==Tv.CONTROL&&e!==Tv.RESTART_ICE||this.once(gv.DISCONNECT_P2P,(()=>{i(new Vg(xg.DISCONNECT_P2P))})),e!==Tv.PUBLISH&&e!==Tv.RESTART_ICE||this.once(gv.ABORT_P2P_EXECUTION,(()=>{i(new Vg(xg.DISCONNECT_P2P))}))}));if(this.connectionState!==fv.CONNECTING&&this.connectionState!==fv.RECONNECTING||e===Tv.JOIN||e===Tv.REJOIN||await a(),this.websocket.sendMessage(s,!0),n)return;const c=new tg(((i,n)=>{let s=!1;const a=(n,r)=>{s=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.emit(gv.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new Vg(xg.WS_ABORT,\"type: \".concat(e))),this.off(gv.WS_CLOSED,c),this.off(gv.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(gv.WS_CLOSED,c),this.once(gv.WS_RECONNECTING,c),UT(kC(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==o||s||(KC.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(gv.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===fv.CLOSED||e===Tv.LEAVE)throw new Vg(xg.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===Tv.JOIN||e===Tv.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),h=UI(l),u=new Vg(xg.UNEXPECTED_RESPONSE,\"\".concat(h.desc,\": \").concat(d.message.error_str),{code:l,data:d.message});return\"success\"===h.action?d.message:(KC.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(h.desc,\", action: \").concat(h.action)),l===mv.ERR_TOO_MANY_BROADCASTERS?e===Tv.JOIN||e===Tv.REJOIN?(this.initError=u,this.close(),u.throw()):u.throw():\"failed\"===h.action?u.throw():\"quit\"===h.action?(this.initError=u,this.close(),u.throw()):(l===mv.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,KC.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",lT.MULTI_IP)):this.reconnect(h.action,lT.SERVER_ERROR),e===Tv.JOIN||e===Tv.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new tg((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=kC(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==fv.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),kC(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}async sendExtensionMessage(e,t,i){return await this.waitTillUserOnline(),await this._external_signal.send(e,t,i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new tg(((t,i)=>{this.once(gv.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(gv.WS_CLOSED,(()=>i(this.initError||new Vg(xg.WS_ABORT)))),this.connectionState=fv.CONNECTING,this.websocket.init(e).catch(i),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval((()=>{this.handleWsInflateData()}),2e4)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||cT.LEAVE,this.connectionState=fv.CLOSED,KC.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close(),e===cT.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new zI(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,kC(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),kC(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(gv.ABORT_P2P_EXECUTION);const e=await fT(this,gv.REQUEST_JOIN_INFO),t=await this.request(Tv.JOIN,e);if(!t)return this.emit(gv.REPORT_JOIN_GATEWAY,xg.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(gv.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),this._userOnlineTime=(new Date).getTime(),this._external_signal.clear(),!0}async rejoin(){if(!this.reconnectToken)throw new Vg(xg.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=ST(this,gv.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;return!!await this.request(Tv.REJOIN,e)&&(this.connectionState=fv.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleDataStream(e){try{var t;const i=DT(e.payload),n=(new TextDecoder).decode(i),r=JSON.parse(n);\"total\"in r&&\"id\"in r||Pr(t=Object.values(wI)).call(t,r._type)?(e.seq&&delete e.seq,r._uid=e.uid,this._external_signal.onMessage(r)):this.emit(Rv.ON_DATA_STREAM,e)}catch(e){}}handleNotification(e){KC.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=UI(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(cT.UID_BANNED),void this.close()):void this.reconnect(t.action,lT.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=kC(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(KC.warning(\"[\".concat(this.clientId,\"] PINGPONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>kC(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",lT.TIMEOUT):this.request(Tv.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),kC(\"REPORT_STATS\")&&this.send(Tv.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Sv.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Iv.RECONNECT_WAITTING_FINISH,(e=>{this.emit(gv.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Iv.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(gv.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Iv.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Iv.CLOSED,(()=>{this.connectionState=fv.CLOSED})),this.websocket.on(Iv.FAILED,(()=>{this._disconnectedReason=cT.NETWORK_ERROR,this.connectionState=fv.CLOSED})),this.websocket.on(Iv.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===fv.CONNECTED?this.connectionState=fv.RECONNECTING:this.connectionState=fv.CONNECTING})),this.websocket.on(Iv.WILL_RECONNECT,((e,t,i)=>{if(ST(this,gv.IS_P2P_DISCONNECTED)&&\"retry\"===e)return KC.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),this.reconnectToken=void 0,this.emit(gv.NEED_RENEW_SESSION),this.emit(gv.DISCONNECT_P2P),i(\"tryNext\");\"retry\"!==e&&(KC.debug(\"\".concat(this.clientId,\" websocket will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0,this.emit(gv.NEED_RENEW_SESSION),this.emit(gv.DISCONNECT_P2P)),i(e)})),this.websocket.on(Iv.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch((e=>{KC.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),this.reconnect(\"tryNext\",lT.SERVER_ERROR)})):this.join().catch((e=>{if(this.emit(gv.REPORT_JOIN_GATEWAY,e.message||e.code,this.url||\"\"),e instanceof Vg&&e.code===xg.UNEXPECTED_RESPONSE&&e.data.code===mv.ERR_NO_AUTHORIZED)return KC.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",lT.SERVER_ERROR);KC.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",lT.SERVER_ERROR):(this.initError=e,this.close())}))})),this.websocket.on(Iv.REQUEST_NEW_URLS,((e,t)=>{fT(this,gv.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Iv.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(Rv.ON_TOKEN_PRIVILEGE_DID_EXPIRE)}))}_handleSignalP2PEvents(){this._external_signal.on(wI.JOIN,(async e=>{if(this._userOnlineTime&&this._userOnlineTime<e.onlineTime){const e=await fT(this,gv.P2P_START,void 0),t=await this._external_signal.send(wI.CALL,e);this.emit(gv.P2P_CONNECTION,t,!0)}this._userInRoom=!0,this.emit(\"user-online\")})),this.on(Rv.ON_USER_OFFLINE,(async e=>{this._external_signal.clear(),this._userInRoom=!1})),this._external_signal.on(wI.CALL,(async(e,t,i)=>{this._userInRoom=!0,this.emit(\"user-online\");try{t(await fT(this,gv.P2P_START,e))}catch(e){i(e)}}))}async waitTillUserOnline(){return new tg((e=>{if(this._userInRoom)e();else{const t=()=>{this.off(\"user-online\",t),e()};this.on(\"user-online\",t)}}))}}function PD(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function LD(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?PD(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):PD(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const kD=new Map;class MD extends iT{get state(){return this._state}set state(e){if(e===this._state)return;const t=this._state;this._state=e,\"DISCONNECTED\"===e&&this._disconnectedReason?this.emit(eI.CONNECTION_STATE_CHANGE,e,t,this._disconnectedReason):this.emit(eI.CONNECTION_STATE_CHANGE,e,t)}get joinGatewayStartTime(){return this._joinGatewayStartTime}set joinGatewayStartTime(e){KC.debug(\"[\".concat(this.store.clientId,\"] set joinGatewayStartTime at \").concat(e)),this._joinGatewayStartTime=e}constructor(e,t){super(),nu(this,\"store\",void 0),nu(this,\"joinInfo\",void 0),nu(this,\"key\",void 0),nu(this,\"ntpOffset\",0),nu(this,\"signal\",void 0),nu(this,\"role\",void 0),nu(this,\"inChannelInfo\",{joinAt:null,duration:0}),nu(this,\"spec\",void 0),nu(this,\"_state\",\"DISCONNECTED\"),nu(this,\"_statsCollector\",void 0),nu(this,\"_disconnectedReason\",void 0),nu(this,\"isSignalRecover\",!1),nu(this,\"hasChangeBGPAddress\",!1),nu(this,\"trafficStatsInterval\",void 0),nu(this,\"networkQualityInterval\",void 0),nu(this,\"_joinGatewayStartTime\",0),nu(this,\"_signalTimeout\",!1),nu(this,\"_clientRoleOptions\",void 0),nu(this,\"_isProactiveJoin\",!1),this.store=e,this.spec=t,this.signal=this.store.useP2P?new DD(LD(LD({},t),{},{retryConfig:t.websocketRetryConfig}),e):this.store.useDataChannel?new OD(LD(LD({},t),{},{retryConfig:t.websocketRetryConfig}),e):new QI(LD(LD({},t),{},{retryConfig:t.websocketRetryConfig}),e),this._statsCollector=t.statsCollector,this.role=t.role||\"audience\",this._clientRoleOptions=t.clientRoleOptions,this.handleSignalEvents()}async join(e,t,i){if(this.signal instanceof OD){let t=!1;\"disabled\"!==e.cloudProxyServer?(KC.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because cloudProxyServer are not supported (\").concat(e.cloudProxyServer,\")\")),t=!0):\"\".concat(e.apResponse.cid,\"_\").concat(e.apResponse.cert).length>255||\"\".concat(e.apResponse.cid,\"_\").concat(e.apResponse.cert).length<22?(KC.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because ticket length is incorrect, it has to be between 22 and 255\")),t=!0):e.apResponse.addresses.some((e=>e.fingerprint))||kC(\"FINGERPRINT\")||(KC.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because fingerprint does not exist\")),t=!0),t&&this.resetSignal()}this.store.joinGatewayStart(),\"disabled\"!==e.cloudProxyServer&&(this.hasChangeBGPAddress=!0);const n=Date.now();let r=kD.get(e.cname);if(r||(r=new Map,kD.set(e.cname,r)),this._isProactiveJoin=!0,r.has(e.uid)){const t=new xv(xg.UID_CONFLICT);throw rv.joinGateway(e.sid,{lts:n,succ:!1,ec:t.message,addr:null,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!e.proxyServer,signalChannel:this.signal instanceof OD?\"1\":\"0\"}),this._isProactiveJoin=!1,t}r.set(e.uid,!0),this.joinInfo=e,this.key=t;let s=0;this.joinGatewayStartTime=n;const o=e.proxyServer;try{let t;if(KC.debug(\"[\".concat(this.store.clientId,\"] use \").concat(this.signal instanceof OD?\"datachannel\":\"websocket\",\" join uid \").concat(s)),this.signal instanceof OD)t=await this.signal.init(e.apResponse.addresses,i);else{const n=e.gatewayAddrs.map((t=>{let{address:i}=t;const[n,r]=i.split(\":\"),s={host:n,port:r};return e.proxyServer&&(s.proxy=e.proxyServer),s}));t=await this.signal.init(n,i)}s=t.uid,KC.debug(\"[\".concat(this.store.clientId,\"] \").concat(this.signal instanceof OD?\"datachannel\":\"websocket\",\" join uid \").concat(s,\" cost \").concat(Date.now()-this.joinGatewayStartTime))}catch(t){if(t&&t.code===xg.INIT_WEBSOCKET_TIMEOUT)throw KC.warning(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),t;if(t&&t.code===xg.INIT_DATACHANNEL_TIMEOUT)throw KC.warning(\"[\".concat(this.store.clientId,\"] User join datachannel failed\"),t.toString()),this.resetSignal(),t;throw KC.error(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),rv.joinGateway(e.sid,{lts:n,succ:!1,ec:t.message,addr:this.signal.url,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!o,signalChannel:this.signal instanceof OD?\"1\":\"0\"}),this._isProactiveJoin=!1,r.delete(e.uid),this.signal.close(),t}return this.state=\"CONNECTED\",this.inChannelInfo.joinAt=Date.now(),KC.debug(\"[\".concat(this.store.clientId,\"] Connected to gateway server\")),this.trafficStatsInterval=window.setInterval((()=>{this.updateTrafficStats().catch((e=>{KC.warning(\"[\".concat(this.store.clientId,\"] get traffic stats error\"),e.toString())}))}),3e3),this.networkQualityInterval=window.setInterval((()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit(eI.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit(eI.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):\"CONNECTED\"===this.state&&this._statsCollector.trafficStats?this.emit(eI.NETWORK_QUALITY,{uplinkNetworkQuality:TD(this._statsCollector.trafficStats.B_unq),downlinkNetworkQuality:TD(this._statsCollector.trafficStats.B_dnq)}):this.emit(eI.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})}),2e3),this.store.joinGatewayEnd(),s}async leave(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;if(\"DISCONNECTED\"!==this.state){t!==cT.FALLBACK&&(this.state=\"DISCONNECTING\");try{e||this.signal.connectionState!==fv.CONNECTED||await function(e,t){return t===1/0?e:tg.race([e,MT(t)])}(this.signal.request(Tv.LEAVE,void 0,!0),3e3)}catch(e){KC.warning(\"[\".concat(this.store.clientId,\"] leave request failed, ignore\"),e)}this.signal.close(t),t!==cT.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()}}async publish(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const n={state:\"offer\",p2p_id:this.store.p2pId,ortc:t,mode:this.spec.mode,extend:kC(\"PUB_EXTEND\"),twcc:!!kC(\"PUBLISH_TWCC\"),rtx:!!kC(\"USE_PUB_RTX\")};try{return(await this.signal.request(Tv.PUBLISH,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===mv.ERR_PUBLISH_REQUEST_INVALID)return KC.warning(\"[\".concat(this.store.clientId,\"] receive publish error code, retry\"),n.toString()),await this.tryUnpubBeforeRepub(e,t),this.publish(e,t,!1);throw n}}async publishDataChannel(e,t,i){var n;if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const r={stream_id:t.streamId,ordered:t.ordered?1:0,max_retrans_times:null!==(n=t.maxRetransmits)&&void 0!==n?n:10,channel_id:t.channelId,metadata:t.metadata};try{await this.signal.request(Tv.PUBLISH_DATASTREAM,r,!0)}catch(n){if(i&&n.data&&n.data.code===mv.ERR_PUBLISH_REQUEST_INVALID)return KC.warning(\"[\".concat(this.store.clientId,\"] receive publish datachannels error code, retry\"),n.toString()),await this.tryUnpubDataChannelBeforeRepub(e,t),this.publishDataChannel(e,t,!1);throw n}}async unpublish(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await this.signal.request(Tv.UNPUBLISH,{stream_id:t,ortc:e},!0)}catch(e){KC.warning(\"[\".concat(this.store.clientId,\"] unpublish warning: \"),e)}}async unpublishDataChannel(e){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await tg.all(e.map((e=>this.signal.request(Tv.UNPUBLISH_DATASTREAM,{channel_id:e},!0))))}catch(e){KC.warning(\"unpublish datachannels warning: \",e)}}async subscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not subscribe when connection state is \".concat(this.state));const n={stream_id:e,stream_type:t.stream_type,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,twcc:!!kC(\"SUBSCRIBE_TWCC\"),rtx:!!kC(\"USE_SUB_RTX\"),extend:kC(\"SUB_EXTEND\"),ssrcId:t.ssrcId,svc:Array.isArray(kC(\"SVC\"))&&0!==kC(\"SVC\").length?kC(\"SVC\"):void 0};try{return(await this.signal.request(Tv.SUBSCRIBE,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===mv.ERR_SUBSCRIBE_REQUEST_INVALID)return KC.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe error code, retry\"),n.toString()),await this.tryUnsubBeforeResub(e,t),await this.subscribe(e,t,!1);throw n}}async subscribeDataChannel(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not subscribe datachannel when connection state is \".concat(this.state));const n={uid:e,stream_id:t.id,channel_id:t.datachannelId};try{return void await this.signal.request(Tv.SUBSCRIBE_DATASTREAM,n,!0)}catch(n){if(i&&n.data&&n.data.code===mv.ERR_SUBSCRIBE_REQUEST_INVALID)return KC.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe datachannel error code, retry\"),n.toString()),await this.tryUnsubDataChannelBeforeResub(e,t),await this.subscribeDataChannel(e,t,!1);throw n}}async subscribeAll(e,t){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not massSubscribe when connection state is \".concat(this.state));const i={p2p_id:this.store.p2pId,users:e,dtx:!1,rtx:!!kC(\"USE_SUB_RTX\")};try{return await this.signal.request(Tv.SUBSCRIBE_STREAMS,i,!0)}catch(i){if(t&&i.data&&i.data.code===mv.ERR_SUBSCRIBE_REQUEST_INVALID)return KC.warning(\"[\".concat(this.store.clientId,\"] receiver massSubscribe error code, retry\"),i.toString()),await this.tryMassUnsubBeforeResub(e),await this.subscribeAll(e,!1);throw i}}async setVideoProfile(e){const t=function(e){if(!(e.bitrateMax&&e.bitrateMin&&e.frameRate&&e.height&&e.width))return;let t=e.frameRate,i=e.width,n=e.height,r=!0;return\"number\"!=typeof t&&(t=t.exact||t.ideal||t.max||t.min||0,t||(r=!1)),\"number\"!=typeof i&&(i=i.exact||i.ideal||i.max||i.min||0,i||(r=!1)),\"number\"!=typeof n&&(n=n.exact||n.ideal||n.max||n.min||0,t||(r=!1)),r?{stream_type:0,width:i,height:n,fps:t,start_bps:1e3*e.bitrateMax,min_bps:1e3*e.bitrateMin,target_bps:1e3*e.bitrateMax}:void 0}(e);if(t)return this.signal.request(Tv.SET_VIDEO_PROFILE,t);KC.debug(\"[\".concat(this.store.clientId,\"] encoder config is not complete, do not report to gateway\"))}async unsubscribe(e,t){try{await this.signal.request(Tv.UNSUBSCRIBE,{p2p_id:this.store.p2pId,ortc:e,stream_id:t},!0)}catch(e){KC.warning(\"[\".concat(this.store.clientId,\"] unsubscribe warning: \"),e)}}async unsubscribeDataChannel(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new xv(xg.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await tg.all(e.map((e=>this.signal.request(Tv.UNSUBSCRIBE_DATASTREAM,{stream_id:e,uid:t},!0))))}catch(e){KC.warning(\"unsubscribeDataChannel warning: \",e)}}async massUnsubscribe(e){try{await this.signal.request(Tv.UNSUBSCRIBE_STREAMS,e,!0)}catch(e){KC.warning(\"[\".concat(this.store.clientId,\"] massUnsubscribeAll warning: \"),e)}}async reconnectPC(e){const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=e;return{gatewayEstablishParams:await this.signal.request(Tv.CONNECT_PC,{p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}},!0),gatewayAddress:this.getCurrentGatewayAddress()}}getGatewayInfo(){return this.signal.request(Tv.GATEWAY_INFO)}async renewToken(e){await this.signal.request(Tv.RENEW_TOKEN,e),this.key=e.token}async setClientRole(e,t){if(t&&(this._clientRoleOptions=Object.assign({},t)),\"CONNECTED\"!==this.state)return void(this.role=e);let i,n=0;\"audience\"===e?this._clientRoleOptions&&this._clientRoleOptions.delay?(i=this._clientRoleOptions.delay,n=1):n=this._clientRoleOptions&&this._clientRoleOptions.level?this._clientRoleOptions.level:2:n=0,await this.signal.request(Tv.SET_CLIENT_ROLE,{role:e,level:n,delay:i,client_ts:Date.now()}),this.role=e}async setRemoteVideoStreamType(e,t){await this.signal.request(Tv.SWITCH_VIDEO_STREAM,{stream_id:e,stream_type:t})}async setDefaultRemoteVideoStreamType(e){await this.signal.request(Tv.DEFAULT_VIDEO_STREAM,{stream_type:e})}async setStreamFallbackOption(e,t){await this.signal.request(Tv.SET_FALLBACK_OPTION,{stream_id:e,fallback_type:t})}async pickSVCLayer(e,t){await this.signal.request(Tv.PICK_SVC_LAYER,{stream_id:e,spatial_layer:t.spatialLayer,temporal_layer:t.temporalLayer})}async setRTM2Flag(e){await this.signal.request(Tv.SET_RTM2_FLAG,{rtm2_flag:e})}async sendExtensionMessage(e,t,i){if(this.signal instanceof DD)return this.signal.sendExtensionMessage(e,t,i)}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt),LD({},this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(Tv.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){const e=kD.get(this.joinInfo.cname);e&&e.delete(this.joinInfo.uid)}this.joinInfo=void 0,this.key=void 0,this.networkQualityInterval&&(window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(!this.joinInfo)return;const e=function(e){let t;return t=e.startsWith(\"dc\")?e.match(/(dc\\:\\/\\/)?([^:]+):(\\d+)/):e.match(/(wss\\:\\/\\/)?([^:]+):(\\d+)/),t?{username:ov.username,password:ov.password,turnServerURL:t[2],tcpport:parseInt(t[3])+30,udpport:parseInt(t[3])+30,forceturn:!1}:null}((\"disabled\"===this.joinInfo.cloudProxyServer?this.signal.url:this.joinInfo.gatewayAddrs[this.signal.currentURLIndex].address)||\"\");this.joinInfo.turnServer.serversFromGateway=[],e&&\"off\"!==this.joinInfo.turnServer.mode&&\"disabled\"===this.joinInfo.cloudProxyServer&&this.joinInfo.turnServer.serversFromGateway.push(LD(LD({},ov),{},{turnServerURL:e.turnServerURL,tcpport:e.tcpport,udpport:e.udpport,username:this.joinInfo.uid.toString(),password:this.joinInfo.token}))}async updateTrafficStats(){if(\"CONNECTED\"!==this.state)return;const e=await this.signal.request(Tv.TRAFFIC_STATS,void 0,!0);e.timestamp=Date.now(),null!=e.ntp_offset&&(this.ntpOffset=e.ntp_offset),e.peer_delay.forEach((e=>{const t=this._statsCollector.trafficStats&&this._statsCollector.trafficStats.peer_delay.find((t=>t.peer_uid===e.peer_uid));t&&t.B_st!==e.B_st&&AT((()=>{this.emit(eI.STREAM_TYPE_CHANGE,e.peer_uid,e.B_st)}))})),this._statsCollector.updateTrafficStats(e)}getJoinMessage(e){if(!this.joinInfo||!this.key)throw new xv(xg.UNEXPECTED_ERROR,\"can not generate join message, no join info\");const t=Object.assign({},this.joinInfo.apResponse);let i=kC(\"REPORT_APP_SCENARIO\");if(\"string\"!=typeof i)try{i=JSON.stringify(i)}catch(e){i=void 0}i&&i.length>128&&(i=void 0);const n=LD({license:this.joinInfo.license,p2p_id:this.store.p2pId,session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:OC,browser:navigator.userAgent,process_id:kC(\"PROCESS_ID\"),mode:this.store.useP2P?\"p2p\":this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:t,extend:kC(\"JOIN_EXTEND\"),details:{6:this.joinInfo.stringUid,cservice_map:\"proxy3\"===this.joinInfo.cloudProxyServer?\"1\":\"proxy5\"===this.joinInfo.cloudProxyServer?\"2\":void 0},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo,appScenario:i,attributes:{userAttributes:{enablePublishedUserList:kC(\"ENABLE_PUBLISHED_USER_LIST\"),maxSubscription:kC(\"MAX_SUBSCRIPTION\"),subscribeAudioFilterTopN:\"number\"==typeof kC(\"SUBSCRIBE_AUDIO_FILTER_TOPN\")?kC(\"SUBSCRIBE_AUDIO_FILTER_TOPN\"):void 0,enablePublishAudioFilter:\"boolean\"==typeof kC(\"ENABLE_PUBLISH_AUDIO_FILTER\")?kC(\"ENABLE_PUBLISH_AUDIO_FILTER\"):void 0,enableUserLicenseCheck:\"boolean\"==typeof kC(\"ENABLE_USER_LICENSE_CHECK\")?kC(\"ENABLE_USER_LICENSE_CHECK\"):void 0,enableRTX:!0===kC(\"USE_PUB_RTX\")||!0===kC(\"USE_SUB_RTX\")||void 0,disableFEC:kC(\"DISABLE_FEC\"),enableNTPReport:!!kC(\"ENABLE_NTP_REPORT\")||void 0,enableInstantVideo:!!kC(\"ENABLE_INSTANT_VIDEO\")||void 0,enableDataStream2:\"boolean\"==typeof kC(\"ENABLE_DATASTREAM_2\")?kC(\"ENABLE_DATASTREAM_2\"):void 0,rtm2Flag:\"number\"==typeof kC(\"RTM2_FLAG\")?kC(\"RTM2_FLAG\"):void 0,enableUserAutoRebalanceCheck:!!kC(\"ENABLE_USER_AUTO_REBALANCE_CHECK\"),enableXR:\"boolean\"==typeof kC(\"USE_XR\")?kC(\"USE_XR\"):void 0}},join_ts:this.joinGatewayStartTime},e);return this.joinInfo.stringUid&&(n.string_uid=this.joinInfo.stringUid),this.joinInfo.aesmode&&this.joinInfo.aespassword&&(n.aes_mode=this.joinInfo.aesmode,kC(\"ENCRYPT_AES\")?(n.aes_secret=this.joinInfo.aespassword,n.aes_encrypt=!0):n.aes_secret=this.joinInfo.aespassword,this.joinInfo.aessalt&&(n.aes_salt=this.joinInfo.aessalt)),t.addresses[this.signal.websocket.currentURLIndex]&&(n.ap_response.ticket=t.addresses[this.signal.websocket.currentURLIndex].ticket,delete t.addresses),void 0!==this.joinInfo.defaultVideoStream&&(n.default_video_stream=this.joinInfo.defaultVideoStream),n}getRejoinMessage(){if(!this.joinInfo)throw new xv(xg.UNEXPECTED_ERROR,\"can not generate rejoin message, no join info\");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(gv.WS_RECONNECT_WAITTING_FINISH,(e=>{var t;Pr(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.joinInfo&&rv.adjustSessionStartTime(this.joinInfo.sid)})),this.signal.on(gv.WS_RECONNECT_CREATE_CONNECTION,(e=>{this.joinGatewayStartTime=Date.now()})),this.signal.on(gv.WS_RECONNECTING,(e=>{this.joinInfo&&rv.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:e||lT.NETWORK_ERROR}),this.joinInfo&&(this.state=\"RECONNECTING\",rv.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode}),this.isSignalRecover=!1,this.joinGatewayStartTime=Date.now())})),this.signal.on(gv.WS_CLOSED,(e=>{let t;switch(e){case cT.LEAVE:t=lT.LEAVE;break;case cT.UID_BANNED:case cT.IP_BANNED:case cT.CHANNEL_BANNED:case cT.SERVER_ERROR:t=lT.SERVER_ERROR;break;case cT.FALLBACK:t=lT.FALLBACK;break;case cT.LICENSE_MISSING:case cT.LICENSE_EXPIRED:case cT.LICENSE_MINUTES_EXCEEDED:case cT.LICENSE_PERIOD_INVALID:case cT.LICENSE_MULTIPLE_SDK_SERVICE:case cT.LICENSE_ILLEGAL:case cT.TOKEN_EXPIRE:t=e;break;default:t=lT.NETWORK_ERROR}KC.debug(\"[\".concat(this.store.clientId,\"] [signal] websocket closed, reason: \").concat(t||\"undefined -> \"+lT.NETWORK_ERROR)),this.joinInfo&&rv.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:e===cT.LEAVE?1:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:t}),this._disconnectedReason=e,e!==cT.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()})),this.signal.on(gv.WS_CONNECTED,(()=>{if(this.updateTurnConfigFromSignal(),this.state=\"CONNECTED\",this.joinInfo&&(\"audience\"===this.role&&this._clientRoleOptions&&(this._clientRoleOptions.level||this._clientRoleOptions.delay)&&(KC.debug(\"[\".concat(this.store.clientId,\"] patch to send set client role, role: \").concat(this.role,\", mode: \").concat(this.spec.mode,\", level: \").concat(this._clientRoleOptions.level,\", delay: \").concat(this._clientRoleOptions.delay)),this.setClientRole(this.role,this._clientRoleOptions)),rv.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:this.signal instanceof OD?\"1\":\"0\"}),this._isProactiveJoin=!1,this.joinInfo.useLocalAccessPoint&&1===this.joinInfo.setLocalAPVersion)){const e=this.signal.url&&this.signal.url.match(/wss\\:\\/\\/([^:]+):(\\d+)/);if(!e)return void KC.error(\"[\".concat(this.store.clientId,\"] set local access point after joined failed: \").concat(e));LC(\"EVENT_REPORT_DOMAIN\",e[1]),LC(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]),LC(\"LOG_UPLOAD_SERVER\",\"\".concat(e[1],\":6444\"))}})),this.signal.on(Rv.ON_UPLINK_STATS,(e=>{this._statsCollector.updateUplinkStats(e)})),this.signal.on(gv.REQUEST_RECOVER,((e,t,i)=>{if(!this.joinInfo)return i(new xv(xg.UNEXPECTED_ERROR,\"gateway: can not recover, no join info\"));e&&(this.joinInfo.multiIP=e,this.hasChangeBGPAddress=!0),this.isSignalRecover=!0,fT(this,eI.REQUEST_NEW_GATEWAY_LIST).then(t).catch(i)})),this.signal.on(gv.REQUEST_JOIN_INFO,(async e=>{var t;if(this.updateTurnConfigFromSignal(),this.store.useP2P)return void e(this.getJoinMessage({ortc:{}}));const{iceParameters:i,dtlsParameters:n,rtpCapabilities:r}=await fT(this,eI.REQUEST_P2P_CONNECTION_PARAMS,{turnServer:null===(t=this.joinInfo)||void 0===t?void 0:t.turnServer});e(this.getJoinMessage({ortc:{iceParameters:i,dtlsParameters:n,rtpCapabilities:r,version:\"2\"}}))})),this.signal.on(gv.REQUEST_REJOIN_INFO,(e=>{e(this.getRejoinMessage())})),this.signal.on(gv.REPORT_JOIN_GATEWAY,((e,t)=>{this.joinInfo&&(rv.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:e,addr:t,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:this.signal instanceof OD?\"1\":\"0\"}),this._isProactiveJoin=!1)})),this.signal.on(gv.IS_P2P_DISCONNECTED,(e=>{e(ST(this,eI.IS_P2P_DISCONNECTED))})),this.signal.on(gv.DISCONNECT_P2P,(()=>{this.emit(eI.DISCONNECT_P2P)})),this.signal.on(gv.NEED_RENEW_SESSION,(()=>{this.emit(eI.NEED_RENEW_SESSION)})),this.signal.on(gv.REQUEST_SUCCESS,(()=>{this._signalTimeout=!1})),this.signal.on(gv.REQUEST_TIMEOUT,(()=>{this._signalTimeout=!0})),this.signal.on(gv.JOIN_RESPONSE,(e=>{const t=this.getCurrentGatewayAddress();this.emit(eI.JOIN_RESPONSE,e,t)})),this.signal.on(gv.DATACHANNEL_PRECONNECT,(async(e,t,i)=>{this.updateTurnConfigFromSignal();const n=this.getCurrentGatewayAddress();return fT(this,eI.DATACHANNEL_PRECONNECT,e,n).then(t).catch(i)})),this.signal.on(gv.DATACHANNEL_CONNECTING,(async e=>{const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=await fT(this,eI.REQUEST_DC_CONNECTION_PARAMS);e(this.getJoinMessage({ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:n,version:\"2\"}}))})),this.signal.on(gv.DATACHANNEL_FAILBACK,(()=>{KC.warning(\"[\".concat(this.store.clientId,\"] User join datachannel failed\")),this.reset(),this.resetSignal(),this.emit(eI.DATACHANNEL_FAILBACK)}))}async tryUnsubBeforeResub(e,t){try{await this.signal.request(Tv.UNSUBSCRIBE,{p2p_id:this.store.p2pId,stream_id:e,ortc:[t]},!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] tryUnsubBeforeResub warning\"),e),e}}async tryUnsubDataChannelBeforeResub(e,t){try{await this.signal.request(Tv.UNSUBSCRIBE,{stream_id:t.id},!0)}catch(e){throw KC.warning(\"unsubscribe datachannel warning\",e),e}}async tryUnpubBeforeRepub(e,t){try{await this.signal.request(Tv.UNPUBLISH,{stream_id:e,ortc:t},!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] tryUnpubBeforeRepub warning: \"),e),e}}async tryUnpubDataChannelBeforeRepub(e,t){try{await this.signal.request(Tv.UNPUBLISH_DATASTREAM,{channnel_id:t.channelId},!0)}catch(e){throw KC.warning(\"unpublish datastream warning: \",e),e}}async tryMassUnsubBeforeResub(e){const t={users:e.map((e=>({stream_id:e.stream_id,stream_type:e.stream_type})))};try{await this.signal.request(Tv.UNSUBSCRIBE_STREAMS,t,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] tryMassUnsubBeforeResub warning\"),e),e}}async muteLocal(e,t){const i={action:e.find((e=>e.stream_type===$v.Audio))?\"mute_local_audio\":\"mute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(Tv.CONTROL,i,!0,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] gateway muteLocal warning: \"),e),e}}async unmuteLocal(e,t){const i={action:e.find((e=>e.stream_type===$v.Audio))?\"unmute_local_audio\":\"unmute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(Tv.CONTROL,i,!0,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteLocal warning: \"),e),e}}async muteRemote(e,t){const i={action:e===hI.AUDIO?\"mute_remote_audio\":\"mute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(Tv.CONTROL,i,!0,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] gateway muteRemote warning: \"),e),e}}async unmuteRemote(e,t){const i={action:e===hI.AUDIO?\"unmute_remote_audio\":\"unmute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(Tv.CONTROL,i,!0,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteRemote warning: \"),e),e}}uploadStats(e,t){this.signal.upload(e,t)}getSignalRTT(){return this.signal.rtt}async restartICE(e){const t={p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:e};try{return await this.signal.request(Tv.RESTART_ICE,t,!0)}catch(e){throw KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.restartICE warning: \"),e),e}}reconnect(){\"CONNECTED\"===this.state&&this.signal.reconnect(void 0,lT.P2P_FAILED)}getCurrentGatewayAddress(){var e;if(!kC(\"GATEWAY_WSS_ADDRESS\"))return null!==(e=this.joinInfo)&&void 0!==e&&e.gatewayAddrs?this.joinInfo.gatewayAddrs[this.signal.currentURLIndex]:void 0}async setPublishAudioFilterEnabled(e){await this.signal.request(Tv.SET_PARAMETER,{enablePublishAudioFilter:e})}resetSignal(){this.signal&&(this.signal.removeAllListeners(),this.signal.close(cT.FALLBACK)),this.store.useDataChannel=!1,this.signal=new QI(LD(LD({},this.spec),{},{retryConfig:this.spec.websocketRetryConfig}),this.store),this.handleSignalEvents(),this.emit(eI.RESET_SIGNAL,nI.websocket)}}let UD=0,xD=0;function VD(e,t,i,n){return new tg(((r,s)=>{t.timeout=t.timeout||kC(\"HTTP_CONNECT_TIMEOUT\"),t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),UD+=LT(t.data)):i&&(t.data.size?UD+=t.data.size:t.data instanceof FormData?UD+=kT(t.data):UD+=LT(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,EC.request(t).then((e=>{\"string\"==typeof e.data?xD+=LT(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?xD+=e.data.byteLength:xD+=LT(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{EC.isCancel(e)?s(new xv(xg.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?s(new xv(xg.NETWORK_TIMEOUT,e.message)):e.response?s(new xv(xg.NETWORK_RESPONSE_ERROR,e.response.status)):s(new xv(xg.NETWORK_ERROR,e.message))}))}))}\n/*! formdata-polyfill. MIT License. Jimmy W?rting <https://jimmy.warting.se/opensource> */!function(){var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var i=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){return e==Array.prototype||e==Object.prototype||(e[t]=i.value),e};var n,r=function(e){e=[\"object\"==typeof globalThis&&globalThis,e,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof q&&q];for(var t=0;t<e.length;++t){var i=e[t];if(i&&i.Math==Math)return i}throw Error(\"Cannot find global object\")}(this);function s(e,t){if(t)e:{var n=r;e=e.split(\".\");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))break e;n=n[o]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&i(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function a(e){var i=\"undefined\"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return i?i.call(e):{next:t(e)}}if(s(\"Symbol\",(function(e){function t(e,t){this.A=e,i(this,\"description\",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.A};var n=\"jscomp_symbol_\"+(1e9*Math.random()>>>0)+\"_\",r=0;return function e(i){if(this instanceof e)throw new TypeError(\"Symbol is not a constructor\");return new t(n+(i||\"\")+\"_\"+r++,i)}})),s(\"Symbol.iterator\",(function(e){if(e)return e;e=Symbol(\"Symbol.iterator\");for(var n=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),s=0;s<n.length;s++){var a=r[n[s]];\"function\"==typeof a&&\"function\"!=typeof a.prototype[e]&&i(a.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e})),\"function\"==typeof Object.setPrototypeOf)n=Object.setPrototypeOf;else{var c;e:{var d={};try{d.__proto__={a:!0},c=d.a;break e}catch(e){}c=!1}n=c?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+\" is not extensible\");return e}:null}var l=n;function h(){this.m=!1,this.j=null,this.v=void 0,this.h=1,this.u=this.C=0,this.l=null}function u(e){if(e.m)throw new TypeError(\"Generator is already running\");e.m=!0}function p(e,t){return e.h=3,{value:t}}function _(e){this.g=new h,this.G=e}function E(e,t,i,n){try{var r=t.call(e.g.j,i);if(!(r instanceof Object))throw new TypeError(\"Iterator result \"+r+\" is not an object\");if(!r.done)return e.g.m=!1,r;var s=r.value}catch(t){return e.g.j=null,e.g.s(t),m(e)}return e.g.j=null,n.call(e.g,s),m(e)}function m(e){for(;e.g.h;)try{var t=e.G(e.g);if(t)return e.g.m=!1,{value:t.value,done:!1}}catch(t){e.g.v=void 0,e.g.s(t)}if(e.g.m=!1,e.g.l){if(t=e.g.l,e.g.l=null,t.F)throw t.D;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function f(e){this.next=function(t){return e.o(t)},this.throw=function(t){return e.s(t)},this.return=function(t){return function(e,t){u(e.g);var i=e.g.j;return i?E(e,\"return\"in i?i.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),m(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function g(e,t){return t=new f(new _(t)),l&&e.prototype&&l(t,e.prototype),t}if(h.prototype.o=function(e){this.v=e},h.prototype.s=function(e){this.l={D:e,F:!0},this.h=this.C||this.u},h.prototype.return=function(e){this.l={return:e},this.h=this.u},_.prototype.o=function(e){return u(this.g),this.g.j?E(this,this.g.j.next,e,this.g.o):(this.g.o(e),m(this))},_.prototype.s=function(e){return u(this.g),this.g.j?E(this,this.g.j.throw,e,this.g.o):(this.g.s(e),m(this))},s(\"Array.prototype.entries\",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+=\"\");var i=0,n=!1,r={next:function(){if(!n&&i<e.length){var r=i++;return{value:t(r,e[r]),done:!1}}return n=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e,t){return[e,t]}))}})),\"undefined\"!=typeof Blob&&(\"undefined\"==typeof FormData||!FormData.prototype.keys)){var T=function(e,t){for(var i=0;i<e.length;i++)t(e[i])},S=function(e){return e.replace(/\\r?\\n|\\r/g,\"\\r\\n\")},R=function(e,t,i){return t instanceof Blob?(i=void 0!==i?String(i+\"\"):\"string\"==typeof t.name?t.name:\"blob\",t.name===i&&\"[object Blob]\"!==Object.prototype.toString.call(t)||(t=new File([t],i)),[String(e),t]):[String(e),String(t)]},C=function(e,t){if(e.length<t)throw new TypeError(t+\" argument required, but only \"+e.length+\" present.\")},v=\"object\"==typeof globalThis?globalThis:\"object\"==typeof window?window:\"object\"==typeof self?self:this,I=v.FormData,y=v.XMLHttpRequest&&v.XMLHttpRequest.prototype.send,A=v.Request&&v.fetch,b=v.navigator&&v.navigator.sendBeacon,w=v.Element&&v.Element.prototype,O=v.Symbol&&Symbol.toStringTag;O&&(Blob.prototype[O]||(Blob.prototype[O]=\"Blob\"),\"File\"in v&&!File.prototype[O]&&(File.prototype[O]=\"File\"));try{new File([],\"\")}catch(e){v.File=function(e,t,i){return e=new Blob(e,i||{}),Object.defineProperties(e,{name:{value:t},lastModified:{value:+(i&&void 0!==i.lastModified?new Date(i.lastModified):new Date)},toString:{value:function(){return\"[object File]\"}}}),O&&Object.defineProperty(e,O,{value:\"File\"}),e}}var N=function(e){return e.replace(/\\n/g,\"%0A\").replace(/\\r/g,\"%0D\").replace(/\"/g,\"%22\")},D=function(e){this.i=[];var t=this;e&&T(e.elements,(function(e){if(e.name&&!e.disabled&&\"submit\"!==e.type&&\"button\"!==e.type&&!e.matches(\"form fieldset[disabled] *\"))if(\"file\"===e.type){var i=e.files&&e.files.length?e.files:[new File([],\"\",{type:\"application/octet-stream\"})];T(i,(function(i){t.append(e.name,i)}))}else\"select-multiple\"===e.type||\"select-one\"===e.type?T(e.options,(function(i){!i.disabled&&i.selected&&t.append(e.name,i.value)})):\"checkbox\"===e.type||\"radio\"===e.type?e.checked&&t.append(e.name,e.value):(i=\"textarea\"===e.type?S(e.value):e.value,t.append(e.name,i))}))};if((e=D.prototype).append=function(e,t,i){C(arguments,2),this.i.push(R(e,t,i))},e.delete=function(e){C(arguments,1);var t=[];e=String(e),T(this.i,(function(i){i[0]!==e&&t.push(i)})),this.i=t},e.entries=function e(){var t,i=this;return g(e,(function(e){if(1==e.h&&(t=0),3!=e.h)return t<i.i.length?e=p(e,i.i[t]):(e.h=0,e=void 0),e;t++,e.h=2}))},e.forEach=function(e,t){C(arguments,1);for(var i=a(this),n=i.next();!n.done;n=i.next()){var r=a(n.value);n=r.next().value,r=r.next().value,e.call(t,r,n,this)}},e.get=function(e){C(arguments,1);var t=this.i;e=String(e);for(var i=0;i<t.length;i++)if(t[i][0]===e)return t[i][1];return null},e.getAll=function(e){C(arguments,1);var t=[];return e=String(e),T(this.i,(function(i){i[0]===e&&t.push(i[1])})),t},e.has=function(e){C(arguments,1),e=String(e);for(var t=0;t<this.i.length;t++)if(this.i[t][0]===e)return!0;return!1},e.keys=function e(){var t,i,n,r,s=this;return g(e,(function(e){if(1==e.h&&(t=a(s),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,r=a(n),p(e,r.next().value));i=t.next(),e.h=2}))},e.set=function(e,t,i){C(arguments,2),e=String(e);var n=[],r=R(e,t,i),s=!0;T(this.i,(function(t){t[0]===e?s&&(s=!n.push(r)):n.push(t)})),s&&n.push(r),this.i=n},e.values=function e(){var t,i,n,r,s=this;return g(e,(function(e){if(1==e.h&&(t=a(s),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,(r=a(n)).next(),p(e,r.next().value));i=t.next(),e.h=2}))},D.prototype._asNative=function(){for(var e=new I,t=a(this),i=t.next();!i.done;i=t.next()){var n=a(i.value);i=n.next().value,n=n.next().value,e.append(i,n)}return e},D.prototype._blob=function(){var e=\"----formdata-polyfill-\"+Math.random(),t=[],i=\"--\"+e+'\\r\\nContent-Disposition: form-data; name=\"';return this.forEach((function(e,n){return\"string\"==typeof e?t.push(i+N(S(n))+'\"\\r\\n\\r\\n'+S(e)+\"\\r\\n\"):t.push(i+N(S(n))+'\"; filename=\"'+N(e.name)+'\"\\r\\nContent-Type: '+(e.type||\"application/octet-stream\")+\"\\r\\n\\r\\n\",e,\"\\r\\n\")})),t.push(\"--\"+e+\"--\"),new Blob(t,{type:\"multipart/form-data; boundary=\"+e})},D.prototype[Symbol.iterator]=function(){return this.entries()},D.prototype.toString=function(){return\"[object FormData]\"},w&&!w.matches&&(w.matches=w.matchesSelector||w.mozMatchesSelector||w.msMatchesSelector||w.oMatchesSelector||w.webkitMatchesSelector||function(e){for(var t=(e=(this.document||this.ownerDocument).querySelectorAll(e)).length;0<=--t&&e.item(t)!==this;);return-1<t}),O&&(D.prototype[O]=\"FormData\"),y){var P=v.XMLHttpRequest.prototype.setRequestHeader;v.XMLHttpRequest.prototype.setRequestHeader=function(e,t){P.call(this,e,t),\"content-type\"===e.toLowerCase()&&(this.B=!0)},v.XMLHttpRequest.prototype.send=function(e){e instanceof D?(e=e._blob(),this.B||this.setRequestHeader(\"Content-Type\",e.type),y.call(this,e)):y.call(this,e)}}A&&(v.fetch=function(e,t){return t&&t.body&&t.body instanceof D&&(t.body=t.body._blob()),A.call(this,e,t)}),b&&(v.navigator.sendBeacon=function(e,t){return t instanceof D&&(t=t._asNative()),b.call(this,e,t)}),v.FormData=D}}();const FD=()=>{const e=kC(\"AREAS\");0===e.length&&e.push(rI.GLOBAL);return cS(e).call(e,((e,t,i)=>{const n=BD(t);return n?0===i?n:\"\".concat(e,\",\").concat(n):e}),\"\")},BD=e=>e===rI.OVERSEA?\"\".concat(aI.ASIA,\",\").concat(aI.EUROPE,\",\").concat(aI.AFRICA,\",\").concat(aI.NORTH_AMERICA,\",\").concat(aI.SOUTH_AMERICA,\",\").concat(aI.OCEANIA):aI[e],jD=e=>{const t={CODE:\"\",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[],PROXY_SERVER_TYPE3:[]};return e.map((e=>{const i=cI[e],n=Object.keys(i);n&&n.map((e=>{\"CODE\"!==e&&(t[e]=t[e].concat(i[e]))}))})),t},GD={GLOBAL:{ASIA:[rI.CHINA,rI.JAPAN,rI.INDIA,rI.KOREA,rI.HKMC],EUROPE:[],NORTH_AMERICA:[rI.US],SOUTH_AMERICA:[],OCEANIA:[],AFRICA:[]}},WD=Object.keys(GD[rI.GLOBAL]),HD=[rI.CHINA,rI.NORTH_AMERICA,rI.EUROPE,rI.ASIA,rI.JAPAN,rI.INDIA,rI.OCEANIA,rI.SOUTH_AMERICA,rI.AFRICA,rI.KOREA,rI.HKMC,rI.US],KD=function(e,t){let i=[];if(Pr(e).call(e,rI.GLOBAL)){const s=[rI.GLOBAL,rI.OVERSEA],o=Object.keys(cI);if(t===rI.GLOBAL)throw new xv(xg.INVALID_PARAMS,\"GLOBAL is an invalid excludedArea value\");if(t===rI.CHINA)i=[rI.OVERSEA];else if(r=t,Pr(WD).call(WD,r)){const e=(n=t,GD[rI.GLOBAL][n]||[]),r=[...s,t,...e];i=o.filter((e=>!Pr(r).call(r,e)))}else if(function(e){let t=!1;return WD.forEach((i=>{var n;Pr(n=GD[rI.GLOBAL][i]).call(n,e)&&(t=!0)})),t}(t)){const e=function(e){let t;return WD.forEach((i=>{var n;Pr(n=GD[rI.GLOBAL][i]).call(n,e)&&(t=i)})),t}(t),n=[...s,e,t];i=o.filter((e=>!Pr(n).call(n,e)))}else i=e;i=function(e){const t=[];return HD.forEach((i=>{Pr(e).call(e,i)&&t.push(i)})),t.concat(e.filter((e=>!Pr(HD).call(HD,e))))}(i)}else i=e;var n,r;return i};function YD(e){var t,i;if(!e&&Pr(t=kC(\"AREAS\")).call(t,rI.EXTENSIONS))return KC.debug(\"update area from ap : reset\"),void qD(sv,!0);if(!Pr(i=kC(\"AREAS\")).call(i,rI.GLOBAL)||!e)return;let n=cI.EXTENSIONS;n&&(n={CODE:BD(rI.EXTENSIONS),WEBCS_DOMAIN:[\"ap-web-1-\".concat(e,\".agora.io\")],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],PROXY_CS:[\"proxy-ap-web-\".concat(e,\".agora.io\")],CDS_AP:[\"cds-ap-web-1-\".concat(e,\".agora.io\"),\"cds-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],ACCOUNT_REGISTER:[\"sua-ap-web-1-\".concat(e,\".agora.io\"),\"sua-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],UAP_AP:[\"uap-ap-web-1-\".concat(e,\".agora.io\"),\"uap-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],EVENT_REPORT_DOMAIN:[\"statscollector-1-\".concat(e,\".agora.io\")],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-\".concat(e,\".agora.io\")],LOG_UPLOAD_SERVER:[\"logservice-\".concat(e,\".agora.io\")],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy-\".concat(e,\".agora.io\")]},KC.debug(\"update area from ap success: \".concat(e,\",config is \"),n),LC(\"AREAS\",[rI.EXTENSIONS],!0),Object.keys(n).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){LC(e,n[e][0])}else LC(e,n[e])})))}function qD(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=rv.reportApiInvoke(null,{name:sT.SET_AREA,options:e,tag:oT.TRACER});try{let n=[];if(\"string\"==typeof e&&(n=[e]),Array.isArray(e)&&(e.forEach((e=>{if(!Pr(oI).call(oI,e))throw new xv(xg.INVALID_PARAMS,\"invalid area code\")})),n=e),\"[object Object]\"===Object.prototype.toString.call(e)){const{areaCode:t,excludedArea:i}=e;if(!t)throw new xv(xg.INVALID_PARAMS,\"area code is needed\");let r=t;\"string\"==typeof t&&(r=[t]),n=i?KD(r,i):r}if(!t){if(MC.AREAS){const e=new xv(xg.PROHIBITED_OPERATION,\"setArea is prohibited because of config-distribute\");return i.onError(e),void KC.warning(\"setArea is prohibited because of config-distribute\")}if(Pr(n).call(n,rI.GLOBAL)&&kC(\"AREAS\")===rI.EXTENSIONS){const e=new xv(xg.PROHIBITED_OPERATION,\"setArea is prohibited because of ap extensions\");return i.onError(e),void KC.warning(\"setArea is prohibited because of ap extensions\")}}LC(\"AREAS\",n,t);const r=jD(n);Object.keys(r).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){LC(e,r[e][0])}else LC(e,r[e])})),KC.debug(\"set area success:\",n.join(\",\"))}catch(e){throw i.onError(e),e}i.onSuccess()}function JD(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function zD(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?JD(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):JD(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let XD=1;function QD(e,t,i,n,r){XD+=1;const s={sid:i.sid,command:\"convergeAllocateEdge\",uid:\"666\",appId:i.appId,ts:Math.floor(Date.now()/1e3),seq:XD,requestId:XD,version:OC,cname:i.cname},o={service_name:t,json_body:JSON.stringify(s)};let a,c,d=e[0];return XT((async()=>{a=Date.now();const e=await VD(d,{data:o,cancelToken:n,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"}});if(c=Date.now()-a,0!==e.code){const t=new xv(xg.UNEXPECTED_RESPONSE,\"live streaming ap error, code\"+e.code,{retry:!0,responseTime:c});throw KC.error(t.toString()),t}const i=JSON.parse(e.json_body);if(200!==i.code){const e=new xv(xg.UNEXPECTED_RESPONSE,\"live streaming app center error, code: \".concat(i.code,\", reason: \").concat(i.reason),{code:i.code,responseTime:c});throw KC.error(e.toString()),e}if(!i.servers||0===i.servers.length){const e=new xv(xg.UNEXPECTED_RESPONSE,\"live streaming app center empty server\",{code:i.code,responseTime:c});throw KC.error(e.toString()),e}const r=function(e,t){return{addressList:e.servers.map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(kC(\"WORKER_DOMAIN\"),\":\").concat(e.wss,\"?serviceName=\").concat(encodeURIComponent(t)))),workerToken:e.workerToken,vid:e.vid}}(i,t);return kC(\"LIVE_STREAMING_ADDRESS\")&&(r.addressList=kC(\"LIVE_STREAMING_ADDRESS\")instanceof Array?kC(\"LIVE_STREAMING_ADDRESS\"):[kC(\"LIVE_STREAMING_ADDRESS\")]),zD(zD({},r),{},{responseTime:c})}),((n,r)=>(rv.apworkerEvent(i.sid,{success:!0,sc:200,serviceName:t,responseDetail:JSON.stringify(n.addressList),firstSuccess:0===r,responseTime:c,serverIp:e[r%e.length]}),!1)),((n,r)=>(rv.apworkerEvent(i.sid,{success:!1,sc:n.data&&n.data.code||200,serviceName:t,responseTime:c,serverIp:e[r%e.length]}),!!(n.code!==xg.OPERATION_ABORTED&&n.code!==xg.UNEXPECTED_RESPONSE||n.data&&n.data.retry)&&(d=e[(r+1)%e.length],!0))),r)}let ZD=1;function $D(e,t,i,n){let{url:r,areaCode:s}=e;const o=Date.now();let a;const[c,d]=rP(t,s,[hy.CHOOSE_SERVER]);let l=RT.networkState;return XT((async()=>{l&&RT.networkState===hT.OFFLINE&&RT.onlineWaiter&&await tg.race([RT.onlineWaiter,UT(n&&n.maxRetryTimeout||JT.maxRetryTimeout)]),l=RT.networkState;const{data:e,headers:s}=await VD(r,{data:c,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);a=\"1\"===s.http3?1:-1,rv.reportResourceTiming(r,t.sid),tP(e,r,t,o,[hy.CHOOSE_SERVER],a);const d=SD(e,hy.CHOOSE_SERVER);return iP(d),ED(d,r)}),(e=>(e&&rv.joinChooseServer(t.sid,{lts:o,succ:!0,csAddr:r,opid:d,serverList:e.gatewayAddrs.map((e=>e.address)),ec:null,cid:e.cid.toString(),uid:e.uid.toString(),csIp:e.csIp,unilbsServerIds:[hy.CHOOSE_SERVER].toString(),isHttp3:a}),!1)),(e=>e.code!==xg.OPERATION_ABORTED&&(e.code===xg.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(rv.joinChooseServer(t.sid,{lts:o,succ:!1,csAddr:r,serverList:null,opid:d,ec:e.code,csIp:e.data&&e.data.csIp,unilbsServerIds:[hy.CHOOSE_SERVER].toString(),extend:JSON.stringify({networkState:l}),isHttp3:a}),KC.warning(\"[\".concat(t.clientId,\"] Choose server network error, retry\"),e),!0))),n)}function eP(e,t,i,n){let r,{url:s,areaCode:o,serviceIds:a}=e;const c=Date.now(),[d,l]=rP(t,o,a);let h;return XT((async()=>{h&&RT.networkState===hT.OFFLINE&&RT.onlineWaiter&&await tg.race([RT.onlineWaiter,UT(n&&n.maxRetryTimeout||JT.maxRetryTimeout)]),h=RT.networkState;const{data:e,headers:o}=await VD(s,{data:d,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);r=\"1\"===o.http3?1:-1,rv.reportResourceTiming(s,t.sid),tP(e,s,t,c,a,r);const l=SD(e,hy.CHOOSE_SERVER),u=SD(e,\"proxy5\"===t.cloudProxyServer?hy.CLOUD_PROXY_5:\"proxy3\"===t.cloudProxyServer||\"proxy4\"===t.cloudProxyServer?hy.CLOUD_PROXY:hy.CLOUD_PROXY_FALLBACK);return iP(l),{gatewayInfo:ED(l,s),proxyInfo:u,url:s}}),(e=>(e.gatewayInfo&&rv.joinChooseServer(t.sid,{lts:c,succ:!0,csAddr:s,serverList:e.gatewayInfo.gatewayAddrs.map((e=>e.address)),ec:null,opid:l,cid:e.gatewayInfo.cid.toString(),uid:e.gatewayInfo.uid.toString(),csIp:e.gatewayInfo.csIp,unilbsServerIds:a.toString(),isHttp3:r}),e.proxyInfo&&rv.joinWebProxyAP(t.sid,{lts:c,sucess:1,apServerAddr:s,turnServerAddrList:e.proxyInfo.addresses.map((e=>e.ip)).join(\",\"),errorCode:null,eventType:t.cloudProxyServer,unilbsServerIds:a.toString()}),!1)),(e=>e.code!==xg.OPERATION_ABORTED&&(e.code===xg.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(rv.joinWebProxyAP(t.sid,{lts:c,sucess:0,apServerAddr:s,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer,unilbsServerIds:a.toString(),extend:JSON.stringify({networkState:h})}),KC.warning(\"[\".concat(t.clientId,\"] multi unilbs network error, retry\"),e),!0))),n)}const tP=(e,t,i,n,r,s)=>{const o=[],a=o=>{4096===o.flag?rv.joinChooseServer(i.sid,{lts:n,succ:!1,csAddr:t,opid:e.opid,serverList:null,ec:o.error.message,csIp:o.error.data&&o.error.data.csIp,unilbsServerIds:r.toString(),isHttp3:s}):1048576!==o.flag&&4194304!==o.flag&&4194310!==o.flag||rv.joinWebProxyAP(i.sid,{lts:n,sucess:0,apServerAddr:t,turnServerAddrList:null,errorCode:o.error.code,eventType:i.cloudProxyServer,unilbsServerIds:r.toString()})};if(e.response_body.forEach((t=>{const i=t.buffer.code;if(23===t.uri&&0===i&&!t.buffer.edges_services)if(4194310===t.buffer.flag)KC.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\"),t.buffer.edges_services=[];else{const i={error:new xv(xg.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:t.buffer.flag};o.push(i),a(i)}if(0!==i){const n=kI(i),r={error:new xv(xg.CAN_NOT_GET_GATEWAY_SERVER,n.desc,{desc:n.desc,retry:n.retry,csIp:e.detail[502]}),flag:t.buffer.flag};4194310===t.buffer.flag?KC.warning(r.error.toString()):o.push(r),a(r)}})),o.length)throw KC.warning(\"[\".concat(i.clientId,\"] multi unilbs \").concat(t,\" failed, \").concat(o.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message,\", retry: \").concat(e.error.data.retry))).join(\" | \"))),new xv(xg.CAN_NOT_GET_GATEWAY_SERVER,o.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message))).join(\" | \"),{retry:!!o.find((e=>e.error.data.retry)),csIp:e.detail[502],desc:[...new Set(o.map((e=>{var t;return null==e||null===(t=e.error)||void 0===t||null===(t=t.data)||void 0===t?void 0:t.desc})).filter((e=>!!e)))]})},iP=e=>{var t,i,n,r;if(e.addresses&&0===e.addresses.length&&0===e.code)throw new xv(xg.CAN_NOT_GET_GATEWAY_SERVER,\"void gateway address\",{retry:!0,csIp:e.detail&&e.detail[502]});kC(\"AP_AREA\")&&(null!==(n=e.detail)&&void 0!==n&&n[23]&&\"string\"==typeof(null===(r=e.detail)||void 0===r?void 0:r[23])?YD(e.detail[23].toLowerCase()):YD());if(null!==(t=e.detail)&&void 0!==t&&t[19]&&\"string\"==typeof(null===(i=e.detail)||void 0===i?void 0:i[19])){const t=e.detail[19],i=null==t?void 0:t.split(\";\");for(let t=0;t<i.length;t++){var s;const n=fy(s=i[t]).call(s);e.addresses[t]&&i&&(e.addresses[t].fingerprint=n)}}if(kC(\"GATEWAY_ADDRESS\")&&kC(\"GATEWAY_ADDRESS\").length>0){KC.debug(\"assign gateway address to\",kC(\"GATEWAY_ADDRESS\"));const t=kC(\"GATEWAY_ADDRESS\").map((t=>{var i,n;const r=null!==(i=null===(n=e.addresses.find((e=>e.ip===t.ip&&e.port===t.port)))||void 0===n?void 0:n.fingerprint)&&void 0!==i?i:\"\";return{ip:t.ip,port:t.port,ticket:e.addresses[0]&&e.addresses[0].ticket,fingerprint:r}}));e.addresses=t}},nP=(e,t)=>{if(e.response_body&&e.response_body.length){const t=e.response_body[0];if(0!==t.buffer.code){const e=kI(t.buffer.code);throw new xv(xg.UPDATE_TICKET_FAILED,\"[\".concat(t.buffer.code,\"]: \").concat(e.desc),{retry:e.retry})}return t.buffer.ticket}throw KC.debug(\"update ticket request received ap response without response body:\",t),new xv(xg.UPDATE_TICKET_FAILED,\"cannot find response body from ap response\",{retry:!1})},rP=(e,t,i)=>{const n=Math.floor(Math.random()*10**12),r={appid:e.appId,client_ts:Date.now(),opid:n,sid:e.sid,request_bodies:[{uri:22,buffer:{cname:e.cname,detail:zD({6:e.stringUid,11:t,12:kC(\"USE_NEW_TOKEN\")?\"1\":void 0,22:t},kC(\"AP_RTM\")?{26:\"RTM2\"}:{}),key:e.token,service_ids:i,uid:e.uid||0}}]};r.request_bodies.forEach((t=>{e.multiIP&&e.multiIP.gateway_ip&&(t.buffer.detail[5]=JSON.stringify({vocs_ip:[e.multiIP.uni_lbs_ip],vos_ip:[e.multiIP.gateway_ip]}))}));const s=new FormData;return s.append(\"request\",JSON.stringify(r)),[s,n]},sP=(e,t)=>{const i=Math.floor(Math.random()*10**12),n={appid:e.appId,client_ts:Date.now(),opid:i,sid:e.sid,request_bodies:[{uri:28,buffer:{cname:e.cname,detail:{1:\"\",6:e.stringUid,12:\"1\"},token:e.token,service_ids:t,uid:e.uid||0,edges_services:e.apResponse.addresses.map((e=>({ip:e.ip,port:e.port})))}}]},r=new FormData;return r.append(\"request\",JSON.stringify(n)),[r,i]};let oP=0;function aP(e){return tg.all(e.map((e=>e.then((e=>{throw e}),(e=>e))))).then((e=>{throw e}),(e=>e))}const cP=async e=>{let{fragementLength:t,referenceList:i,asyncMapHandler:n,allFailedhandler:r,promisesCollector:s}=e,o=0;const a=t;let c,d=0;const l=async()=>{const e=(()=>{const e=o*a,t=e+a;return i.slice(e,t).map(n)})();s&&s.push(...e);try{c=await aP(e)}catch(e){if(d+=a,o++,!(d>=i.length))return void await l();r(e)}e.forEach((e=>e.cancel()))};return await l(),c};async function dP(e,t,i,n){const r=async function(e,t,i,n){let r=null;const s=[],o=async()=>{const r=kC(\"WEBCS_DOMAIN\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\")).map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:FD()}))),o=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),a=await cP({fragementLength:kC(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(KC.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),$D(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},o),e[0]},promisesCollector:s});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},o),a},a=async()=>{if(await UT(1e3),null!==r)return r;const o=kC(\"WEBCS_DOMAIN_BACKUP_LIST\").map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:FD()}))),a=n.recordJoinChannelService({endTs:void 0,startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:o.map((e=>e.url))}),c=await cP({fragementLength:kC(\"FRAGEMENT_LENGTH\"),referenceList:o,asyncMapHandler:n=>(KC.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),$D(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},a),e[0]},promisesCollector:s});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),c};try{return r=await aP([o(),a()]),s.length&&s.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),r}catch(e){throw e[0]}}(e,t,i,n);return{gatewayInfo:await r}}async function lP(e,t,i,n,r){const s=e.cloudProxyServer;if(\"disabled\"===s){if(!n)return;if(e.useLocalAccessPoint)return await dP(e,t,i,r);if(kC(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")){const{gatewayInfo:n,proxyInfo:s}=await pP(e,t,i,r);return e.turnServer&&\"auto\"!==e.turnServer.mode||(e.turnServer={mode:\"manual\",servers:s.map((e=>({turnServerURL:e.address,tcpport:e.tcpport||ov.tcpport,udpport:e.udpport||ov.udpport,username:e.username||ov.username,password:e.password||ov.password,forceturn:!1,security:!0})))}),{gatewayInfo:n}}return await dP(e,t,i,r)}const{proxyInfo:o,gatewayInfo:a}=await pP(e,t,i,r),c={gatewayInfo:a};return e.turnServer={mode:\"manual\",servers:o.map((e=>({turnServerURL:e.address,tcpport:\"proxy3\"===s?void 0:e.tcpport?e.tcpport:ov.tcpport,udpport:\"proxy4\"===s?void 0:e.udpport?e.udpport:ov.udpport,username:e.username||ov.username,password:e.password||ov.password,forceturn:\"proxy4\"!==s,security:\"proxy5\"===s})))},KC.debug(\"[\".concat(e.clientId,\"] set proxy server: \").concat(e.proxyServer,\", mode: \").concat(s)),c}async function hP(e,t,i,n,r){const s=kC(\"ACCOUNT_REGISTER\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\"));let o=[];o=t.proxyServer?s.map((e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\"))):s.map((e=>\"https://\".concat(e,\"/api/v1\")));const a=null==r?void 0:r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"stringUID\",urls:o});try{const s=await async function(e,t,i,n,r){const s=Date.now(),o={sid:i.sid,opid:10,appid:i.appId,string_uid:t};let a=e[0];const c=await XT((()=>VD(a+\"\".concat(-1===a.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:o,cancelToken:n,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}})),((i,n)=>{if(0===i.code){if(i.uid<=0||i.uid>=Math.pow(2,32))throw KC.error(\"Invalid Uint Uid \".concat(t,\" => \").concat(i.uid),i),rv.reqUserAccount(o.sid,{lts:s,success:!1,serverAddr:a,stringUid:o.string_uid,uid:i.uid,errorCode:xg.INVALID_UINT_UID_FROM_STRING_UID,extend:o}),new xv(xg.INVALID_UINT_UID_FROM_STRING_UID);return rv.reqUserAccount(o.sid,{lts:s,success:!0,serverAddr:a,stringUid:o.string_uid,uid:i.uid,errorCode:null,extend:o}),!1}const r=kI(i.code);return r.retry&&(a=e[(n+1)%e.length]),rv.reqUserAccount(o.sid,{lts:s,success:!1,serverAddr:a,stringUid:o.string_uid,uid:i.uid,errorCode:r.desc,extend:o}),r.retry}),((t,i)=>t.code!==xg.OPERATION_ABORTED&&(rv.reqUserAccount(o.sid,{lts:s,success:!1,serverAddr:a,stringUid:o.string_uid,uid:null,errorCode:t.code,extend:o}),a=e[(i+1)%e.length],!0)),r);if(0!==c.code){const e=kI(c.code);throw new xv(xg.UNEXPECTED_RESPONSE,e.desc)}return c}(o,e,t,i,n);return null==r||r.recordJoinChannelService({status:\"success\",endTs:Date.now()},a),s.uid}catch(e){throw null==r||r.recordJoinChannelService({status:\"error\",endTs:Date.now(),errors:[e]},a),e}}async function uP(e,t,i){const n=kC(\"CDS_AP\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1\"):\"https://\".concat(t,\"/api/v1?action=config\"))).map((n=>function(e,t,i,n){const r=pg(),s={flag:64,cipher_method:0,features:{device:r.name,system:r.os,system_general:navigator.userAgent,vendor:t.appId,version:OC,cname:t.cname,sid:t.sid,session_id:t.sid,detail:\"\",proxyServer:t.proxyServer}};return XT((()=>VD(e,{data:s,timeout:1e3,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":54}})),void 0,(e=>e.code!==xg.OPERATION_ABORTED),n)}(n,e,t,i)));let r=null,s=null,o={};try{r=await aP(n)}catch(e){if(e.code===xg.OPERATION_ABORTED)throw e;s=e}n.forEach((e=>e.cancel()));if(rv.reportApiInvoke(e.sid,{name:sT.REQUEST_CONFIG_DISTRIBUTE,options:{error:s,res:r}}).onSuccess(),r&&r.test_tags)try{o=function(e){if(!e.test_tags)return{};const t=e.test_tags,i=Object.keys(t),n={};return i.forEach((e=>{var i;const r=fy(i=e.slice(4)).call(i),s=JSON.parse(t[e])[1];n[r]=s})),n}(r)}catch(e){}return o}async function pP(e,t,i,n){const r=kC(\"PROXY_SERVER_TYPE3\"),s=(e,t,i)=>{let n=i||r;return Array.isArray(n)&&(n=t%2==0?r[1]:r[0]),\"https://\".concat(n,\"/ap/?url=\").concat(e)};let o=null;const a=[],c=async()=>{const r=kC(\"WEBCS_DOMAIN\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\")).map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?s(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):s(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:FD(),serviceIds:[hy.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?hy.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?hy.CLOUD_PROXY:hy.CLOUD_PROXY_FALLBACK]}})),o=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),c=await cP({fragementLength:kC(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(KC.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),eP(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},o),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},o),c},d=async()=>{if(await UT(1e3),null!==o)return o;const r=kC(\"WEBCS_DOMAIN_BACKUP_LIST\").map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?s(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):s(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:FD(),serviceIds:[hy.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?hy.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?hy.CLOUD_PROXY:hy.CLOUD_PROXY_FALLBACK]}})),c=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),d=await cP({fragementLength:kC(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(KC.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),eP(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},c),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},c),d};let l,h,u;try{({gatewayInfo:l,proxyInfo:h,url:u}=await aP([c(),d()]))}catch(e){throw e[0]}if(a.length&&a.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),!l||!h)throw new xv(xg.UNEXPECTED_ERROR,\"missing gateway or proxy response\").print();if(e.apUrl=u,\"disabled\"!==e.cloudProxyServer&&Array.isArray(r)&&u){const t=/^https?:\\/\\/(.+?)(\\/.*)?$/.exec(u)[1];Pr(r).call(r,t)&&(e.proxyServer=t,KC.setProxyServer(t),rv.setProxyServer(t))}return o={gatewayInfo:l,proxyInfo:await RD(h,l.uid)},o}async function _P(e,t,i,n){const r=kC(\"UAP_AP\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\")).map((e=>t.proxyServer?\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1?action=uap\"):\"https://\".concat(e,\"/api/v1?action=uap\")));return await QD(r,e,t,i,n)}async function EP(e,t,i){const n=kC(\"UAP_AP\").slice(0,kC(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1?action=uap\"):\"https://\".concat(t,\"/api/v1?action=uap\"))).map((n=>function(e,t,i,n){const r={command:\"convergeAllocateEdge\",sid:t.sid,appId:t.appId,token:t.token,ts:Date.now(),version:OC,cname:t.cname,uid:t.uid.toString(),requestId:ZD,seq:ZD};ZD+=1;const s={service_name:\"tele_channel\",json_body:JSON.stringify(r)};return XT((async()=>{const t=await VD(e,{data:s,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":61}});if(0!==t.code){const e=new xv(xg.UNEXPECTED_RESPONSE,\"cross channel ap error, code\"+t.code,{retry:!0});throw KC.error(e.toString()),e}const n=JSON.parse(t.json_body);if(200!==n.code){const e=new xv(xg.UNEXPECTED_RESPONSE,\"cross channel app center error, code: \".concat(n.code,\", reason: \").concat(n.reason));throw KC.error(e.toString()),e}if(!n.servers||0===n.servers.length){const e=new xv(xg.UNEXPECTED_RESPONSE,\"cross channel app center empty server\");throw KC.error(e.toString()),e}return{vid:n.vid,workerToken:n.workerToken,addressList:(kC(\"CHANNEL_MEDIA_RELAY_SERVERS\")||n.servers).map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(kC(\"WORKER_DOMAIN\"),\":\").concat(e.wss)))}}),void 0,(e=>!!(e.code!==xg.OPERATION_ABORTED&&e.code!==xg.UNEXPECTED_RESPONSE||e.data&&e.data.retry)),n)}(n,e,t,i)));try{const e=await aP(n);return n.forEach((e=>e.cancel())),e}catch(e){throw e[0]}}async function mP(e,t,i){let n=null;const r=[],s=async s=>{const o=kC(s?\"WEBCS_DOMAIN_BACKUP_LIST\":\"WEBCS_DOMAIN\").map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\")));return s&&(await UT(1e3),null!==n)?n:await cP({fragementLength:kC(\"FRAGEMENT_LENGTH\"),referenceList:o,asyncMapHandler:n=>(KC.debug(\"[\".concat(e.clientId,\"] update ticket, Connect to \").concat(s?\"backup\":\"\",\" choose_server:\"),n),function(e,t,i,n){const[r]=sP(t,[hy.CHOOSE_SERVER]);let s=RT.networkState;return XT((async()=>{s&&RT.networkState===hT.OFFLINE&&RT.onlineWaiter&&await tg.race([RT.onlineWaiter,UT(n&&n.maxRetryTimeout||JT.maxRetryTimeout)]),s=RT.networkState;const t=await VD(e,{data:r,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0);return nP(t,e)}),(()=>!1),(e=>e.code!==xg.OPERATION_ABORTED&&(e.code===xg.UPDATE_TICKET_FAILED?e.data.retry:(KC.warning(\"[\".concat(t.clientId,\"] update ticket network error, retry\"),e),!0))),n)}(n,e,t,i)),allFailedhandler:e=>{throw e[0]},promisesCollector:r})};try{return n=await aP([s(!1),s(!0)]),r.length&&r.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),n}catch(e){throw e[0]}}function fP(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function gP(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?fP(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):fP(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class TP extends iT{constructor(){super(),nu(this,\"configs\",void 0),nu(this,\"joinInfo\",void 0),nu(this,\"cancelToken\",void 0),nu(this,\"retryConfig\",{timeout:3e3,timeoutFactor:1.5,maxRetryCount:1,maxRetryTimeout:1e4}),nu(this,\"interval\",void 0),nu(this,\"mutex\",new YT(\"config-distribute\")),nu(this,\"mutableParamsRead\",!1)}startGetConfigDistribute(e,t){this.joinInfo=e,this.cancelToken=t,this.interval&&this.stopGetConfigDistribute(),kC(\"ENABLE_CONFIG_DISTRIBUTE\")&&(this.updateConfigDistribute(),this.interval=window.setInterval((()=>{this.updateConfigDistribute()}),kC(\"CONFIG_DISTRIBUTE_INTERVAL\")))}stopGetConfigDistribute(){this.interval&&clearInterval(this.interval),this.interval=void 0,this.joinInfo=void 0,this.cancelToken=void 0}async awaitConfigDistributeComplete(){if(!this.mutex.isLocked)return;(await this.mutex.lock())()}async updateConfigDistribute(){if(!this.mutableParamsRead){this.mutableParamsRead=!0;rv.reportApiInvoke(null,{options:void 0,name:sT.LOAD_CONFIG_FROM_LOCALSTORAGE,tag:oT.TRACER}).onSuccess(JSON.stringify(MC))}if(!this.joinInfo||!this.cancelToken||!this.retryConfig)return void KC.debug(\"[config-distribute] get config distribute interrupted have no joininfo\");let e;const t=await this.mutex.lock();try{e=await uP(this.joinInfo,this.cancelToken,this.retryConfig),KC.debug(\"[config-distribute] get config distribute\",JSON.stringify(e)),e.limit_bitrate&&this.handleBitrateLimit(e.limit_bitrate),this.cacheGlobalParameterConfig(e),this.configs=e}catch(e){const t=new xv(xg.NETWORK_RESPONSE_ERROR,e);KC.warning(\"[config-distribute] \".concat(t.toString()))}finally{t()}}getBitrateLimit(){return this.configs?this.configs.limit_bitrate:void 0}handleBitrateLimit(e){var t;(t=e)&&t.uplink&&t.id&&void 0!==t.uplink.max_bitrate&&void 0!==t.uplink.min_bitrate&&(this.configs&&this.configs.limit_bitrate?this.configs&&this.configs.limit_bitrate&&this.configs.limit_bitrate.id!==e.id&&this.emit(dI.UPDATE_BITRATE_LIMIT,e):this.emit(dI.UPDATE_BITRATE_LIMIT,e))}getLowStreamConfigDistribute(){return this.configs&&this.configs.limit_bitrate&&gP({},this.configs.limit_bitrate.low_stream_uplink)}cacheGlobalParameterConfig(e){var t;const i=Zu(t=Object.keys(e).filter((e=>/^webrtc_ng_global_parameter/.test(e)))).call(t);for(let t=0;t<i.length;t++)for(let n=i.length-1;n>t;n--){const t=i[n];if(\"number\"==typeof e[t].__priority){const r=e[t].__priority,s=i[n-1];if(\"number\"==typeof e[s].__priority){if(!(r>e[s].__priority))continue;{const e=t;i[n]=i[n-1],i[n-1]=e}}else{const e=t;i[n]=i[n-1],i[n-1]=e}}}const n={};i.forEach((t=>{const i=e[t],r=i.__expires;Object.keys(i).forEach((e=>{\"__priority\"===e||\"__expires\"===e||Object.prototype.hasOwnProperty.call(n,e)||(n[e]=gP({value:i[e]},r&&{expires:r}))}))}));try{!function(e){try{const t=Date.now();Object.keys(e).forEach((i=>{switch(i){case\"ENABLE_EVENT_REPORT\":case\"UPLOAD_LOG\":if(Object.prototype.hasOwnProperty.call(PC,i)){const{value:n,expires:r}=e[i];if(r&&r<=t)return;MC[i]=n,PC[i]=n,KC.debug(\"Update global parameters from config distribute\",i,n)}}}))}catch(t){KC.error(\"Error update config immediately: \".concat(e),t.message)}}(n);const e=JSON.stringify(n),t=window.btoa(e);window.localStorage.setItem(\"websdk_ng_global_parameter\",t),KC.debug(\"Caching global parameters \".concat(e))}catch(e){KC.error(\"Error caching global parameters:\",e.message)}}}function SP(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function RP(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?SP(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):SP(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class CP extends iT{constructor(e,t,i,n){super(),nu(this,\"spec\",void 0),nu(this,\"token\",void 0),nu(this,\"websocket\",void 0),nu(this,\"pingpongTimer\",void 0),nu(this,\"reconnectMode\",\"retry\"),nu(this,\"serviceMode\",void 0),nu(this,\"reqId\",0),nu(this,\"commandReqId\",0),nu(this,\"handleWebSocketOpen\",(()=>{this.reconnectMode=\"retry\",this.startPingPong()})),nu(this,\"handleWebSocketMessage\",(e=>{if(!e.data)return;const t=JSON.parse(e.data);t.requestId?this.emit(\"@\".concat(t.requestId,\"-\").concat(t.sid),t):this.serviceMode===yv.INJECT?this.emit(Kv.INJECT_STREAM_STATUS,t):(rv.workerEvent(this.spec.sid,{actionType:\"status\",serverCode:t.code,workerType:this.serviceMode===yv.TRANSCODE?1:2}),this.emit(Kv.PUBLISH_STREAM_STATUS,t))})),this.spec=t,this.token=e,this.serviceMode=n,this.websocket=new XI(\"live-streaming\",i),this.websocket.on(Iv.CONNECTED,this.handleWebSocketOpen),this.websocket.on(Iv.ON_MESSAGE,this.handleWebSocketMessage),this.websocket.on(Iv.REQUEST_NEW_URLS,((e,t)=>{fT(this,Kv.REQUEST_NEW_ADDRESS).then(e).catch(t)})),this.websocket.on(Iv.RECONNECTING,(()=>{this.websocket.reconnectMode=this.reconnectMode}))}init(e){return this.websocket.init(e)}async request(e,t,i,n){this.reqId+=1,\"request\"===e&&(this.commandReqId+=1);const r=this.commandReqId,s=this.reqId;if(!s||!this.websocket)throw new xv(xg.UNEXPECTED_ERROR);const o=RP({command:e,sdkVersion:\"4.19.3\"===OC?\"0.0.1\":OC,seq:s,requestId:s,allocate:i,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(Date.now()/1e3)},t);if(\"closed\"===this.websocket.state)throw new xv(xg.WS_DISCONNECT);const a=()=>new tg(((e,t)=>{this.websocket.once(Iv.CLOSED,(()=>t(new xv(xg.WS_ABORT)))),this.websocket.once(Iv.CONNECTED,e)}));\"connected\"!==this.websocket.state&&await a(),o.clientRequest&&(o.clientRequest.workerToken=this.token);const c=new tg(((e,t)=>{const i=()=>{t(new xv(xg.WS_ABORT))};this.websocket.once(Iv.RECONNECTING,i),this.websocket.once(Iv.CLOSED,i),this.once(\"@\".concat(s,\"-\").concat(this.spec.sid),(t=>{e(t)}))}));n&&rv.workerEvent(this.spec.sid,RP(RP({},n),{},{requestId:r,actionType:\"request\",payload:JSON.stringify(t.clientRequest),serverCode:0,code:0}));const d=Date.now();this.websocket.sendMessage(o);let l=null;try{l=await c}catch(n){if(\"closed\"===this.websocket.state)throw n;return await a(),await this.request(e,t,i)}return n&&rv.workerEvent(this.spec.sid,RP(RP({},n),{},{requestId:r,actionType:\"response\",payload:JSON.stringify(l.serverResponse),serverCode:l.code,success:200===l.code,responseTime:Date.now()-d})),200!==l.code&&this.handleResponseError(l),l}tryNextAddress(){this.reconnectMode=\"tryNext\",this.websocket.reconnect(\"tryNext\")}close(){const e=\"4.19.3\"===OC?\"0.0.1\":OC;this.reqId+=1,\"connected\"===this.websocket.state?(this.websocket.sendMessage({command:\"request\",appId:this.spec.appId,cname:this.spec.cname,uid:this.spec.uid.toString(),sdkVersion:e,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(Date.now()/1e3),requestId:this.reqId,clientRequest:{command:\"DestroyWorker\"}}),this.websocket.close(!1,!0)):this.websocket.close(!1),this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(e){switch(e.code){case qv.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void KC.warning(\"live stream response already exists stream\");case qv.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case qv.LIVE_STREAM_RESPONSE_BAD_STREAM:case qv.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return new xv(xg.LIVE_STREAMING_INVALID_ARGUMENT,\"\",{code:e.code}).throw();case qv.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;throw new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case qv.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return new xv(xg.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,\"\",{code:e.code}).throw();case qv.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const t=new xv(xg.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);return this.emit(Kv.WARNING,t,e.serverResponse.url)}case qv.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:{const t=new xv(xg.LIVE_STREAMING_WARN_FREQUENT_REQUEST);return this.emit(Kv.WARNING,t,e.serverResponse.url)}case qv.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case qv.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return new xv(xg.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,\"\",{code:e.code}).throw();case qv.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:{const t=new xv(xg.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT);return this.emit(Kv.WARNING,t,e.serverResponse.url)}case qv.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code}).throw();case qv.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream resource limit\",{retry:!0,changeAddress:!0});case qv.LIVE_STREAM_RESPONSE_WORKER_LOST:case qv.LIVE_STREAM_RESPONSE_WORKER_QUIT:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;throw new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case qv.ERROR_FAIL_SEND_MESSAGE:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;if(\"UpdateTranscoding\"===e.serverResponse.command||\"ControlStream\"===e.serverResponse.command)return new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{code:e.code}).throw();throw new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case qv.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return new xv(xg.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code}).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval((()=>{\"connected\"===this.websocket.state&&this.request(\"ping\",{}).catch(FT)}),6e3)}}function vP(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function IP(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vP(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vP(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class yP extends iT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:JT,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:JT;super(),nu(this,\"onLiveStreamWarning\",void 0),nu(this,\"onLiveStreamError\",void 0),nu(this,\"onInjectStatusChange\",void 0),nu(this,\"spec\",void 0),nu(this,\"retryTimeout\",1e4),nu(this,\"connection\",void 0),nu(this,\"httpRetryConfig\",void 0),nu(this,\"wsRetryConfig\",void 0),nu(this,\"streamingTasks\",new Map),nu(this,\"isStartingStreamingTask\",!1),nu(this,\"taskMutex\",new YT(\"live-streaming\")),nu(this,\"cancelToken\",EC.CancelToken.source()),nu(this,\"transcodingConfig\",void 0),nu(this,\"injectConfig\",IP({},Hv)),nu(this,\"injectLoopTimes\",0),nu(this,\"uapResponse\",void 0),nu(this,\"lastTaskId\",1),nu(this,\"statusError\",new Map),this.spec=e,this.httpRetryConfig=i,this.wsRetryConfig=t}async setTranscodingConfig(e){const t=IP(IP({},Wv),e);66!==t.videoCodecProfile&&77!==t.videoCodecProfile&&100!==t.videoCodecProfile&&(KC.debug(\"[\".concat(this.spec.clientId,\"] set transcoding config, fix video codec profile: \").concat(t.videoCodecProfile,\" -> 100\")),t.videoCodecProfile=100),t.transcodingUsers||(t.transcodingUsers=t.userConfigs),t.transcodingUsers&&(t.transcodingUsers=t.transcodingUsers.map((e=>IP(IP(IP({},Bv),e),{},{zOrder:e.zOrder?e.zOrder+1:1})))),function(e){Kg(e.width)||jg(e.width,\"config.width\",0,1e4),Kg(e.height)||jg(e.height,\"config.height\",0,1e4),Kg(e.videoBitrate)||jg(e.videoBitrate,\"config.videoBitrate\",1,1e6),Kg(e.videoFrameRate)||jg(e.videoFrameRate,\"config.videoFrameRate\"),Kg(e.lowLatency)||Fg(e.lowLatency,\"config.lowLatency\"),Kg(e.audioSampleRate)||Bg(e.audioSampleRate,\"config.audioSampleRate\",[32e3,44100,48e3]),Kg(e.audioBitrate)||jg(e.audioBitrate,\"config.audioBitrate\",1,128),Kg(e.audioChannels)||Bg(e.audioChannels,\"config.audioChannels\",[1,2,3,4,5]),Kg(e.videoGop)||jg(e.videoGop,\"config.videoGop\"),Kg(e.videoCodecProfile)||Bg(e.videoCodecProfile,\"config.videoCodecProfile\",[66,77,100]),Kg(e.userCount)||jg(e.userCount,\"config.userCount\",0,17),Kg(e.backgroundColor)||jg(e.backgroundColor,\"config.backgroundColor\",0,16777215),Kg(e.userConfigExtraInfo)||Wg(e.userConfigExtraInfo,\"config.userConfigExtraInfo\",0,4096,!1),e.transcodingUsers&&!Kg(e.transcodingUsers)&&(Hg(e.transcodingUsers,\"config.transcodingUsers\"),e.transcodingUsers.forEach(((e,t)=>{Fv(e.uid),Kg(e.x)||jg(e.x,\"transcodingUser[\".concat(t,\"].x\"),0,1e4),Kg(e.y)||jg(e.y,\"transcodingUser[\".concat(t,\"].y\"),0,1e4),Kg(e.width)||jg(e.width,\"transcodingUser[\".concat(t,\"].width\"),0,1e4),Kg(e.height)||jg(e.height,\"transcodingUser[\".concat(t,\"].height\"),0,1e4),Kg(e.zOrder)||jg(e.zOrder-1,\"transcodingUser[\".concat(t,\"].zOrder\"),0,100),Kg(e.alpha)||jg(e.alpha,\"transcodingUser[\".concat(t,\"].alpha\"),0,1,!1)}))),Kg(e.watermark)||Gv(e.watermark,\"watermark\"),Kg(e.backgroundImage)||Gv(e.backgroundImage,\"backgroundImage\"),e.images&&!Kg(e.images)&&(Hg(e.images,\"config.images\"),e.images.forEach(((e,t)=>{Gv(e,\"images[\".concat(t,\"]\"))})))}(t);const i=[];t.images&&i.push(...t.images.map((e=>IP(IP(IP({},jv),e),{},{zOrder:255})))),t.backgroundImage&&(i.push(IP(IP(IP({},jv),t.backgroundImage),{},{zOrder:0})),delete t.backgroundImage),t.watermark&&(i.push(IP(IP(IP({},jv),t.watermark),{},{zOrder:255})),delete t.watermark),t.images=i,t.transcodingUsers&&(t.userConfigs=t.transcodingUsers.map((e=>IP({},e))),t.userCount=t.transcodingUsers.length,delete t.transcodingUsers);const n=(t.userConfigs||[]).map((e=>\"number\"==typeof e.uid?tg.resolve(e.uid):hP(e.uid,this.spec,this.cancelToken.token,this.httpRetryConfig)));if((await tg.all(n)).forEach(((e,i)=>{t.userConfigs&&t.userConfigs[i]&&(t.userConfigs[i].uid=e)})),this.transcodingConfig=t,this.connection)try{var r;const e=await this.connection.request(\"request\",{clientRequest:{command:\"UpdateTranscoding\",transcodingConfig:this.transcodingConfig}},!1,{command:\"UpdateTranscoding\",workerType:1,requestByUser:!0,tid:Array.from(kv(r=this.streamingTasks).call(r)).map((e=>e.taskId)).join(\"#\")});KC.debug(\"[\".concat(this.spec.clientId,\"] update live transcoding config success, code: \").concat(e.code,\", config:\"),JSON.stringify(this.transcodingConfig))}catch(e){if(!e.data||!e.data.retry)throw e;e.data.changeAddress&&this.connection.tryNextAddress(),this.streamingTasks.forEach((t=>{KC.warning(\"[\".concat(this.spec.clientId,\"] live streaming receive error\"),e.toString(),\"try to republish\",t.url),this.startLiveStreamingTask(t.url,t.mode,e).then((()=>{KC.debug(\"[\".concat(this.spec.clientId,\"] live streaming republish \").concat(t.url,\" success\"))})).catch((e=>{KC.error(\"[\".concat(this.spec.clientId,\"] live streaming republish failed\"),t.url,e.toString()),this.onLiveStreamError&&this.onLiveStreamError(t.url,e)}))}))}}setInjectStreamConfig(e,t){this.injectConfig=Object.assign({},this.injectConfig,e),this.injectLoopTimes=t}async startLiveStreamingTask(e,t,i){var n;if(Array.from(kv(n=this.streamingTasks).call(n)).find((e=>e.mode===yv.INJECT))&&t===yv.INJECT)return new xv(xg.LIVE_STREAMING_TASK_CONFLICT,\"inject stream over limit\").throw();if(!this.transcodingConfig&&t===yv.TRANSCODE)throw new xv(xg.INVALID_OPERATION,\"[LiveStreaming] no transcoding config found, can not start transcoding streaming task\");let r={command:\"PublishStream\",ts:Date.now(),url:e,uid:this.spec.uid.toString(),autoDestroyTime:100,acceptImageTimeout:!0};KC.debug(\"[\".concat(this.spec.clientId,\"] start live streaming \").concat(e,\", mode: \").concat(t));const s=await this.taskMutex.lock();if(!this.connection&&i)return void s();if(this.streamingTasks.get(e)&&!i)return s(),new xv(xg.LIVE_STREAMING_TASK_CONFLICT).throw();try{this.connection||(this.connection=await this.connect(t))}catch(e){throw s(),e}switch(t){case yv.TRANSCODE:r.transcodingConfig=IP({},this.transcodingConfig);break;case yv.RAW:break;case yv.INJECT:r={cname:this.spec.cname,command:\"InjectStream\",sid:this.spec.sid,transcodingConfig:this.injectConfig,ts:Date.now(),url:e,loopTimes:this.injectLoopTimes}}this.uapResponse&&this.uapResponse.vid&&(r.vid=this.uapResponse.vid),this.isStartingStreamingTask=!0;const o=this.lastTaskId++;try{const n=new tg(((t,n)=>{UT(this.retryTimeout).then((()=>{if(i)return n(i);const t=this.statusError.get(e);return t?(this.statusError.delete(e),n(t)):void 0}))})),a=await tg.race([this.connection.request(\"request\",{clientRequest:r},!0,{url:e,command:\"PublishStream\",workerType:t===yv.TRANSCODE?1:2,requestByUser:!i,tid:o.toString()}),n]);this.isStartingStreamingTask=!1,KC.debug(\"[\".concat(this.spec.clientId,\"] live streaming started, code: \").concat(a.code)),this.streamingTasks.set(e,{clientRequest:r,mode:t,url:e,taskId:o}),s()}catch(n){if(s(),this.isStartingStreamingTask=!1,!n.data||!n.data.retry||i)throw n;return n.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(e,t,n)):await this.startLiveStreamingTask(e,t,n)}}stopLiveStreamingTask(e){return new tg(((t,i)=>{const n=this.streamingTasks.get(e);if(!n||!this.connection)return new xv(xg.UNEXPECTED_ERROR,\"can not find streaming task to stop\").throw();const r=n.mode;n.abortTask=()=>{KC.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success(worker exception)\")),this.streamingTasks.delete(e),t()},this.connection.request(\"request\",{clientRequest:{command:r===yv.INJECT?\"UninjectStream\":\"UnpublishStream\",url:n.url}},!1,{url:e,command:\"UnPublishStream\",workerType:r===yv.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then((i=>{KC.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success, code: \").concat(i.code)),this.streamingTasks.delete(e),0===this.streamingTasks.size&&r!==yv.INJECT&&(this.connection&&this.connection.close(),this.connection=void 0),t(),r===yv.INJECT&&this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_STOP_SUCCESS,this.spec.uid,e)})).catch(i)}))}async controlInjectStream(e,t,i,n){const r=this.streamingTasks.get(e);if(!r||!this.connection||r.mode!==yv.INJECT)throw new xv(xg.INVALID_OPERATION,\"can not find inject stream task to control\");return(await this.connection.request(\"request\",{clientRequest:{command:\"ControlStream\",url:e,control:t,audioVolume:i,position:n}})).serverResponse}resetAllTask(){var e;const t=Array.from(kv(e=this.streamingTasks).call(e));this.terminate();for(const e of t)this.startLiveStreamingTask(e.url,e.mode).catch((t=>{this.onLiveStreamError&&this.onLiveStreamError(e.url,t)}))}terminate(){this.cancelToken&&this.cancelToken.cancel(),this.streamingTasks=new Map,this.isStartingStreamingTask=!1,this.statusError=new Map,this.cancelToken=EC.CancelToken.source(),this.uapResponse=void 0,this.connection&&this.connection.close(),this.connection=void 0}async connect(e){if(this.connection)throw new xv(xg.UNEXPECTED_ERROR,\"live streaming connection has already connected\");const t=await fT(this,Yv.REQUEST_WORKER_MANAGER_LIST,e);return this.uapResponse=t,this.connection=new CP(t.workerToken,this.spec,this.wsRetryConfig,e),this.connection.on(Kv.WARNING,((e,t)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e))),this.connection.on(Kv.PUBLISH_STREAM_STATUS,(e=>this.handlePublishStreamServer(e))),this.connection.on(Kv.INJECT_STREAM_STATUS,(e=>this.handleInjectStreamServerStatus(e))),this.connection.on(Kv.REQUEST_NEW_ADDRESS,((t,i)=>{if(!this.connection)return i(new xv(xg.UNEXPECTED_ERROR,\"can not get new live streaming address list\"));fT(this,Yv.REQUEST_WORKER_MANAGER_LIST,e).then((e=>{this.uapResponse=e,t(e.addressList)})).catch(i)})),await this.connection.init(t.addressList),this.connection}handlePublishStreamServer(e){const t=e.serverStatus&&e.serverStatus.url||\"empty_url\",i=this.streamingTasks.get(t),n=e.reason;switch(e.code){case qv.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case qv.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{const n=new xv(xg.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code});if(i)return KC.error(n.toString()),this.onLiveStreamError&&this.onLiveStreamError(t,n);if(!this.isStartingStreamingTask)return;this.statusError.set(t,n)}case qv.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const e=new xv(xg.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE,n);return this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)}case qv.LIVE_STREAM_RESPONSE_WORKER_LOST:case qv.LIVE_STREAM_RESPONSE_WORKER_QUIT:{var r;if(!this.connection)return;this.connection.tryNextAddress();const t=Array.from(kv(r=this.streamingTasks).call(r));for(const i of t)i.abortTask?i.abortTask():(KC.warning(\"[\".concat(this.spec.clientId,\"] publish stream status code\"),e.code,\"try to republish\",i.url),this.startLiveStreamingTask(i.url,i.mode,new xv(xg.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code})).then((()=>{KC.debug(\"[\".concat(this.spec.clientId,\"] republish live stream success\"),i.url)})).catch((e=>{KC.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(i.url,e)})));return}}}handleInjectStreamServerStatus(e){const t=Number(e.uid),i=e.serverStatus&&e.serverStatus.url;switch(e.code){case 200:return void(this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_START_SUCCESS,t,i));case 451:return this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_START_ALREADY_EXISTS,t,i),void this.streamingTasks.delete(i);case 453:return this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_START_UNAUTHORIZED,t,i),void this.streamingTasks.delete(i);case 470:return this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_BROKEN,t,i),void this.streamingTasks.delete(i);case 499:return this.onInjectStatusChange&&this.onInjectStatusChange(Av.INJECT_STREAM_STATUS_START_TIMEOUT,t,i),void this.streamingTasks.delete(i);default:return void KC.debug(\"inject stream server status\",e)}}hasUrl(e){return this.streamingTasks.has(e)}}class AP{constructor(){nu(this,\"destChannelMediaInfos\",new Map),nu(this,\"srcChannelMediaInfo\",void 0)}setSrcChannelInfo(e){sI(e),this.srcChannelMediaInfo=e}addDestChannelInfo(e){sI(e),this.destChannelMediaInfos.set(e.channelName,e)}removeDestChannelInfo(e){Vv(e),this.destChannelMediaInfos.delete(e)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}function bP(e){if(!(e instanceof AP)){return new xv(xg.INVALID_PARAMS,\"Config should be instance of [ChannelMediaRelayConfiguration]\").throw()}const t=e.getSrcChannelMediaInfo(),i=e.getDestChannelMediaInfo();if(!t){return new xv(xg.INVALID_PARAMS,\"srcChannelMediaInfo should not be empty\").throw()}if(0===i.size){return new xv(xg.INVALID_PARAMS,\"destChannelMediaInfo should not be empty\").throw()}}class wP extends iT{constructor(e,t,i){super(),nu(this,\"ws\",void 0),nu(this,\"requestId\",1),nu(this,\"heartBeatTimer\",void 0),nu(this,\"joinInfo\",void 0),nu(this,\"clientId\",void 0),nu(this,\"onOpen\",(()=>{this.emit(\"open\"),this.startHeartBeatCheck()})),nu(this,\"onClose\",(e=>{this.emit(\"close\"),this.dispose()})),nu(this,\"onMessage\",(e=>{const t=JSON.parse(e.data);if(!t||\"serverResponse\"!==t.command||!t.requestId)return t&&\"serverStatus\"===t.command&&t.serverStatus&&t.serverStatus.command?(this.emit(\"status\",t.serverStatus),void this.emit(t.serverStatus.command,t.serverStatus)):void 0;this.emit(\"req_\".concat(t.requestId),t)})),this.joinInfo=e,this.clientId=t,this.ws=new XI(\"cross-channel-\".concat(this.clientId),i),this.ws.on(Iv.RECONNECTING,(()=>{this.ws.reconnectMode=\"retry\",this.emit(\"reconnecting\")})),this.ws.on(Iv.CONNECTED,this.onOpen),this.ws.on(Iv.ON_MESSAGE,this.onMessage),this.ws.on(Iv.CLOSED,this.onClose)}isConnect(){return\"connected\"===this.ws.state}sendMessage(e){const t=this.requestId++;return e.requestId=t,e.seq=t,this.ws.sendMessage(e),t}waitStatus(e){return new tg(((t,i)=>{const n=window.setTimeout((()=>{i(new xv(xg.TIMEOUT,\"wait status timeout, status: \".concat(e)))}),5e3);this.once(e,(r=>{window.clearTimeout(n),r.state&&0!==r.state?i(new xv(xg.CROSS_CHANNEL_WAIT_STATUS_ERROR,\"wait status error, status: \".concat(e))):t(void 0)})),this.once(\"dispose\",(()=>{window.clearTimeout(n),i(new xv(xg.WS_ABORT))}))}))}async request(e){if(\"closed\"===this.ws.state)throw new xv(xg.WS_DISCONNECT);const t=()=>new tg(((e,t)=>{this.ws.once(Iv.CLOSED,(()=>t(new xv(xg.WS_ABORT)))),this.ws.once(Iv.CONNECTED,e)}));\"connected\"!==this.ws.state&&await t();const i=this.sendMessage(e),n=new tg(((e,t)=>{const n=()=>{t(new xv(xg.WS_ABORT))};this.ws.once(Iv.RECONNECTING,n),this.ws.once(Iv.CLOSED,n),this.once(\"req_\".concat(i),e),UT(3e3).then((()=>{this.removeAllListeners(\"req_\".concat(i)),this.ws.off(Iv.RECONNECTING,n),this.ws.off(Iv.CLOSED,n),t(new xv(xg.TIMEOUT,\"cross channel ws request timeout\"))}))})),r=await n;if(!r||200!==r.code)throw new xv(xg.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,\"response: \".concat(JSON.stringify(r)));return r}async connect(e){this.ws.removeAllListeners(Iv.REQUEST_NEW_URLS),this.ws.on(Iv.REQUEST_NEW_URLS,(t=>{t(e)})),await this.ws.init(e)}dispose(){this.clearHeartBeatCheck(),this.emit(\"dispose\"),this.removeAllListeners(),this.ws.close()}sendPing(e){const t=this.requestId++;return e.requestId=t,this.ws.sendMessage(e),t}startHeartBeatCheck(){this.heartBeatTimer&&window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=window.setInterval((()=>{this.sendPing({command:\"ping\",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})}),3e3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=void 0}}class OP extends iT{set state(e){e!==this._state&&(e!==Qv.RELAY_STATE_FAILURE&&(this.errorCode=Zv.RELAY_OK),this.emit(\"state\",e,this.errorCode),this._state=e)}get state(){return this._state}constructor(e,t,i,n,r){super(),nu(this,\"joinInfo\",void 0),nu(this,\"sid\",void 0),nu(this,\"clientId\",void 0),nu(this,\"cancelToken\",EC.CancelToken.source()),nu(this,\"workerToken\",void 0),nu(this,\"requestId\",0),nu(this,\"signal\",void 0),nu(this,\"prevChannelMediaConfig\",void 0),nu(this,\"httpRetryConfig\",void 0),nu(this,\"_resolution\",void 0),nu(this,\"_state\",Qv.RELAY_STATE_IDLE),nu(this,\"errorCode\",Zv.RELAY_OK),nu(this,\"onStatus\",(e=>{KC.debug(\"[\".concat(this.clientId,\"] ChannelMediaStatus: \").concat(JSON.stringify(e))),e&&e.command&&(\"onAudioPacketReceived\"===e.command&&this.emit(\"event\",Xv.PACKET_RECEIVED_AUDIO_FROM_SRC),\"onVideoPacketReceived\"===e.command&&this.emit(\"event\",Xv.PACKET_RECEIVED_VIDEO_FROM_SRC),\"onSrcTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Zv.SRC_TOKEN_EXPIRED,this.state=Qv.RELAY_STATE_FAILURE),\"onDestTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Zv.DEST_TOKEN_EXPIRED,this.state=Qv.RELAY_STATE_FAILURE))})),nu(this,\"onReconnect\",(async()=>{KC.debug(\"[\".concat(this.clientId,\"] ChannelMediaSocket disconnect, reconnecting\")),this.emit(\"event\",Xv.NETWORK_DISCONNECTED),this.state=Qv.RELAY_STATE_IDLE,this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch((e=>{this.state!==Qv.RELAY_STATE_IDLE&&(KC.error(\"auto restart channel media relay failed\",e.toString()),this.errorCode=Zv.SERVER_CONNECTION_LOST,this.state=Qv.RELAY_STATE_FAILURE)}))})),this.joinInfo=e,this.clientId=t,this.sid=VT(),this.signal=new wP(this.joinInfo,this.clientId,i),this.httpRetryConfig=n,this._resolution=r}async startChannelMediaRelay(e){if(this.state!==Qv.RELAY_STATE_IDLE)throw new xv(xg.INVALID_OPERATION);this.state=Qv.RELAY_STATE_CONNECTING,await this.connect(),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: connect success\"));try{await this.sendStartRelayMessage(e)}catch(e){if(e.data&&e.data.serverResponse&&\"SetSourceChannel\"===e.data.serverResponse.command)throw new xv(xg.CROSS_CHANNEL_FAILED_JOIN_SRC);if(e.data&&e.data.serverResponse&&\"SetDestChannelStatus\"===e.serverResponse.command)throw new xv(xg.CROSS_CHANNEL_FAILED_JOIN_DEST);if(e.data&&e.data.serverResponse&&\"StartPacketTransfer\"===e.serverResponse.command)throw new xv(xg.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw e}this.prevChannelMediaConfig=e}async updateChannelMediaRelay(e){if(this.state!==Qv.RELAY_STATE_RUNNING)throw new xv(xg.INVALID_OPERATION);await this.sendUpdateMessage(e),this.prevChannelMediaConfig=e}async setVideoProfile(e){if(this._resolution=e,this.state!==Qv.RELAY_STATE_RUNNING)throw new xv(xg.INVALID_OPERATION);const t=this.genMessage(zv.SetVideoProfile);await this.signal.request(t),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: setVideoProfile success\"))}async stopChannelMediaRelay(){await this.sendStopRelayMessage(),KC.debug(\"[\".concat(this.clientId,\"] stopChannelMediaRelay: send stop message success\")),this.state=Qv.RELAY_STATE_IDLE,this.dispose()}dispose(){KC.debug(\"[\".concat(this.clientId,\"] disposeChannelMediaRelay\")),this.cancelToken.cancel(),this.cancelToken=EC.CancelToken.source(),this.state=Qv.RELAY_STATE_IDLE,this.emit(\"dispose\"),this.signal.dispose(),this.prevChannelMediaConfig=void 0}async connect(){const e=await EP(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=e.workerToken,await this.signal.connect(e.addressList),this.emit(\"event\",Xv.NETWORK_CONNECTED),this.signal.on(\"status\",this.onStatus),this.signal.on(\"reconnecting\",this.onReconnect)}async sendStartRelayMessage(e){const t=this.genMessage(zv.StopPacketTransfer);await this.signal.request(t),await this.signal.waitStatus(\"Normal Quit\"),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StopPacketTransfer success\"));const i=this.genMessage(zv.SetSdkProfile,e);await this.signal.request(i),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSdkProfile success\"));const n=this.genMessage(zv.SetSourceChannel,e);await this.signal.request(n),await this.signal.waitStatus(\"SetSourceChannelStatus\"),this.emit(\"event\",Xv.PACKET_JOINED_SRC_CHANNEL),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceChannel success\"));const r=this.genMessage(zv.SetSourceUserId,e);await this.signal.request(r),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceUserId success\"));const s=this.genMessage(zv.SetDestChannel,e);await this.signal.request(s),await this.signal.waitStatus(\"SetDestChannelStatus\"),this.emit(\"event\",Xv.PACKET_JOINED_DEST_CHANNEL),KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetDestChannel success\"));const o=this.genMessage(zv.StartPacketTransfer,e);await this.signal.request(o),this.emit(\"event\",Xv.PACKET_SENT_TO_DEST_CHANNEL),this.state=Qv.RELAY_STATE_RUNNING,KC.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StartPacketTransfer success\")),this.setVideoProfile(this._resolution)}async sendUpdateMessage(e){const t=this.genMessage(zv.UpdateDestChannel,e);await this.signal.request(t),this.emit(\"event\",Xv.PACKET_UPDATE_DEST_CHANNEL),KC.debug(\"[\".concat(this.clientId,\"] sendUpdateMessage: UpdateDestChannel success\"))}async sendStopRelayMessage(){const e=this.genMessage(zv.StopPacketTransfer);await this.signal.request(e),KC.debug(\"[\".concat(this.clientId,\"] sendStopRelayMessage: StopPacketTransfer success\"))}genMessage(e,t){const i=[],n=[],r=[];this.requestId+=1;const s={appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sdkVersion:OC,sid:this.sid,ts:Date.now(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};\"4.19.3\"===s.sdkVersion&&(s.sdkVersion=\"0.0.1\");let o=null,a=null;switch(e){case zv.SetSdkProfile:return s.clientRequest={command:\"SetSdkProfile\",type:\"multi_channel\"},s;case zv.SetSourceChannel:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new xv(xg.UNEXPECTED_ERROR,\"can not find source config\");return s.clientRequest={command:\"SetSourceChannel\",uid:\"0\",channelName:a.channelName,token:a.token||this.joinInfo.appId},s;case zv.SetSourceUserId:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new xv(xg.UNEXPECTED_ERROR,\"can not find source config\");return s.clientRequest={command:\"SetSourceUserId\",uid:a.uid+\"\"},s;case zv.SetDestChannel:if(o=t&&t.getDestChannelMediaInfo(),!o)throw new xv(xg.UNEXPECTED_ERROR,\"can not find dest config\");return o.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),s.clientRequest={command:\"SetDestChannel\",channelName:i,uid:n,token:r},s;case zv.StartPacketTransfer:return s.clientRequest={command:\"StartPacketTransfer\"},s;case zv.Reconnect:return s.clientRequest={command:\"Reconnect\"},s;case zv.StopPacketTransfer:return s.clientRequest={command:\"StopPacketTransfer\"},s;case zv.UpdateDestChannel:if(o=t&&t.getDestChannelMediaInfo(),!o)throw new xv(xg.UNEXPECTED_ERROR,\"can not find dest config\");return o.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),s.clientRequest={command:\"UpdateDestChannel\",channelName:i,uid:n,token:r},s;case zv.SetVideoProfile:s.clientRequest={command:\"SetVideoProfile\",width:this._resolution.width,height:this._resolution.height}}return s}}class NP{get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&!this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio)return this._audioTrack}get videoTrack(){if(this.hasVideo)return this._videoTrack}get dataChannels(){return this._dataChannels}constructor(e,t){nu(this,\"uid\",void 0),nu(this,\"_uintid\",void 0),nu(this,\"_trust_in_room_\",!0),nu(this,\"_trust_audio_enabled_state_\",!0),nu(this,\"_trust_video_enabled_state_\",!0),nu(this,\"_trust_audio_mute_state_\",!0),nu(this,\"_trust_video_mute_state_\",!0),nu(this,\"_audio_muted_\",!1),nu(this,\"_video_muted_\",!1),nu(this,\"_audio_enabled_\",!0),nu(this,\"_video_enabled_\",!0),nu(this,\"_audio_added_\",!1),nu(this,\"_video_added_\",!1),nu(this,\"_trust_video_stream_added_state_\",!0),nu(this,\"_trust_audio_stream_added_state_\",!0),nu(this,\"_audioTrack\",void 0),nu(this,\"_videoTrack\",void 0),nu(this,\"_dataChannels\",[]),nu(this,\"_audioSSRC\",void 0),nu(this,\"_videoSSRC\",void 0),nu(this,\"_audioOrtc\",void 0),nu(this,\"_videoOrtc\",void 0),nu(this,\"_cname\",void 0),nu(this,\"_rtxSsrcId\",void 0),this.uid=e,this._uintid=t}}var DP=eg,PP=rm;kn({target:\"Promise\",stat:!0,forced:!0},{withResolvers:function(){var e=PP.f(this);return{promise:e.promise,resolve:e.resolve,reject:e.reject}}});var LP=rm,kP=FE;kn({target:\"Promise\",stat:!0,forced:!0},{try:function(e){var t=LP.f(this),i=kP(e);return(i.error?t.reject:t.resolve)(i.value),t.promise}});var MP=J(DP),UP=Fo.f(\"asyncIterator\"),xP=J(UP);function VP(e,t){this.v=e,this.k=t}function FP(e){var t,i;function n(t,i){try{var s=e[t](i),o=s.value,a=o instanceof VP;MP.resolve(a?o.v:o).then((function(i){if(a){var c=\"return\"===t?\"return\":\"next\";if(!o.k||i.done)return n(c,i);i=e[c](i).value}r(s.done?\"return\":\"normal\",i)}),(function(e){n(\"throw\",e)}))}catch(e){r(\"throw\",e)}}function r(e,r){switch(e){case\"return\":t.resolve({value:r,done:!0});break;case\"throw\":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?n(t.key,t.arg):i=null}this._invoke=function(e,r){return new MP((function(s,o){var a={key:e,arg:r,resolve:s,reject:o,next:null};i?i=i.next=a:(t=i=a,n(e,r))}))},\"function\"!=typeof e.return&&(this.return=void 0)}function BP(e){return function(){return new FP(e.apply(this,arguments))}}function jP(e){return new VP(e,0)}function GP(e){var t={},i=!1;function n(t,n){return i=!0,{done:!1,value:new VP(n=new MP((function(i){i(e[t](n))})),1)}}return t[void 0!==Uh&&$h||\"@@iterator\"]=function(){return this},t.next=function(e){return i?(i=!1,e):n(\"next\",e)},\"function\"==typeof e.throw&&(t.throw=function(e){if(i)throw i=!1,e;return n(\"throw\",e)}),\"function\"==typeof e.return&&(t.return=function(e){return i?(i=!1,e):n(\"return\",e)}),t}FP.prototype[\"function\"==typeof Uh&&xP||\"@@asyncIterator\"]=function(){return this},FP.prototype.next=function(e){return this._invoke(\"next\",e)},FP.prototype.throw=function(e){return this._invoke(\"throw\",e)},FP.prototype.return=function(e){return this._invoke(\"return\",e)};var WP=J(UP),HP={exports:{}};!function(e,t){e.exports=(()=>{var e={8:(e,t,i)=>{i.r(t),i.d(t,{Parser:()=>C,Printer:()=>b,parse:()=>D,print:()=>P});const n=\"\\n\",r=\"\".concat(\"\\r\").concat(n),s=\" \";let o;function a(e){return e>=\"0\"&&e<=\"9\"}function c(e){return e>=\"!\"&&e<=\"~\"}function d(e){return c(e)||e>=\"\"&&e<=\"ÿ\"}function l(e){return\"!\"===e||e>=\"#\"&&e<=\"'\"||e>=\"*\"&&e<=\"+\"||e>=\"-\"&&e<=\".\"||e>=\"0\"&&e<=\"9\"||e>=\"A\"&&e<=\"Z\"||e>=\"^\"&&e<=\"~\"}function h(e){return e>=\"1\"&&e<=\"9\"}function u(e){return e>=\"A\"&&e<=\"Z\"||e>=\"a\"&&e<=\"z\"}function p(e){return\"d\"===e||\"h\"===e||\"m\"===e||\"s\"===e}function _(e){return e>\"\u0001\"&&e<\"\\t\"||e>\"\\v\"&&e<\"\\f\"||e>\"\u000e\"&&e<\"ÿ\"}function E(e){return u(e)||a(e)||\"+\"===e||\"/\"===e}function m(e){return a(e)||u(e)||\"+\"===e||\"/\"===e||\"-\"===e||\"_\"===e}function f(e){return u(e)||a(e)||\"+\"===e||\"/\"===e}function g(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function T(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?g(Object(i),!0).forEach((function(t){S(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):g(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function S(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function(e){e.VERSION=\"v\",e.ORIGIN=\"o\",e.SESSION_NAME=\"s\",e.INFORMATION=\"i\",e.URI=\"u\",e.EMAIL=\"e\",e.PHONE=\"p\",e.CONNECTION=\"c\",e.BANDWIDTH=\"b\",e.TIME=\"t\",e.REPEAT=\"r\",e.ZONE_ADJUSTMENTS=\"z\",e.KEY=\"k\",e.ATTRIBUTE=\"a\",e.MEDIA=\"m\"}(o||(o={}));class R{consumeText(e,t){let i=t;for(;i<e.length;){const t=e[i];if(\"\\0\"===t||\"\\r\"===t||t===n)break;i+=1}if(i-t==0)throw new Error(\"Invalid text, at \".concat(e));return i}consumeUnicastAddress(e,t,i){return this.consumeTill(e,t,s)}consumeOneOrMore(e,t,i){let n=t;for(;i(e[n]);)n++;if(n-t==0)throw new Error(\"Invalid rule at \".concat(t,\".\"));return n}consumeSpace(e,t){if(e[t]===s)return t+1;throw new Error(\"Invalid space at \".concat(t,\".\"))}consumeIP4Address(e,t){let i=t;for(let t=0;t<4;t++)if(i=this.consumeDecimalUChar(e,i),3!==t){if(\".\"!==e[i])throw new Error(\"Invalid IP4 address.\");i++}return i}consumeDecimalUChar(e,t){let i=t;for(let t=0;t<3&&a(e[i]);t++,i++);if(i-t==0)throw new Error(\"Invalid decimal uchar.\");const n=parseInt(e.slice(t,i));if(n>=0&&n<=255)return i;throw new Error(\"Invalid decimal uchar\")}consumeIP6Address(e,t){let i=this.consumeHexpart(e,t);return\":\"===e[i]?(i+=1,i=this.consumeIP4Address(e,i),i):i}consumeHexpart(e,t){let i=t;if(\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}if(i=this.consumeHexseq(e,i),\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}return i}consumeHexseq(e,t){let i=t;for(;i=this.consumeHex4(e,i),\":\"===e[i]&&\":\"!==e[i+1];)i+=1;return i}consumeHex4(e,t){let i=0;for(;i<4;i++)if(!((n=e[t+i])>=\"0\"&&n<=\"9\"||n>=\"a\"&&n<=\"f\"||n>=\"A\"&&n<=\"F\")){if(0===i)throw new Error(\"Invalid hex 4\");break}var n;return t+i}consumeFQDN(e,t){let i=t;for(;a(e[i])||u(e[i])||\"-\"===e[i]||\".\"===e[i];)i+=1;if(i-t<4)throw new Error(\"Invalid FQDN\");return i}consumeExtnAddr(e,t){return this.consumeOneOrMore(e,t,d)}consumeMulticastAddress(e,t,i){switch(i){case\"IP4\":case\"ip4\":return this.consumeIP4MulticastAddress(e,t);case\"IP6\":case\"ip6\":return this.consumeIP6MulticastAddress(e,t);default:try{return this.consumeFQDN(e,t)}catch(i){return this.consumeExtnAddr(e,t)}}}consumeIP6MulticastAddress(e,t){const i=this.consumeHexpart(e,t);return\"/\"===e[i]?this.consumeInteger(e,i+1):i}consumeIP4MulticastAddress(e,t){let i=t+3;const n=e.slice(t,i),r=parseInt(n);if(r<224||r>239)throw new Error(\"Invalid IP4 multicast address, IPv4 multicast addresses may be in the range 224.0.0.0 to 239.255.255.255.\");for(let t=0;t<3;t++){if(\".\"!==e[i])throw new Error(\"Invalid IP4 multicast address.\");i+=1,i=this.consumeDecimalUChar(e,i)}return\"/\"===e[i]&&(i+=1),i=this.consumeTTL(e,i),\"/\"===e[i]&&(i=this.consumeInteger(e,i)),i}consumeInteger(e,t){if(!h(e[t]))throw new Error(\"Invalid integer.\");for(t+=1;a(e[t]);)t+=1;return t}consumeTTL(e,t){if(\"0\"===e[t])return t+1;if(!h(e[t]))throw new Error(\"Invalid TTL.\");t+=1;for(let i=0;i<2&&a(e[t]);i++)t+=1;return t}consumeToken(e,t){return this.consumeOneOrMore(e,t,l)}consumeTime(e,t){let i=t;if(\"0\"===e[i])return i+1;for(h(e[i])&&(i+=1);a(e[i]);)i++;if(i-t<10)throw new Error(\"Invalid time\");return i}consumeAddress(e,t){return this.consumeTill(e,t,s)}consumeTypedTime(e,t){let i=t;return i=this.consumeOneOrMore(e,i,a),p(e[i])?i+1:i}consumeRepeatInterval(e,t){if(!h(e[t]))throw new Error(\"Invalid repeat interval\");for(t+=1;a(e[t]);)t+=1;return p(e[t])&&(t+=1),t}consumePort(e,t){return this.consumeOneOrMore(e,t,a)}consume(e,t,i){for(let n=0;n<i.length;n++){if(t+n>=e.length)throw new Error(\"consume exceeding value length\");if(e[t+n]!==i[n])throw new Error(\"consume \".concat(i,\" failed at \").concat(n))}return t+i.length}consumeTill(e,t,i){let n=t;for(;n<e.length&&(\"string\"!=typeof i||e[n]!==i)&&(\"function\"!=typeof i||!i(e[n]));)n++;return n}}class C extends R{constructor(){super(),S(this,\"records\",[]),S(this,\"currentLine\",0)}parse(e){const t=this.probeEOL(e);this.records=e.split(t).filter((e=>!!e.trim())).map(this.parseLine),this.currentLine=0;const i=this.parseVersion(),n=this.parseOrigin(),r=this.parseSessionName(),s=this.parseInformation(),o=this.parseUri(),a=this.parseEmail(),c=this.parsePhone(),d=this.parseConnection(),l=this.parseBandWidth(),h=this.parseTimeFields(),u=this.parseKey(),p=this.parseSessionAttribute(),_=this.parseMediaDescription();if(this.currentLine!==this.records.length)throw new Error(\"parsing failed, non exhaustive sdp lines.\");return{version:i,origin:n,sessionName:r,information:s,uri:o,emails:a,phones:c,connection:d,bandwidths:l,timeFields:h,key:u,attributes:p,mediaDescriptions:_}}getCurrentRecord(){const e=this.records[this.currentLine];if(!e)throw new Error(\"Record doesn't exit.\");return e}probeEOL(e){for(let t=0;t<e.length;t++)if(e[t]===n)return\"\\r\"===e[t-1]?r:n;throw new Error(\"Invalid newline character.\")}parseLine(e,t){if(e.length<2)throw new Error(\"Invalid sdp line, sdp line should be of form <type>=<value>.\");const i=e[0];if(\"=\"!==e[1])throw new Error('Invalid sdp line, <type> should be a single character followed by an \"=\" sign.');return{type:i,value:e.slice(2),line:t,cur:0}}parseSessionAttribute(){const e=new I;for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==o.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(t,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===t.value[t.cur]&&(t.cur+=1,i.attValue=this.extractOneOrMore(t,_)),e.parse(i),this.currentLine++}return e.digest()}parseMediaAttributes(e){const t=new y(e);for(;this.currentLine<this.records.length;){const e=this.getCurrentRecord();if(e.type!==o.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(e,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===e.value[e.cur]&&(e.cur+=1,i.attValue=this.extractOneOrMore(e,_)),t.parse(i),this.currentLine++}return t.digest()}parseKey(){const e=this.getCurrentRecord();if(e.type===o.KEY){if(\"prompt\"===e.value||\"clear:\"===e.value||\"base64:\"===e.value||\"uri:\"===e.value)return e.value;throw this.currentLine++,new Error(\"Invalid key.\")}}parseZone(){const e=this.getCurrentRecord();if(e.type===o.ZONE_ADJUSTMENTS){const t=[];for(;;)try{const i=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);let n=!1;\"-\"===e.value[e.cur]&&(n=!0,e.cur+=1);const r=this.extract(e,this.consumeTypedTime);t.push({time:i,typedTime:r,back:n})}catch(e){break}if(0===t.length)throw new Error(\"Invalid zone adjustments\");return this.currentLine++,t}return[]}parseRepeat(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==o.REPEAT)break;{const i=this.extract(t,this.consumeRepeatInterval),n=this.parseTypedTime(t);e.push({repeatInterval:i,typedTimes:n}),this.currentLine++}}return e}parseTypedTime(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeTypedTime))}catch(e){break}if(0===t.length)throw new Error(\"Invalid typed time.\");return t}parseTime(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);const i=this.extract(e,this.consumeTime);return this.currentLine++,{startTime:t,stopTime:i}}parseBandWidth(){const e=[];for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==o.BANDWIDTH)break;{const i=this.extractOneOrMore(t,l);if(\":\"!==t.value[t.cur])throw new Error(\"Invalid bandwidth field.\");t.cur++;const n=this.extractOneOrMore(t,a);e.push({bwtype:i,bandwidth:n}),this.currentLine++}}return e}parseVersion(){const e=this.getCurrentRecord();if(e.type!==o.VERSION)throw new Error(\"first sdp record must be version\");const t=e.value.slice(0,this.consumeOneOrMore(e.value,0,a));if(t.length!==e.value.length)throw new Error('invalid proto version, \"v='.concat(e.value,'\"'));return this.currentLine++,t}parseOrigin(){const e=this.getCurrentRecord();if(e.type!==o.ORIGIN)throw new Error(\"second line of sdp must be origin\");const t=this.extractOneOrMore(e,d);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const n=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const s=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const c=this.extract(e,this.consumeUnicastAddress);return this.currentLine++,{username:t,sessId:i,sessVersion:n,nettype:r,addrtype:s,unicastAddress:c}}parseSessionName(){const e=this.getCurrentRecord();if(e.type===o.SESSION_NAME){const t=this.extract(e,this.consumeText);return this.currentLine++,t}}parseInformation(){const e=this.getCurrentRecord();if(e.type!==o.INFORMATION)return;const t=this.extract(e,this.consumeText);return this.currentLine++,t}parseUri(){const e=this.getCurrentRecord();if(e.type===o.URI)return this.currentLine++,e.value}parseEmail(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==o.EMAIL)break;e.push(t.value),this.currentLine++}return e}parsePhone(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==o.PHONE)break;e.push(t.value),this.currentLine++}return e}parseConnection(){const e=this.getCurrentRecord();if(e.type===o.CONNECTION){const t=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const n=this.extract(e,this.consumeAddress);return this.currentLine++,{nettype:t,addrtype:i,address:n}}}parseMedia(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeToken);this.consumeSpaceForRecord(e);let i=this.extract(e,this.consumePort);\"/\"===e.value[e.cur]&&(e.cur+=1,i+=this.extract(e,this.consumeInteger)),this.consumeSpaceForRecord(e);const n=[];for(n.push(this.extract(e,this.consumeToken));\"/\"===e.value[e.cur];)e.cur+=1,n.push(this.extract(e,this.consumeToken));if(0===n.length)throw new Error(\"Invalid proto\");const r=this.parseFmt(e);return this.currentLine++,{mediaType:t,port:i,protos:n,fmts:r}}parseTimeFields(){const e=[];for(;this.getCurrentRecord().type===o.TIME;){const t=this.parseTime(),i=this.parseRepeat(),n=this.parseZone();e.push({time:t,repeats:i,zones:n})}return e}parseMediaDescription(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===o.MEDIA;){const t=this.parseMedia(),i=this.parseInformation(),n=this.parseConnections(),r=this.parseBandWidth(),s=this.parseKey(),o=this.parseMediaAttributes(t);e.push({media:t,information:i,connections:n,bandwidths:r,key:s,attributes:o})}return e}parseConnections(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===o.CONNECTION;)e.push(this.parseConnection());return e}parseFmt(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeToken))}catch(e){break}if(0===t.length)throw new Error(\"Invalid fmts\");return t}extract(e,t,...i){const n=t.call(this,e.value,e.cur,...i),r=e.value.slice(e.cur,n);return e.cur=n,r}extractOneOrMore(e,t){const i=this.consumeOneOrMore(e.value,e.cur,t),n=e.value.slice(e.cur,i);return e.cur=i,n}consumeSpaceForRecord(e){if(e.value[e.cur]!==s)throw new Error(\"Invalid space at \".concat(e.cur,\".\"));e.cur+=1}}class v extends R{constructor(...e){super(...e),S(this,\"attributes\",void 0),S(this,\"digested\",!1)}extractOneOrMore(e,t,i){const n=this.consumeOneOrMore(e.attValue,e._cur,t),r=e.attValue.slice(e._cur,n),[s,o]=i||[];if(\"number\"==typeof s&&r.length<s)throw new Error(\"error in length, should be more or equal than \".concat(s,\" characters.\"));if(\"number\"==typeof o&&r.length>o)throw new Error(\"error in length, should be less or equal than \".concat(o,\" characters.\"));return e._cur=n,r}consumeAttributeSpace(e){if(e.attValue[e._cur]!==s)throw new Error(\"Invalid space at \".concat(e._cur,\".\"));e._cur+=1}extract(e,t,...i){if(!e.attValue)throw new Error(\"Nothing to extract from attValue.\");const n=t.call(this,e.attValue,e._cur,...i),r=e.attValue.slice(e._cur,n);return e._cur=n,r}atEnd(e){if(!e.attValue)throw new Error;return e._cur>=e.attValue.length}peekChar(e){if(!e.attValue)throw new Error;return e.attValue[e._cur]}peek(e,t){if(!e.attValue)throw new Error;for(let i=0;i<t.length;i++)if(t[i]!==e.attValue[e._cur+i])return!1;return!0}parseIceUfrag(e){if(this.attributes.iceUfrag)throw new Error(\"Invalid ice-ufrag, should be only a single line if 'a=ice-ufrag'\");this.attributes.iceUfrag=this.extractOneOrMore(e,E,[4,256])}parseIcePwd(e){if(this.attributes.icePwd)throw new Error(\"Invalid ice-pwd, should be only a single line if 'a=ice-pwd'\");this.attributes.icePwd=this.extractOneOrMore(e,E,[22,256])}parseIceOptions(e){if(this.attributes.iceOptions)throw new Error(\"Invalid ice-options, should be only one 'ice-options' line\");const t=[];for(;!this.atEnd(e);){t.push(this.extractOneOrMore(e,E));try{this.consumeAttributeSpace(e)}catch(t){if(this.atEnd(e))break;throw t}}this.attributes.iceOptions=t}parseFingerprint(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill);this.attributes.fingerprints.push({hashFunction:t,fingerprint:i})}parseExtmap(e){const t=this.extractOneOrMore(e,a);let i;\"/\"===this.peekChar(e)&&(this.extract(e,this.consume,\"/\"),i=this.extract(e,this.consumeToken)),this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeTill,s),r=T(T({entry:parseInt(t,10)},i&&{direction:i}),{},{extensionName:n});this.peekChar(e)===s&&(this.consumeAttributeSpace(e),r.extensionAttributes=this.extract(e,this.consumeTill)),this.attributes.extmaps.push(r)}parseSetup(e){if(this.attributes.setup)throw new Error(\"must only be one single 'a=setup' line.\");const t=this.extract(e,this.consumeTill);if(\"active\"!==t&&\"passive\"!==t&&\"actpass\"!==t&&\"holdconn\"!==t)throw new Error(\"role must be one of 'active', 'passive', 'actpass', 'holdconn'.\");this.attributes.setup=t}}class I extends v{constructor(...e){super(...e),S(this,\"attributes\",{unrecognized:[],groups:[],extmaps:[],fingerprints:[],identities:[]})}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"group\":this.parseGroup(e);break;case\"ice-lite\":this.parseIceLite();break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"fingerprint\":this.parseFingerprint(e);break;case\"setup\":this.parseSetup(e);break;case\"tls-id\":this.parseTlsId(e);break;case\"identity\":this.parseIdentity(e);break;case\"extmap\":this.parseExtmap(e);break;case\"msid-semantic\":this.parseMsidSemantic(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing session attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}digest(){return this.digested=!0,this.attributes}parseGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===s;)this.consumeAttributeSpace(e),i.push(this.extract(e,this.consumeToken));this.attributes.groups.push({semantic:t,identificationTag:i})}parseIceLite(){if(this.attributes.iceLite)throw new Error(\"Invalid ice-lite, should be only a single line of 'a=ice-lite'\");this.attributes.iceLite=!0}parseTlsId(e){if(this.attributes.tlsId)throw new Error(\"must be only one tld-id line\");this.attributes.tlsId=this.extractOneOrMore(e,m)}parseIdentity(e){const t=this.extractOneOrMore(e,f),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===s;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.extract(e,this.consume,\"=\");const n=this.extractOneOrMore(e,(e=>e!==s&&_(e)));i.push({name:t,value:n})}this.attributes.identities.push({assertionValue:t,extensions:i})}parseMsidSemantic(e){this.peekChar(e)===s&&this.consumeAttributeSpace(e);const t={semantic:this.extract(e,this.consumeToken),identifierList:[]};for(;;){try{this.consumeAttributeSpace(e)}catch(e){break}if(\"*\"===this.peekChar(e)){this.extract(e,this.consume,\"*\"),t.applyForAll=!0;break}{const i=this.extract(e,this.consumeTill,s);t.identifierList.push(i)}}this.attributes.msidSemantic=t}}class y extends v{constructor(e){super(),S(this,\"attributes\",void 0),-1!==e.protos.indexOf(\"RTP\")||e.protos.indexOf(\"rtp\"),this.attributes={unrecognized:[],candidates:[],extmaps:[],fingerprints:[],imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[]}}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"extmap\":this.parseExtmap(e);break;case\"setup\":this.parseSetup(e);break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"candidate\":this.parseCandidate(e);break;case\"remote-candidate\":this.parseRemoteCandidate(e);break;case\"end-of-candidates\":this.parseEndOfCandidates();break;case\"fingerprint\":this.parseFingerprint(e);break;case\"rtpmap\":this.parseRtpmap(e);break;case\"ptime\":this.parsePtime(e);break;case\"maxptime\":this.parseMaxPtime(e);break;case\"sendrecv\":case\"recvonly\":case\"sendonly\":case\"inactive\":this.parseDirection(e);break;case\"ssrc\":this.parseSSRC(e);break;case\"fmtp\":this.parseFmtp(e);break;case\"rtcp-fb\":this.parseRtcpFb(e);break;case\"rtcp-mux\":this.parseRTCPMux();break;case\"rtcp-mux-only\":this.parseRTCPMuxOnly();break;case\"rtcp-rsize\":this.parseRTCPRsize();break;case\"rtcp\":this.parseRTCP(e);break;case\"mid\":this.parseMid(e);break;case\"msid\":this.parseMsid(e);break;case\"imageattr\":this.parseImageAttr(e);break;case\"rid\":this.parseRid(e);break;case\"simulcast\":this.parseSimulcast(e);break;case\"sctp-port\":this.parseSctpPort(e);break;case\"max-message-size\":this.parseMaxMessageSize(e);break;case\"ssrc-group\":this.parseSSRCGroup(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing media attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}parseCandidate(e){const t=this.extractOneOrMore(e,E,[1,32]);this.consumeAttributeSpace(e);const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const r=this.extractOneOrMore(e,a,[1,10]);this.consumeAttributeSpace(e);const o=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const d=this.extract(e,this.consumePort);this.consumeAttributeSpace(e),this.extract(e,this.consume,\"typ\"),this.consumeAttributeSpace(e);const l={foundation:t,componentId:i,transport:n,priority:r,connectionAddress:o,port:d,type:this.extract(e,this.consumeToken),extension:{}};for(this.peek(e,\" raddr\")&&(this.extract(e,this.consume,\" raddr\"),this.consumeAttributeSpace(e),l.relAddr=this.extract(e,this.consumeAddress)),this.peek(e,\" rport\")&&(this.extract(e,this.consume,\" rport\"),this.consumeAttributeSpace(e),l.relPort=this.extract(e,this.consumePort));this.peekChar(e)===s;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e),l.extension[t]=this.extractOneOrMore(e,c)}this.attributes.candidates.push(l)}parseRemoteCandidate(e){const t=[];for(;;){const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumePort);t.push({componentId:i,connectionAddress:n,port:r});try{this.consumeAttributeSpace(e)}catch(e){break}}this.attributes.remoteCandidatesList.push(t)}parseEndOfCandidates(){if(this.attributes.endOfCandidates)throw new Error(\"must be only one line of end-of-candidates\");this.attributes.endOfCandidates=!0}parseRtpmap(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\"/\");this.extract(e,this.consume,\"/\");const n={encodingName:i,clockRate:this.extractOneOrMore(e,a)};this.atEnd(e)||\"/\"!==this.peekChar(e)||(this.extract(e,this.consume,\"/\"),n.encodingParameters=parseInt(this.extract(e,this.consumeTill),10));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.rtpMap=n:this.attributes.payloads.push({payloadType:parseInt(t,10),rtpMap:n,rtcpFeedbacks:[]})}parsePtime(e){if(this.attributes.ptime)throw new Error(\"must be only one line of ptime\");this.attributes.ptime=this.extract(e,this.consumeTill)}parseMaxPtime(e){if(this.attributes.maxPtime)throw new Error(\"must be only one line of ptime\");this.attributes.maxPtime=this.extract(e,this.consumeTill)}parseDirection(e){if(this.attributes.direction)throw new Error(\"must be only one line of direction info\");this.attributes.direction=e.attField}parseSSRC(e){const t=this.extractOneOrMore(e,a);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\":\");let n;\":\"===this.peekChar(e)&&(this.extract(e,this.consume,\":\"),n=this.extract(e,this.consumeTill));const r=this.attributes.ssrcs.find((e=>e.ssrcId===parseInt(t,10)));r?r.attributes[i]=n:this.attributes.ssrcs.push({ssrcId:parseInt(t,10),attributes:{[i]:n}})}parseFmtp(e){const t=this.extract(e,this.consumeTill,s);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill),n={};i.split(\";\").forEach((e=>{let[t,i]=e.split(\"=\");t=t.trim();const r=\"string\"==typeof i?i.trim():null;\"string\"==typeof t&&t.length>0&&(n[t]=r)}));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.fmtp={parameters:n}:this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[],fmtp:{parameters:n}})}parseFmtParameters(e){const t={},i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");for(t[i]=n;\";\"===e.attValue[e._cur];){const i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");t[i]=n}return t}parseRtcpFb(e){let t=\"\";t=\"*\"===this.peekChar(e)?this.extract(e,this.consume,\"*\"):this.extract(e,this.consumeTill,s),this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,s);let n;if(\"trr-int\"===i)n={type:i,interval:this.extract(e,this.consumeTill)};else{const t={type:i};this.peekChar(e)===s&&(this.consumeAttributeSpace(e),t.parameter=this.extract(e,this.consumeToken),this.peekChar(e)===s&&(t.additional=this.extract(e,this.consumeTill))),n=t}if(\"*\"===t)this.attributes.rtcpFeedbackWildcards.push(n);else{const e=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));e?e.rtcpFeedbacks.push(n):this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[n]})}}parseRTCPMux(){if(this.attributes.rtcpMux)throw new Error(\"must be single line of rtcp-mux\");this.attributes.rtcpMux=!0}parseRTCPMuxOnly(){if(this.attributes.rtcpMuxOnly)throw new Error(\"must be single line of rtcp-only\");this.attributes.rtcpMuxOnly=!0}parseRTCPRsize(){if(this.attributes.rtcpRsize)throw new Error(\"must be single line of rtcp-rsize\");this.attributes.rtcpRsize=!0}parseRTCP(e){if(this.attributes.rtcp)throw new Error(\"must be single line of rtcp\");const t={port:this.extract(e,this.consumePort)};this.peekChar(e)===s&&(this.consumeAttributeSpace(e),t.netType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.addressType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.address=this.extract(e,this.consumeAddress)),this.attributes.rtcp=t}parseMsid(e){const t={id:this.extractOneOrMore(e,l,[1,64])};this.peekChar(e)===s&&(this.consumeAttributeSpace(e),t.appdata=this.extractOneOrMore(e,l,[1,64])),this.attributes.msids.push(t)}parseImageAttr(e){this.attributes.imageattr.push(e.attValue)}parseRid(e){const t=this.extractOneOrMore(e,(e=>u(e)||a(e)||\"_\"===e||\"-\"===e));this.consumeAttributeSpace(e);const i={id:t,direction:this.extract(e,this.consumeToken),params:[]};if(this.peekChar(e)===s){if(this.consumeAttributeSpace(e),this.peek(e,\"pt=\")){this.extract(e,this.consume,\"pt=\");const t=[];for(;;){const i=this.extract(e,this.consumeToken);t.push(i);try{this.extract(e,this.consume,\",\")}catch(e){break}}i.payloads=t,this.peekChar(e)===s&&this.extract(e,this.consume,s)}for(;;){const t=this.extract(e,this.consumeToken);switch(t){case\"depend\":{const n={type:t,rids:this.extract(e,this.consume,\"=\").split(\",\")};i.params.push(n);break}default:{const n={type:t};\"=\"===this.peekChar(e)&&(this.extract(e,this.consume,\"=\"),n.val=this.extract(e,this.consumeTill,\";\")),i.params.push(n)}}try{this.extract(e,this.consume,\";\")}catch(e){break}}}this.attributes.rids.push(i)}parseSimulcast(e){if(this.attributes.simulcast)throw new Error(\"must be single line of simulcast\");this.attributes.simulcast=e.attValue,this.extract(e,this.consumeTill)}parseSctpPort(e){this.attributes.sctpPort=this.extractOneOrMore(e,a,[1,5])}parseMaxMessageSize(e){this.attributes.maxMessageSize=this.extractOneOrMore(e,a,[1,void 0])}digest(){return this.digested=!0,this.attributes}parseMid(e){this.attributes.mid=this.extract(e,this.consumeToken)}parseSSRCGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;;)try{this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeInteger);i.push(parseInt(t,10))}catch(e){break}this.attributes.ssrcGroups.push({semantic:t,ssrcIds:i})}}function A(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class b{constructor(){A(this,\"eol\",r)}print(e,t){let i=\"\";return t&&(this.eol=t),i+=this.printVersion(e.version),i+=this.printOrigin(e.origin),i+=this.printSessionName(e.sessionName),i+=this.printInformation(e.information),i+=this.printUri(e.uri),i+=this.printEmail(e.emails),i+=this.printPhone(e.phones),i+=this.printConnection(e.connection),i+=this.printBandwidth(e.bandwidths),i+=this.printTimeFields(e.timeFields),i+=this.printKey(e.key),i+=this.printSessionAttributes(e.attributes),i+=this.printMediaDescription(e.mediaDescriptions),i}printVersion(e){return\"v=\".concat(e).concat(this.eol)}printOrigin(e){return\"o=\".concat(e.username,\" \").concat(e.sessId,\" \").concat(e.sessVersion,\" \").concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.unicastAddress).concat(this.eol)}printSessionName(e){return e?\"s=\".concat(e).concat(this.eol):\"\"}printInformation(e){return e?\"i=\".concat(e).concat(this.eol):\"\"}printUri(e){return e?\"u=\".concat(e).concat(this.eol):\"\"}printEmail(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printPhone(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printConnection(e){return e?\"c=\".concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.address).concat(this.eol):\"\"}printBandwidth(e){let t=\"\";for(const i of e)t+=\"b=\".concat(i.bwtype,\":\").concat(i.bandwidth).concat(this.eol);return t}printTimeFields(e){let t=\"\";for(const i of e){t+=\"t=\".concat(i.time.startTime,\" \").concat(i.time.startTime).concat(this.eol);for(const e of i.repeats)t+=\"r=\".concat(e.repeatInterval,\" \").concat(e.typedTimes.join(\" \")).concat(this.eol);i.zoneAdjustments&&(t+=\"z=\",t+=\"z=\".concat(i.zoneAdjustments.map((e=>\"\".concat(e.time,\" \").concat(e.back?\"-\":\"\",\" \").concat(e.typedTime))).join(\" \")).concat(this.eol),t+=this.eol)}return t}printKey(e){return e?\"k=\".concat(e).concat(this.eol):\"\"}printAttributes(e){let t=\"\";for(const i of e)t+=\"a=\".concat(i.attField).concat(i.attValue?\":\".concat(i.attValue):\"\").concat(this.eol);return t}printMediaDescription(e){let t=\"\";for(const i of e)t+=this.printMedia(i.media),t+=this.printInformation(i.information),t+=this.printConnections(i.connections),t+=this.printBandwidth(i.bandwidths),t+=this.printKey(i.key),t+=this.printMediaAttributes(i);return t}printConnections(e){let t=\"\";for(const i of e)t+=this.printConnection(i);return t}printMedia(e){return\"m=\".concat(e.mediaType,\" \").concat(e.port,\" \").concat(e.protos.join(\"/\"),\" \").concat(e.fmts.join(\" \")).concat(this.eol)}printSessionAttributes(e){return new O(this.eol).print(e)}printMediaAttributes(e){return new N(this.eol).print(e)}}class w{constructor(e){A(this,\"eol\",void 0),this.eol=e}printIceUfrag(e){return void 0===e?\"\":\"a=ice-ufrag:\".concat(e).concat(this.eol)}printIcePwd(e){return void 0===e?\"\":\"a=ice-pwd:\".concat(e).concat(this.eol)}printIceOptions(e){return void 0===e?\"\":\"a=ice-options:\".concat(e.join(s)).concat(this.eol)}printFingerprints(e){return e.length>0?e.map((e=>\"a=fingerprint:\".concat(e.hashFunction).concat(s).concat(e.fingerprint))).join(this.eol)+this.eol:\"\"}printExtmap(e){return e.map((e=>\"a=extmap:\".concat(e.entry).concat(e.direction?\"/\".concat(e.direction):\"\").concat(s).concat(e.extensionName).concat(e.extensionAttributes?\"\".concat(s).concat(e.extensionAttributes):\"\").concat(this.eol))).join(\"\")}printSetup(e){return void 0===e?\"\":\"a=setup:\".concat(e).concat(this.eol)}printUnrecognized(e){return e.map((e=>\"a=\".concat(e.attField).concat(e.attValue?\":\".concat(e.attValue):\"\").concat(this.eol))).join(\"\")}}class O extends w{print(e){let t=\"\";return t+=this.printGroups(e.groups),t+=this.printMsidSemantic(e.msidSemantic),t+=this.printIceLite(e.iceLite),t+=this.printIceUfrag(e.iceUfrag),t+=this.printIcePwd(e.icePwd),t+=this.printIceOptions(e.iceOptions),t+=this.printFingerprints(e.fingerprints),t+=this.printSetup(e.setup),t+=this.printTlsId(e.tlsId),t+=this.printIdentity(e.identities),t+=this.printExtmap(e.extmaps),t+=this.printUnrecognized(e.unrecognized),t}printGroups(e){let t=\"\";return e.length>0&&(t+=e.map((e=>\"a=group:\".concat(e.semantic).concat(e.identificationTag.map((e=>\"\".concat(s).concat(e))).join(\"\")).concat(this.eol))).join(\"\")),t}printIceLite(e){return void 0===e?\"\":\"a=ice-lite\"+this.eol}printTlsId(e){return e?\"a=tls-id:\".concat(e).concat(this.eol):\"\"}printIdentity(e){return 0===e.length?\"\":e.map((e=>\"a=identity:\".concat(e.assertionValue).concat(e.extensions.map((e=>\"\".concat(s).concat(e.name).concat(e.value?\"=\".concat(e.value):\"\")))))).join(this.eol)+this.eol}printMsidSemantic(e){if(!e)return\"\";let t=\"a=msid-semantic:\".concat(e.semantic);return e.applyForAll?t+=\"\".concat(s,\"*\"):e.identifierList.length>0&&(t+=e.identifierList.map((e=>\"\".concat(s).concat(e)))),t+this.eol}}class N extends w{print(e){const t=e.attributes;let i=\"\";return i+=this.printRTCP(t.rtcp),i+=this.printIceUfrag(t.iceUfrag),i+=this.printIcePwd(t.icePwd),i+=this.printIceOptions(t.iceOptions),i+=this.printCandidates(t.candidates),i+=this.printRemoteCandidatesList(t.remoteCandidatesList),i+=this.printEndOfCandidates(t.endOfCandidates),i+=this.printFingerprints(t.fingerprints),i+=this.printSetup(t.setup),i+=this.printMid(t.mid),i+=this.printExtmap(t.extmaps),i+=this.printRTPRelated(t),i+=this.printPtime(t.ptime),i+=this.printMaxPtime(t.maxPtime),i+=this.printDirection(t.direction),i+=this.printSSRCGroups(t.ssrcGroups),i+=this.printSSRC(t.ssrcs),i+=this.printRTCPMux(t.rtcpMux),i+=this.printRTCPMuxOnly(t.rtcpMuxOnly),i+=this.printRTCPRsize(t.rtcpRsize),i+=this.printMSId(t.msids),i+=this.printImageattr(t.imageattr),i+=this.printRid(t.rids),i+=this.printSimulcast(t.simulcast),i+=this.printSCTPPort(t.sctpPort),i+=this.printMaxMessageSize(t.maxMessageSize),i+=this.printUnrecognized(t.unrecognized),i}printCandidates(e){return e.map((e=>\"a=candidate:\".concat(e.foundation).concat(s).concat(e.componentId).concat(s).concat(e.transport).concat(s).concat(e.priority).concat(s).concat(e.connectionAddress).concat(s).concat(e.port).concat(s,\"typ\").concat(s).concat(e.type).concat(e.relAddr?\"\".concat(s,\"raddr\").concat(s).concat(e.relAddr):\"\").concat(e.relPort?\"\".concat(s,\"rport\").concat(s).concat(e.relPort):\"\").concat(Object.keys(e.extension).map((t=>\"\".concat(s).concat(t).concat(s).concat(e.extension[t]))).join(\"\")).concat(this.eol))).join(\"\")}printRemoteCandidatesList(e){return e.map((e=>\"a=remote-candidates:\".concat(e.join(s)).concat(this.eol))).join(\"\")}printEndOfCandidates(e){return void 0===e?\"\":\"a=end-of-candidates\"+this.eol}printRTPRelated(e){if(!e.payloads)return\"\";const t=e.payloads;let i=\"\";i+=e.rtcpFeedbackWildcards.map((e=>this.printRTCPFeedback(\"*\",e))).join(\"\");for(const e of t)i+=this.printRtpMap(e.payloadType,e.rtpMap),i+=this.printFmtp(e.payloadType,e.fmtp),i+=e.rtcpFeedbacks.map((t=>this.printRTCPFeedback(e.payloadType,t))).join(\"\");return i}printFmtp(e,t){if(!t)return\"\";const i=Object.keys(t.parameters);return 1===i.length&&null===t.parameters[i[0]]?\"a=fmtp:\".concat(e).concat(s).concat(i[0]).concat(this.eol):\"a=fmtp:\".concat(e).concat(s).concat(Object.keys(t.parameters).map((e=>\"\".concat(e,\"=\").concat(t.parameters[e]))).join(\";\")).concat(this.eol)}printRtpMap(e,t){return t?\"a=rtpmap:\".concat(e).concat(s).concat(t.encodingName,\"/\").concat(t.clockRate).concat(t.encodingParameters?\"/\".concat(t.encodingParameters):\"\").concat(this.eol):\"\"}printRTCPFeedback(e,t){let i=\"a=rtcp-fb:\".concat(e).concat(s),n=t;return\"trr-int\"===n.type?i+=\"ttr-int\".concat(s).concat(n.interval):(i+=\"\".concat(n.type),n.parameter&&(i+=\"\".concat(s).concat(n.parameter),n.additional&&(i+=\"\".concat(s).concat(n.additional)))),i+this.eol}printPtime(e){return void 0===e?\"\":\"a=ptime:\".concat(e).concat(this.eol)}printMaxPtime(e){return void 0===e?\"\":\"a=maxptime:\".concat(e).concat(this.eol)}printDirection(e){return void 0===e?\"\":\"a=\".concat(e).concat(this.eol)}printSSRC(e){return e.map((e=>Object.keys(e.attributes).map((t=>\"a=ssrc:\".concat(e.ssrcId.toString(10)).concat(s).concat(t).concat(e.attributes[t]?\":\".concat(e.attributes[t]):\"\").concat(this.eol))).join(\"\"))).join(\"\")}printRTCPMux(e){return void 0===e?\"\":\"a=rtcp-mux\".concat(this.eol)}printRTCPMuxOnly(e){return void 0===e?\"\":\"a=rtcp-mux-only\".concat(this.eol)}printRTCPRsize(e){return void 0===e?\"\":\"a=rtcp-rsize\".concat(this.eol)}printRTCP(e){if(void 0===e)return\"\";let t=\"a=rtcp:\".concat(e.port);return e.netType&&(t+=\"\".concat(s).concat(e.netType)),e.addressType&&(t+=\"\".concat(s).concat(e.addressType)),e.address&&(t+=\"\".concat(s).concat(e.address)),t+this.eol}printMSId(e){return e.map((e=>\"a=msid:\".concat(e.id).concat(e.appdata?\"\".concat(s).concat(e.appdata):\"\").concat(this.eol))).join(\"\")}printImageattr(e){return e.map((e=>\"a=imageattr:\".concat(e).concat(this.eol))).join(\"\")}printRid(e){return e.map((e=>{let t=\"a=rid:\".concat(e.id).concat(s).concat(e.direction);return e.payloads&&(t+=\"\".concat(s,\"pt=\").concat(e.payloads.join(\",\"))),e.params.length>0&&(t+=\"\".concat(s).concat(e.params.map((e=>\"depend\"===e.type?\"depend=\".concat(e.rids.join(\",\")):\"\".concat(e.type,\"=\").concat(e.val))).join(\";\"))),t+this.eol})).join(\"\")}printSimulcast(e){return void 0===e?\"\":\"a=simulcast:\".concat(e).concat(this.eol)}printSCTPPort(e){return void 0===e?\"\":\"a=sctp-port:\".concat(e).concat(this.eol)}printMaxMessageSize(e){return void 0===e?\"\":\"a=max-message-size:\".concat(e).concat(this.eol)}printMid(e){return void 0===e?\"\":\"a=mid:\".concat(e).concat(this.eol)}printSSRCGroups(e){return e.map((e=>\"a=ssrc-group:\".concat(e.semantic).concat(e.ssrcIds.map((e=>\"\".concat(s).concat(e.toString(10)))).join(\"\")).concat(this.eol))).join(\"\")}}function D(e){return(new C).parse(e)}function P(e,t){return(new b).print(e,t)}}},t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}return i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i(8)})()}(HP);var KP=HP.exports;function YP(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function qP(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?YP(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):YP(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function JP(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;const{filterRTX:r,filterVideoFec:s,filterAudioFec:o,filterAudioCodec:a,filterVideoCodec:c}=t,{useXR:d}=i;let l=[],h=[],u=[],p=[],_=!1,E=!1;if(KP.parse(e).mediaDescriptions.forEach((e=>{n&&n!==e.attributes.direction||(\"video\"!==e.media.mediaType||_||(h=e.attributes.payloads,p=e.attributes.extmaps,_=!0),\"audio\"!==e.media.mediaType||E||(l=e.attributes.payloads,u=e.attributes.extmaps,E=!0))})),!p||0===h.length)throw new Error(\"Cannot get video capabilities from SDP.\");if(!u||0===l.length)throw new Error(\"Cannot get audio capabilities from SDP.\");h.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),l.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),r&&(l=l.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})),h=h.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}))),s&&(h=h.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),o&&(l=l.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),a&&(null==a?void 0:a.length)>0&&(l=l.filter((e=>{var t;return Pr(a).call(a,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")}))),c&&(null==c?void 0:c.length)>0&&(h=h.filter((e=>{var t;return Pr(c).call(c,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")})));const m=kC(\"UNSUPPORTED_VIDEO_CODEC\");return m&&m.length>0&&(h=h.filter((e=>!(e.rtpMap&&Pr(m).call(m,e.rtpMap.encodingName.toLowerCase()))))),{audioCodecs:l,videoCodecs:h,audioExtensions:u,videoExtensions:p}}function zP(e){const t=KP.parse(e);let i,n;for(const e of t.mediaDescriptions){if(!i){const t=e.attributes.iceUfrag,n=e.attributes.icePwd;if(!t||!n)throw new Error(\"Cannot get iceUfrag or icePwd from SDP.\");i={iceUfrag:t,icePwd:n}}if(!n){const t=e.attributes.fingerprints;t.length>0&&(n={fingerprints:t})}}if(!n&&t.attributes.fingerprints.length>0&&(n={fingerprints:t.attributes.fingerprints}),!n||!i)throw new Error(\"Cannot get iceParameters or dtlsParameters from SDP.\");return{iceParameters:i,dtlsParameters:n}}function XP(e,t){const i=[],n=e.attributes.ssrcGroups.filter((e=>\"FID\"===e.semantic)),r=e.attributes.ssrcGroups.find((e=>\"SIM\"===e.semantic)),s=e.attributes.ssrcs;if(r)r.ssrcIds.forEach((e=>{var r;const s=null===(r=n.find((t=>t.ssrcIds[0]===e)))||void 0===r?void 0:r.ssrcIds[1];i.push({ssrcId:e,rtx:t?s:void 0})}));else if(n.length>0){const e=n[0].ssrcIds[0],r=n[0].ssrcIds[1];i.push({ssrcId:e,rtx:t?r:void 0})}else{if(0===s.length)throw new Error(\"No ssrcs found on local media description.\");i.push({ssrcId:s[0].ssrcId})}return i}function QP(e,t){const{cname:i}=e;let n;t&&t.ip&&\"number\"==typeof t.port?(n=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip,port:t.port.toString(),type:\"host\",extension:{}}],KC.debug(\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),t.ip6&&(n.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip6,port:t.port.toString(),type:\"host\",extension:{}}),KC.debug(\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)))):n=e.iceParameters.candidates.map((e=>({foundation:e.foundation,componentId:\"1\",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}})));const r={fingerprints:e.dtlsParameters.fingerprints.map((e=>({hashFunction:e.algorithm,fingerprint:e.fingerprint})))},s={iceUfrag:e.iceParameters.iceUfrag,icePwd:e.iceParameters.icePwd};let o;switch(e.dtlsParameters.role){case\"server\":o=\"passive\";break;case\"client\":o=\"active\";break;case\"auto\":o=\"actpass\"}return{dtlsParameters:r,iceParameters:s,candidates:n,rtpCapabilities:aL(e.rtpCapabilities),setup:o,cname:i}}function ZP(e,t,i){const n=[],r=[];return e.forEach((e=>{let{ssrcId:s,rtx:o}=e;const a=xT(8,\"track-\"),c={ssrcId:s,attributes:qP({label:a,mslabel:i=i||xT(10,\"\"),msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};if(n.push(c),void 0!==o){const e={ssrcId:o,attributes:qP({label:a,mslabel:i,msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};n.push(e),r.push({semantic:\"FID\",ssrcIds:[s,o]})}})),e.length>1&&r.push({semantic:\"SIM\",ssrcIds:e.map((e=>{let{ssrcId:t}=e;return t}))}),{ssrcs:n,ssrcGroups:r}}function $P(e,t){t instanceof ZA&&e.attributes.payloads.forEach((e=>{var i;const n=null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase();if(!n||-1===[\"opus\",\"pcmu\",\"pcma\",\"g722\"].indexOf(n))return;e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.minptime=\"10\",e.fmtp.parameters.useinbandfec=\"1\";const r=t._encoderConfig;r&&\"pcmu\"!==n&&\"pcma\"!==n&&\"g722\"!==n&&(r.bitrate&&!Rg()&&(e.fmtp.parameters.maxaveragebitrate=\"\".concat(Math.floor(1e3*r.bitrate))),r.sampleRate&&(e.fmtp.parameters.maxplaybackrate=\"\".concat(r.sampleRate),e.fmtp.parameters[\"sprop-maxcapturerate\"]=\"\".concat(r.sampleRate)),r.stereo&&(e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"))}))}function eL(e){const t=e.attributes.unrecognized.findIndex((e=>\"x-google-flag\"===e.attField&&\"conference\"===e.attValue));-1!==t&&e.attributes.unrecognized.splice(t,1)}function tL(e,t){var i;if(!(t instanceof Sb&&t._encoderConfig&&-1===t._hints.indexOf(ky.SCREEN_TRACK)))return;const n=t._encoderConfig;_A().supportMinBitrate&&n.bitrateMin&&e.attributes.payloads.forEach((e=>{var t,i;Pr(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-min-bitrate\"]=\"\".concat(n.bitrateMin))})),_A().supportMinBitrate&&!Pr(i=t._hints).call(i,ky.LOW_STREAM)&&n.bitrateMax&&e.attributes.payloads.forEach((e=>{var t,i;Pr(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-start-bitrate\"]=\"\".concat(kC(\"X_GOOGLE_START_BITRATE\")||Math.floor(n.bitrateMax)))}))}function iL(e){if(\"video\"!==e.media.mediaType)return;const t=pg();if(t.name!==cg.SAFARI&&t.os!==ag.IOS)return;const i=e.attributes.extmaps.findIndex((e=>/video-orientation/g.test(e.extensionName)));-1!==i&&e.attributes.extmaps.splice(i,1)}function nL(e,t,i){if(!t)return;let n,r;if(\"video\"===e.media.mediaType?(n=i.videoExtensions,r=i.videoCodecs):(n=i.audioExtensions,r=i.audioCodecs),!0===t.twcc){const t=n.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))||e.rtcpFeedbacks.push({type:\"transport-cc\"})}))}}else if(!1===t.twcc){const t=e.attributes.extmaps.findIndex((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}if(!0===t.remb){const t=n.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))||e.rtcpFeedbacks.push({type:\"goog-remb\"})}))}}else if(!1===t.remb){const t=e.attributes.extmaps.findIndex((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"goog-remb\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}}function rL(e,t,i){if(Rg())return;if(\"video\"!==e.media.mediaType)return;if(!(t instanceof Sb))return;if(\"vp9\"!==i&&\"vp8\"!==i)return;if(\"vp8\"===i&&!kC(\"SIMULCAST\"))return;if(void 0===t._scalabilityMode||t._scalabilityMode.numSpatialLayers<=1)return;const n=\"vp8\"===i?2:t._scalabilityMode.numSpatialLayers,r=e.attributes.ssrcs[0],s=e.attributes.ssrcGroups.find((e=>\"FID\"===e.semantic&&e.ssrcIds[0]===r.ssrcId)),o={semantic:\"SIM\",ssrcIds:[r.ssrcId]};for(let t=1;t<n;t++)e.attributes.ssrcs.push({ssrcId:r.ssrcId+t,attributes:bT(r.attributes)}),o.ssrcIds.push(r.ssrcId+t),s&&(e.attributes.ssrcs.push({ssrcId:s.ssrcIds[1]+t,attributes:bT(r.attributes)}),e.attributes.ssrcGroups.push({semantic:\"FID\",ssrcIds:[r.ssrcId+t,s.ssrcIds[1]+t]}));e.attributes.ssrcGroups.unshift(o)}async function sL(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{filterRTX:i,filterVideoFec:n,filterAudioFec:r,filterAudioCodec:s,filterVideoCodec:o}=e,{useXR:a}=t,c=new RTCPeerConnection;c.addTransceiver(\"video\",{direction:\"sendonly\"}),c.addTransceiver(\"audio\",{direction:\"sendonly\"}),c.addTransceiver(\"video\",{direction:\"recvonly\"}),c.addTransceiver(\"audio\",{direction:\"recvonly\"});const d=(await c.createOffer()).sdp,l=JP(d,{filterRTX:i,filterVideoFec:n,filterAudioFec:r,filterAudioCodec:s,filterVideoCodec:o},{useXR:a},\"sendonly\"),h=JP(d,{filterRTX:i,filterVideoFec:n,filterAudioFec:r,filterAudioCodec:s,filterVideoCodec:o},{useXR:a},\"recvonly\"),u={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},p={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},_={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(oL(l,h,\"videoExtensions\",u,p,_),oL(l,h,\"videoCodecs\",u,p,_),oL(l,h,\"audioExtensions\",u,p,_),oL(l,h,\"audioCodecs\",u,p,_),kC(\"RAISE_H264_BASELINE_PRIORITY\")){const e=_.videoCodecs.findIndex((e=>{var t,i;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"===(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])}));if(-1!==e){const t=_.videoCodecs.findIndex((e=>{var t;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())}));if(t<e){KC.debug(\"raising H264 baseline profile priority\");const i=_.videoCodecs[e];_.videoCodecs.splice(e,1),_.videoCodecs.splice(t,0,i)}-1!==t&&(p.videoCodecs=p.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))}))),-1!==t&&kC(\"FILTER_SEND_H264_BASELINE\")&&(u.videoCodecs=u.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))})))}}try{c.close()}catch(e){}return{send:u,recv:p,sendrecv:_}}function oL(e,t,i,n,r,s){if(\"videoExtensions\"===i||\"audioExtensions\"===i){const o=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.entry===t.entry&&e.extensionName===t.extensionName)return o.push(i),!0}))?s[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===o.indexOf(t)&&r[i].push(e)}))}if(\"videoCodecs\"===i||\"audioCodecs\"===i){const o=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.payloadType===t.payloadType&&JSON.stringify(e)===JSON.stringify(t))return o.push(i),!0}))?s[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===o.indexOf(t)&&r[i].push(e)}))}}function aL(e){const{send:t,recv:i,sendrecv:n}=e;if(!n){if(!t||!i)throw new Error(\"cannot merge rtp capabilities because one of send or recv is empty!\");return{send:t,recv:i}}let r,s;return t?(r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r.audioCodecs=[...t.audioCodecs,...n.audioCodecs],r.videoCodecs=[...t.videoCodecs,...n.videoCodecs],r.audioExtensions=[...t.audioExtensions,...n.audioExtensions],r.videoExtensions=[...t.videoExtensions,...n.videoExtensions]):r=n,i?(s={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},s.audioCodecs=[...i.audioCodecs,...n.audioCodecs],s.videoCodecs=[...i.videoCodecs,...n.videoCodecs],s.audioExtensions=[...i.audioExtensions,...n.audioExtensions],s.videoExtensions=[...i.videoExtensions,...n.videoExtensions]):s=n,{send:r,recv:s}}function cL(e){if(\"audio\"!==e.media.mediaType)return;e.attributes.payloads.filter((e=>{var t;return\"opus\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})).forEach((e=>{e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"}))}function dL(e){e.mediaDescriptions.forEach((e=>{\"video\"!==e.media.mediaType&&\"audio\"!==e.media.mediaType||e.attributes.payloads.forEach((e=>{-1===e.rtcpFeedbacks.findIndex((e=>\"rrtr\"===e.type))&&e.rtcpFeedbacks.push({type:\"rrtr\"})}))}))}function lL(e,t,i,n){let r=[];if(e===hI.VIDEO){if(kC(\"H264_PROFILE_LEVEL_ID\")&&\"h264\"===n&&(r=t.videoCodecs.filter((e=>{var t;return Pr(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)&&e&&e.fmtp&&e.fmtp.parameters[\"profile-level-id\"]===kC(\"H264_PROFILE_LEVEL_ID\")}))),!Array.isArray(r)||0===r.length){const e=i.videoCodecs.filter((e=>{var t;return Pr(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)}));0!==e.length&&(r=t.videoCodecs.filter((t=>e.some((e=>e.payloadType===t.payloadType)))))}if(kC(\"USE_PUB_RTX\")){const e=r.map((e=>e.payloadType.toString())),i=t.videoCodecs.filter((t=>t.rtpMap&&\"rtx\"===t.rtpMap.encodingName&&Pr(e).call(e,t.fmtp&&t.fmtp.parameters.apt||\"\")));r=[...r,...i]}0===r.length&&(KC.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to default payloads: \").concat(t.videoCodecs[0].rtpMap&&t.videoCodecs[0].rtpMap.encodingName)),r=t.videoCodecs)}else r=t.audioCodecs.filter((e=>{var t;return Pr(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)})),0===r.length&&(KC.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to opus\")),r=t.audioCodecs.filter((e=>{var t;return Pr(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,\"opus\")})));return r}function hL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function uL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?hL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):hL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function pL(e){if(Array.isArray(e))return e.map((e=>e));if(!_L(e))return e;const t={};for(const i in e){const n=e[i];_L(n)||Array.isArray(n)?t[i]=pL(n):t[i]=n}return t}function _L(e){return!(\"object\"!=typeof e||Array.isArray(e)||!e)}class EL{constructor(e){nu(this,\"input\",[]),nu(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}diffMean(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length}}const mL={address:\"unknown\",candidateType:\"unknown\",id:\"unknown\",port:0,priority:0,protocol:\"unknown\",type:\"unknown\"},fL={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[],selectedCandidatePair:{id:\"unknown\",localCandidate:mL,remoteCandidate:mL}},gL={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,qpSumPerFrame:0},TL={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0,qpSumPerFrame:0},SL={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0},RL={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0,concealedSamples:0};function CL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function vL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?CL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):CL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class IL{constructor(e,t){nu(this,\"onFirstVideoReceived\",void 0),nu(this,\"onFirstVideoDecoded\",void 0),nu(this,\"onFirstAudioReceived\",void 0),nu(this,\"onFirstVideoDecodedTimeout\",void 0),nu(this,\"onFirstAudioDecoded\",void 0),nu(this,\"onSelectedLocalCandidateChanged\",void 0),nu(this,\"onSelectedRemoteCandidateChanged\",void 0),nu(this,\"videoIsReady\",!1),nu(this,\"videoIsReady2\",{}),nu(this,\"pc\",void 0),nu(this,\"options\",void 0),nu(this,\"intervalTimer\",void 0),nu(this,\"stats\",pL(fL)),nu(this,\"isFirstVideoReceived\",{}),nu(this,\"isFirstVideoDecoded\",{}),nu(this,\"isFirstAudioReceived\",{}),nu(this,\"isFirstAudioDecoded\",{}),nu(this,\"isFirstVideoDecodedTimeout\",{}),nu(this,\"lossRateWindowStats\",[]),this.pc=e,this.options=t,this.intervalTimer=window.setInterval((async()=>{this.updateStats()}),this.options.updateInterval)}getStats(){return this.stats}getSelectedCandidatePair(){return new tg((e=>{e({local:vL({},mL),remote:vL({},mL)})}))}setVideoIsReady(e){this.videoIsReady=e}setVideoIsReady2(e,t){this.videoIsReady2[e]=t}getVideoIsReady(e){return this.videoIsReady2[e]||!1}setIsFirstAudioDecoded(e){}destroy(){window.clearInterval(this.intervalTimer),this.pc=void 0}calcLossRate(e){this.lossRateWindowStats.push(e),this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);const t=this.lossRateWindowStats.length,i=[\"videoSend\",\"audioSend\",\"videoRecv\",\"audioRecv\"];let n=0,r=0,s=0,o=0;for(const a of i)e[a].forEach(((e,i)=>{if(!this.lossRateWindowStats[t-1][a][i]||!this.lossRateWindowStats[0][a][i])return;const c=this.lossRateWindowStats[t-1][a][i].packets-this.lossRateWindowStats[0][a][i].packets,d=this.lossRateWindowStats[t-1][a][i].packetsLost-this.lossRateWindowStats[0][a][i].packetsLost;\"videoSend\"===a||\"audioSend\"===a?(n+=c,s+=d):(r+=c,o+=d),Number.isNaN(c)||Number.isNaN(c)?e.packetLostRate=0:e.packetLostRate=c<=0||d<=0?0:d/(c+d)}));e.sendPacketLossRate=n<=0||s<=0?0:s/(n+s),e.recvPacketLossRate=r<=0||o<=0?0:o/(r+o)}}function yL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function AL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?yL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):yL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class bL extends IL{constructor(){super(...arguments),nu(this,\"_stats\",fL),nu(this,\"lastDecodeVideoReceiverStats\",new Map)}async updateStats(){const e=await this._getStats(),t=this.statsResponsesToObjects(e);this._stats=pL(fL);const i=t.filter((e=>\"ssrc\"===e.type));this.processSSRCStats(i);const n=t.find((e=>\"VideoBwe\"===e.type));n&&this.processBandwidthStats(n),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}processBandwidthStats(e){this._stats.bitrate={actualEncoded:Number(e.googActualEncBitrate),targetEncoded:Number(e.googTargetEncBitrate),retransmit:Number(e.googRetransmitBitrate),transmit:Number(e.googTransmitBitrate)},this._stats.sendBandwidth=Number(e.googAvailableSendBandwidth)}processSSRCStats(e){e.forEach((e=>{var t;const i=Pr(t=e.id).call(t,\"send\");switch(\"\".concat(e.mediaType,\"_\").concat(i?\"send\":\"recv\")){case\"video_send\":{const t=pL(TL);t.codec=e.googCodecName,t.adaptionChangeReason=\"none\",e.googCpuLimitedResolution&&(t.adaptionChangeReason=\"cpu\"),e.googBandwidthLimitedResolution&&(t.adaptionChangeReason=\"bandwidth\"),t.avgEncodeMs=Number(e.googAvgEncodeMs),t.inputFrame={width:Number(e.googFrameWidthInput)||Number(e.googFrameWidthSent),height:Number(e.googFrameHeightInput)||Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.sentFrame={width:Number(e.googFrameWidthSent),height:Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.firsCount=Number(e.googFirReceived),t.nacksCount=Number(e.googNacksReceived),t.plisCount=Number(e.googPlisReceived),t.frameCount=Number(e.framesEncoded),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.videoSend.push(t),this._stats.rtt=t.rttMs;break}case\"video_recv\":{const t=pL(gL),i=this.lastDecodeVideoReceiverStats.get(Number(e.ssrc));if(t.codec=e.googCodecName,t.targetDelayMs=Number(e.googTargetDelayMs),t.renderDelayMs=Number(e.googRenderDelayMs),t.currentDelayMs=Number(e.googCurrentDelayMs),t.minPlayoutDelayMs=Number(e.googMinPlayoutDelayMs),t.decodeMs=Number(e.googDecodeMs),t.maxDecodeMs=Number(e.googMaxDecodeMs),t.receivedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateReceived)},t.decodedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateDecoded)},t.decodeFrameRate=Number(e.googFrameRateDecoded),t.outputFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateOutput)},t.jitterBufferMs=Number(e.googJitterBufferMs),t.firsCount=Number(e.googFirsSent),t.nacksCount=Number(e.googNacksSent),t.plisCount=Number(e.googPlisSent),t.framesDecodeCount=Number(e.framesDecoded),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]&&(this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,t.decodedFrame.width,t.decodedFrame.height),this.isFirstVideoDecoded[t.ssrc]=!0),i){const n=i.stats,r=Date.now()-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=r,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc,10))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<i.stats.framesDecodeCount&&(t.framesDecodeInterval=0)}this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:AL({},t),lts:Date.now()}),this._stats.videoRecv.push(t);break}case\"audio_recv\":{const t=pL(RL);t.codec=e.googCodecName,t.outputLevel=Math.abs(Number(e.audioOutputLevel))/32767,t.decodingCNG=Number(e.googDecodingCNG),t.decodingCTN=Number(e.googDecodingCTN),t.decodingCTSG=Number(e.googDecodingCTSG),t.decodingNormal=Number(e.googDecodingNormal),t.decodingPLC=Number(e.googDecodingPLC),t.decodingPLCCNG=Number(e.googDecodingPLCCNG),t.expandRate=Number(e.googExpandRate),t.accelerateRate=Number(e.googAccelerateRate),t.preemptiveExpandRate=Number(e.googPreemptiveExpandRate),t.secondaryDecodedRate=Number(e.googSecondaryDecodedRate),t.speechExpandRate=Number(e.googSpeechExpandRate),t.preferredJitterBufferMs=Number(e.googPreferredJitterBufferMs),t.jitterBufferMs=Number(e.googJitterBufferMs),t.jitterMs=Number(e.googJitterReceived),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.receivedFrames=Number(e.googDecodingCTN)||Number(e.packetsReceived),t.droppedFrames=Number(e.googDecodingPLC)+Number(e.googDecodingPLCCNG)||Number(e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.decodingNormal>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),this._stats.audioRecv.push(t);break}case\"audio_send\":{const t=pL(SL);t.codec=e.googCodecName,t.inputLevel=Math.abs(Number(e.audioInputLevel))/32767,t.aecReturnLoss=Number(e.googEchoCancellationReturnLoss||0),t.aecReturnLossEnhancement=Number(e.googEchoCancellationReturnLossEnhancement||0),t.residualEchoLikelihood=Number(e.googResidualEchoLikelihood||0),t.residualEchoLikelihoodRecentMax=Number(e.googResidualEchoLikelihoodRecentMax||0),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.rtt=t.rttMs,this._stats.audioSend.push(t);break}}}))}_getStats(){return new tg(((e,t)=>{this.pc.getStats(e,t)}))}statsResponsesToObjects(e){const t=[];return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp.valueOf().toString(),type:e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t.push(i)})),t}}function wL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function OL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?wL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):wL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class NL extends IL{constructor(){super(...arguments),nu(this,\"_stats\",fL),nu(this,\"report\",void 0),nu(this,\"lastDecodeVideoReceiverStats\",new Map),nu(this,\"lastVideoFramesRecv\",new Map),nu(this,\"lastVideoFramesSent\",new Map),nu(this,\"lastVideoFramesDecode\",new Map),nu(this,\"lastVideoJBDelay\",new Map),nu(this,\"lastAudioJBDelay\",new Map),nu(this,\"mediaBytesSent\",new Map),nu(this,\"mediaBytesRetransmit\",new Map),nu(this,\"mediaBytesTargetEncode\",new Map),nu(this,\"lastEncoderMs\",new Map)}async updateStats(){this.report=await this.pc.getStats(),this._stats=pL(fL),this.report.forEach((e=>{switch(e.type){case hv.OUTBOUND:case hv.INBOUND:{const t=e.mediaType||e.kind,i=!t&&\"frameWidth\"in e,n=!t&&!(\"frameWidth\"in e);e.type===hv.OUTBOUND?\"audio\"===t||n?this.processAudioOutboundStats(e):(\"video\"===t||i)&&this.processVideoOutboundStats(e):e.type===hv.INBOUND&&(\"audio\"===t||n?this.processAudioInboundStats(e):(\"video\"===t||i)&&this.processVideoInboundStats(e));break}case hv.TRANSPORT:{const t=this.report.get(e.selectedCandidatePairId);t&&this.processCandidatePairStats(t);break}case hv.CANDIDATE_PAIR:e.selected&&this.processCandidatePairStats(e)}})),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}async getSelectedCandidatePair(){const e=await this.pc.getStats(),t={local:OL({},mL),remote:OL({},mL)};return e.forEach((i=>{let n;if(i.type===hv.TRANSPORT&&(n=e.get(i.selectedCandidatePairId)),i.type===hv.CANDIDATE_PAIR&&i.selected&&(n=i),n){const i=(e,t)=>{e.type=t.type,e.id=t.id,t.address&&(e.address=t.address),t.candidateType&&(e.candidateType=t.candidateType),t.port&&(e.port=t.port),t.priority&&(e.priority=t.priority),t.protocol&&(e.protocol=t.protocol),t.relayProtocol&&(e.relayProtocol=t.relayProtocol)};if(n.localCandidateId){const r=e.get(n.localCandidateId);r&&i(t.local,r)}if(n.remoteCandidateId){const r=e.get(n.remoteCandidateId);r&&i(t.remote,r)}}})),t}processCandidatePairStats(e){if(this._stats.sendBandwidth=e.availableOutgoingBitrate||0,e.currentRoundTripTime&&(this._stats.rtt=1e3*e.currentRoundTripTime),this._stats.videoSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.audioSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.selectedCandidatePair.id=e.id,e.localCandidateId){const t=this.report.get(e.localCandidateId);t&&this.processCandidateStats(t)}if(e.remoteCandidateId){const t=this.report.get(e.remoteCandidateId);t&&this.processCandidateStats(t)}}processCandidateStats(e){let t;e.type===hv.LOCAL_CANDIDATE&&(t=this._stats.selectedCandidatePair.localCandidate),e.type===hv.REMOTE_CANDIDATE&&(t=this._stats.selectedCandidatePair.remoteCandidate),t&&(t.type=e.type,t.id=e.id,e.address&&(t.address=e.address),e.candidateType&&(t.candidateType=e.candidateType),e.port&&(t.port=e.port),e.priority&&(t.priority=e.priority),e.protocol&&(t.protocol=e.protocol),e.relayProtocol&&(t.relayProtocol=e.relayProtocol),e.type===hv.LOCAL_CANDIDATE&&this.stats.selectedCandidatePair.localCandidate.id!==t.id&&this.onSelectedLocalCandidateChanged&&this.onSelectedLocalCandidateChanged(OL({},t),OL({},this.stats.selectedCandidatePair.localCandidate)),e.type===hv.REMOTE_CANDIDATE&&this.stats.selectedCandidatePair.remoteCandidate.id!==t.id&&this.onSelectedRemoteCandidateChanged&&this.onSelectedRemoteCandidateChanged(OL({},t),OL({},this.stats.selectedCandidatePair.remoteCandidate)))}processAudioInboundStats(e){let t=this._stats.audioRecv.find((t=>t.ssrc===e.ssrc));t||(t=pL(RL),this._stats.audioRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.jitterMs=1e3*e.jitter,this.processAudioTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),t.receivedFrames||(t.receivedFrames=e.packetsReceived),t.droppedFrames||(t.droppedFrames=e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.outputLevel&&t.outputLevel>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),\"number\"==typeof e.concealedSamples&&(t.concealedSamples=e.concealedSamples)}processVideoInboundStats(e){let t=this._stats.videoRecv.find((t=>t.ssrc===e.ssrc));t||(t=pL(gL),this._stats.videoRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.framesDecodeCount=e.framesDecoded,t.totalInterFrameDelay=e.totalInterFrameDelay,t.totalSquaredInterFrameDelay=e.totalSquaredInterFrameDelay;const i=this.lastDecodeVideoReceiverStats.get(t.ssrc),n=this.lastVideoFramesDecode.get(t.ssrc),r=Date.now();if(t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]){const e=t.decodedFrame?t.decodedFrame.width:0,i=t.decodedFrame?t.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,e,i),this.isFirstVideoDecoded[t.ssrc]=!0}if(i){const n=i.stats,s=r-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,!this.isFirstVideoDecoded[t.ssrc]&&s>this.options.firstVideoDecodedTimeout&&!this.isFirstVideoDecodedTimeout[t.ssrc]&&(this.onFirstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout(t.ssrc),this.isFirstVideoDecodedTimeout[t.ssrc]=!0),t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=s,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<n.framesDecodeCount&&(t.framesDecodeInterval=0),e.framesDecoded&&e.qpSum&&(i.stats.framesDecodeCount>e.framesDecoded?t.qpSumPerFrame=e.qpSum/e.framesDecoded:t.qpSumPerFrame=(e.qpSum-i.qpSum)/(e.framesDecoded-i.stats.framesDecodeCount))}n&&r-n.lts>=800?(t.decodeFrameRate=Math.round((t.framesDecodeCount-n.count)/((r-n.lts)/1e3)),this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:r,rate:t.decodeFrameRate})):n?t.decodeFrameRate=n.rate:this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:r,rate:0}),e.totalDecodeTime&&(t.decodeMs=1e3*e.totalDecodeTime),this.processVideoTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.framerateMean&&(t.framesRateFirefox=e.framerateMean),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:OL({},t),lts:i?i.lts:Date.now(),qpSum:e.qpSum})}processVideoOutboundStats(e){let t=this._stats.videoSend.find((t=>t.ssrc===e.ssrc));t||(t=pL(TL),this._stats.videoSend.push(t));const i=this.mediaBytesSent.get(e.ssrc);if(i)i.add(e.bytesSent);else{const t=new EL(10);t.add(e.bytesSent),this.mediaBytesSent.set(e.ssrc,t)}if(void 0!==e.retransmittedBytesSent){const t=this.mediaBytesRetransmit.get(e.ssrc);if(t)t.add(e.retransmittedBytesSent);else{const t=new EL(10);t.add(e.retransmittedBytesSent),this.mediaBytesRetransmit.set(e.ssrc,t)}}if(e.totalEncodedBytesTarget){const t=this.mediaBytesTargetEncode.get(e.ssrc);if(t)t.add(e.totalEncodedBytesTarget);else{const t=new EL(10);t.add(e.totalEncodedBytesTarget),this.mediaBytesTargetEncode.set(e.ssrc,t)}}if(t.ssrc=e.ssrc,t.bytes=e.bytesSent,t.packets=e.packetsSent,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.frameCount=e.framesEncoded,t.adaptionChangeReason=e.qualityLimitationReason,t.scalabilityMode=e.scalabilityMode,e.totalEncodeTime&&e.framesEncoded){const i=this.lastEncoderMs.get(e.ssrc);if(!i||i.lastFrameCount>e.framesEncoded)t.avgEncodeMs=1e3*e.totalEncodeTime/e.framesEncoded;else{const n=e.framesEncoded-i.lastFrameCount,r=e.totalEncodeTime-i.lastEncoderTime;t.avgEncodeMs=1e3*r/n}}if(e.framesEncoded&&e.qpSum){const i=this.lastEncoderMs.get(e.ssrc);!i||i.lastFrameCount>e.framesEncoded?t.qpSumPerFrame=e.qpSum/e.framesEncoded:t.qpSumPerFrame=(e.qpSum-i.lastQpSum)/(e.framesEncoded-i.lastFrameCount)}if(this.lastEncoderMs.set(e.ssrc,{lastFrameCount:e.framesEncoded,lastEncoderTime:e.totalEncodeTime,lastQpSum:e.qpSum,lts:Date.now()}),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.mediaSourceId&&this.processVideoMediaSource(e.mediaSourceId,t),this.processVideoTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,hv.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}processAudioOutboundStats(e){let t=this._stats.audioSend.find((t=>t.ssrc===e.ssrc));if(t||(t=pL(SL),this._stats.audioSend.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsSent,t.bytes=e.bytesSent,e.mediaSourceId&&this.processAudioMediaSource(e.mediaSourceId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),this.processAudioTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,hv.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}findRemoteStatsId(e,t){var i;const n=Array.from(kv(i=this.report).call(i)).find((i=>i.type===t&&i.ssrc===e));return n?n.id:null}processVideoMediaSource(e,t){const i=this.report.get(e);i&&i.width&&i.height&&i.framesPerSecond&&(t.inputFrame={width:i.width,height:i.height,frameRate:i.framesPerSecond})}processAudioMediaSource(e,t){const i=this.report.get(e);i&&(t.inputLevel=i.audioLevel)}processVideoTrackSenderStats(e,t,i){var n,r,s,o;const a=t?this.report.get(t):void 0,c=null!==(n=null==a?void 0:a.framesSent)&&void 0!==n?n:e.framesSent;if(\"number\"!=typeof c)return;let d=null!==(r=null==a?void 0:a.frameWidth)&&void 0!==r?r:e.frameWidth,l=null!==(s=null==a?void 0:a.frameHeight)&&void 0!==s?s:e.frameHeight,h=null!==(o=null==a?void 0:a.framesPerSecond)&&void 0!==o?o:e.framesPerSecond;if(\"number\"==typeof d&&\"number\"==typeof l||(d=0,l=0),null==h){const e=Date.now(),t=this.lastVideoFramesSent.get(i.ssrc);t&&e-t.lts>=800?(h=Math.round((c-t.count)/((e-t.lts)/1e3)),this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:h})):t?h=t.rate:this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:0})}i.sentFrame={width:d,height:l,frameRate:Math.max(0,h)}}processVideoTrackReceiverStats(e,t,i){var n,r,s,o,a;const c=t?this.report.get(t):void 0,d=null!==(n=null==c?void 0:c.framesReceived)&&void 0!==n?n:e.framesReceived,l=null!==(r=null==c?void 0:c.frameWidth)&&void 0!==r?r:e.frameWidth,h=null!==(s=null==c?void 0:c.frameHeight)&&void 0!==s?s:e.frameHeight,u=null!==(o=null==c?void 0:c.jitterBufferDelay)&&void 0!==o?o:e.jitterBufferDelay,p=null!==(a=null==c?void 0:c.jitterBufferEmittedCount)&&void 0!==a?a:e.jitterBufferEmittedCount;if(\"number\"==typeof d){const e=this.lastVideoFramesRecv.get(i.ssrc),t=Date.now();i.framesReceivedCount=d;let n=0;e&&t-e.lts>=800?(n=Math.round((d-e.count)/((t-e.lts)/1e3)),this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:n})):e?n=e.rate:this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:0}),i.receivedFrame={width:l||0,height:h||0,frameRate:n||0},i.decodedFrame={width:l||0,height:h||0,frameRate:i.decodeFrameRate||0},i.outputFrame={width:l||0,height:h||0,frameRate:i.decodeFrameRate||0}}if(u&&p){const e=this.lastVideoJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=p-e.jitterBufferEmittedCount;n>0&&(t=1e3*(u-e.jitterBufferDelay)/n),i.jitterBufferMs=t,i.currentDelayMs=Math.round(t),this.lastVideoJBDelay.set(i.ssrc,{jitterBufferDelay:u,jitterBufferEmittedCount:p,jitterBufferMs:i.currentDelayMs})}}processAudioTrackSenderStats(e,t,i){var n,r,s,o;const a=t?this.report.get(t):void 0,c=null!==(n=null!==(r=null==a?void 0:a.echoReturnLoss)&&void 0!==r?r:e.echoReturnLoss)&&void 0!==n?n:0,d=null!==(s=null!==(o=null==a?void 0:a.echoReturnLossEnhancement)&&void 0!==o?o:e.echoReturnLossEnhancement)&&void 0!==s?s:0;i.aecReturnLoss=c,i.aecReturnLossEnhancement=d}processAudioTrackReceiverStats(e,t,i){var n,r,s,o,a,c,d;const l=t?this.report.get(t):void 0,h=null!==(n=null==l?void 0:l.removedSamplesForAcceleration)&&void 0!==n?n:e.removedSamplesForAcceleration,u=null!==(r=null==l?void 0:l.totalSamplesReceived)&&void 0!==r?r:e.totalSamplesReceived,p=null!==(s=null==l?void 0:l.jitterBufferDelay)&&void 0!==s?s:e.jitterBufferDelay,_=null!==(o=null==l?void 0:l.jitterBufferEmittedCount)&&void 0!==o?o:e.jitterBufferEmittedCount,E=null!==(a=null==l?void 0:l.audioLevel)&&void 0!==a?a:null==e?void 0:e.audioLevel,m=null!==(c=null==l?void 0:l.totalSamplesDuration)&&void 0!==c?c:null==e?void 0:e.totalSamplesDuration,f=null!==(d=null==l?void 0:l.concealedSamples)&&void 0!==d?d:e.concealedSamples;if(h&&u&&(i.accelerateRate=h/u),p&&_){const e=this.lastAudioJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=_-e.jitterBufferEmittedCount;n>0&&(t=1e3*(p-e.jitterBufferDelay)/n),i.jitterBufferMs=Math.round(t),this.lastAudioJBDelay.set(i.ssrc,{jitterBufferDelay:p,jitterBufferEmittedCount:_,jitterBufferMs:i.jitterBufferMs})}i.outputLevel=E;let g=1920;m&&u&&(g=u/m/50,i.receivedFrames=Math.round(u/g)),f&&(i.droppedFrames=Math.round(f/g))}processRemoteInboundStats(e,t){const i=this.report.get(e);i&&(t.packetsLost=i.packetsLost,i.roundTripTime&&(t.rttMs=1e3*i.roundTripTime),i.jitter&&(t.jitterMs=1e3*i.jitter),i.timestamp&&(t.timestamp=i.timestamp))}getCodecFromCodecStats(e){const t=this.report.get(e);if(!t)return\"\";const i=t.mimeType.match(/\\/(.*)$/);return i&&i[1]?i[1]:\"\"}updateSendBitrate(){let e=0,t=null,i=null;this.mediaBytesSent.forEach((t=>{e+=t.diffMean()})),this.mediaBytesRetransmit.forEach((e=>{t=null===t?e.diffMean():t+e.diffMean()})),this.mediaBytesTargetEncode.forEach((e=>{i=null===i?e.diffMean():i+e.diffMean()}));const n=null!==t?e-t:e;this._stats.bitrate={actualEncoded:8*n/(this.options.updateInterval/1e3),transmit:8*e/(this.options.updateInterval/1e3)},null!==t&&(this._stats.bitrate.retransmit=8*t/(this.options.updateInterval/1e3)),null!==i&&(this._stats.bitrate.targetEncoded=8*i/(this.options.updateInterval/1e3))}}class DL extends IL{updateStats(){return tg.resolve()}}function PL(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:500,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1e4;const s=function(){const e=navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]*/i);return e&&e[0]?Number(e[0].split(\"/\")[1]):null}();return s?s<76?new bL(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new NL(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):function(e){return!!window.RTCStatsReport&&e.getStats()instanceof tg}(e)?new NL(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new DL(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r})}function LL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function kL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?LL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):LL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class ML extends PI{get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}constructor(e,t){super(e,t),nu(this,\"store\",void 0),nu(this,\"peerConnection\",void 0),nu(this,\"remoteSDP\",void 0),nu(this,\"initialOffer\",void 0),nu(this,\"statsFilter\",void 0),nu(this,\"useRTX\",!1),nu(this,\"localCapabilities\",void 0),nu(this,\"localCandidateCount\",0),nu(this,\"allCandidatesReceived\",!1),nu(this,\"establishPromise\",void 0),nu(this,\"mutex\",new YT(\"P2PConnection-mutex\")),this.store=t,this.peerConnection=new RTCPeerConnection(ML.resolvePCConfiguration(e),{optional:[{googDscp:!0}]}),this.statsFilter=PL(this.peerConnection,kC(\"STATS_UPDATE_INTERVAL\"),void 0,Rg()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}async establish(){try{const e=await this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=zP(e.sdp),i=JP(e.sdp,{filterRTX:!this.useRTX,filterVideoFec:kC(\"FILTER_VIDEO_FEC\"),filterAudioFec:kC(\"FILTER_AUDIO_FEC\"),filterAudioCodec:[\"opus\"]});return this.localCapabilities=i,this.initialOffer=e,kL(kL({},t),{},{rtpCapabilities:{send:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},recv:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},sendrecv:i},offerSDP:e.sdp})}catch(e){throw new Vg(xg.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,n,r,s){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new class{constructor(e){nu(this,\"sessionDesc\",void 0),nu(this,\"localCapabilities\",void 0),nu(this,\"rtpCapabilities\",void 0),nu(this,\"candidates\",void 0),nu(this,\"iceParameters\",void 0),nu(this,\"dtlsParameters\",void 0),nu(this,\"setup\",void 0),nu(this,\"currentMidIndex\",void 0),nu(this,\"cname\",void 0),e=bT(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:n,remoteRTPCapabilities:r,remoteSetup:s,localCapabilities:o,sdkCodec:a,cname:c}=e,d=KP.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE audio video\\na=msid-semantic: WMS\\na=ice-lite\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:audio\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:video\\n\");this.rtpCapabilities=r,this.candidates=n,this.iceParameters=t,this.dtlsParameters=i,this.setup=s,this.localCapabilities=o,this.cname=c;for(let e=0;e<d.mediaDescriptions.length;e++){const o=d.mediaDescriptions[e];if(o.attributes.iceUfrag=t.iceUfrag,o.attributes.icePwd=t.icePwd,o.attributes.fingerprints=i.fingerprints,o.attributes.candidates=n,o.attributes.setup=s,\"video\"===o.media.mediaType){o.media.fmts=r.videoCodecs.map((e=>e.payloadType.toString(10)));let e=r.videoCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Pr(i=t.encodingName.toLowerCase()).call(i,a)}));0===e.length&&(e=r.videoCodecs),o.attributes.payloads=e,o.attributes.extmaps=r.videoExtensions}\"audio\"===o.media.mediaType&&(o.media.fmts=r.audioCodecs.map((e=>e.payloadType.toString(10))),o.attributes.payloads=r.audioCodecs,o.attributes.extmaps=r.audioExtensions),d.mediaDescriptions[e]=this.mungMediaDesc(o)}this.sessionDesc=d,this.currentMidIndex=d.mediaDescriptions.length-1}toString(){return KP.print(this.sessionDesc)}send(e,t,i){const{ssrcs:n,ssrcGroups:r}=ZP(t,this.cname),s=this.sessionDesc.mediaDescriptions.find((t=>e===hI.VIDEO?\"video\"===t.media.mediaType:\"audio\"===t.media.mediaType)),o=n[0].attributes.label,a=n[0].attributes.mslabel;return s.attributes.ssrcs=s.attributes.ssrcs.concat(n),s.attributes.ssrcGroups=s.attributes.ssrcGroups.concat(r),{id:o,mslabel:a}}batchSend(e){return e.map((e=>{let{kind:t,ssrcMsg:i}=e;return this.send(t,i,void 0)}))}stopSending(e){this.sessionDesc.mediaDescriptions.forEach((t=>{const i=[],n=[],r=[];t.attributes.ssrcs.forEach((t=>{Pr(e).call(e,t.attributes.label||\"\")?r.push(t):i.push(t)})),t.attributes.ssrcGroups.forEach((e=>{var t;Pr(t=r.map((e=>e.ssrcId))).call(t,e.ssrcIds[0])||n.push(e)})),t.attributes.ssrcs=i,t.attributes.ssrcGroups=n}))}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}receive(e,t,i){e.forEach(((e,t)=>{const i=e._mediaStreamTrack,n=this.sessionDesc.mediaDescriptions.findIndex((e=>e.attributes.mid===i.kind)),r=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[n],e);this.sessionDesc.mediaDescriptions[n]=r}))}stopReceiving(e){}updateCandidates(e){e===uI.TCP?this.candidates.forEach((e=>{-1===this.candidates.findIndex((t=>\"tcp\"===t.transport&&t.connectionAddress===e.connectionAddress&&t.port===e.port))&&this.candidates.push(uL(uL({},e),{},{foundation:\"tcpcandidate\",priority:Number(e.priority)-1+\"\",transport:\"tcp\",port:Number(e.port)+90+\"\"}))})):this.candidates=this.candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=bT(e),this.iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}mungRecvMediaDsec(e,t){const i=bT(e);return $P(i,t),tL(i,t),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}updateTrackLabel(e,t,i){const n=this.sessionDesc.mediaDescriptions.find((t=>e===hI.VIDEO?\"video\"===t.attributes.mid:\"audio\"===t.attributes.mid));if(n){const e=n.attributes.ssrcs.find((e=>e.attributes.label===t));var r;e&&(e.attributes.label=i,null===(r=e.attributes.msid)||void 0===r||r.replace(t,i))}}mungMediaDesc(e){const t=bT(e);return eL(t),function(e){const t=e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));t&&e.attributes.extmaps.splice(e.attributes.extmaps.indexOf(t),1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}(t),t}getSSRC(e){for(const t of this.sessionDesc.mediaDescriptions)for(const i of t.attributes.ssrcs)if(i.attributes.label===e)return[i]}}({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:n.send,remoteSetup:r,localCapabilities:this.localCapabilities,sdkCodec:this.store.codec,cname:s});const o=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(this.initialOffer),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async updateRemoteRTPCapabilities(e,t){throw new Vg(xg.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}send(e,t){var i=this;return BP((function*(){const n=yield jP(i.mutex.lock());try{if(!i.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const r=e.map((e=>i.peerConnection.addTrack(e._mediaStreamTrack))),s=yield jP(i.peerConnection.createOffer()),o=KP.parse(s.sdp),a=e.map((e=>{const t=e._mediaStreamTrack,n=o.mediaDescriptions.find((e=>e.attributes.mid===t.kind));if(!n)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return function(e,t,i){const n=e.attributes.ssrcs.filter((e=>e.attributes.label===t)),r=e.attributes.ssrcGroups;if(0===n.length)throw new Error(\"Cannot extract ssrc from plan-b SDP.\");if(r&&n.length>1){const e=r.find((e=>-1!==e.ssrcIds.indexOf(n[0].ssrcId)));return e?[{ssrcId:e.ssrcIds[0],rtx:i?e.ssrcIds[1]:void 0}]:[{ssrcId:n[0].ssrcId}]}return[{ssrcId:n[0].ssrcId}]}(n,t.id,i.useRTX)}));let c;try{c=yield a}catch(e){throw r.forEach((e=>{Sg()&&e.replaceTrack(null),i.peerConnection.removeTrack(e)})),e}const d=i.mungSendOfferSDP(s.sdp,e);i.remoteSDP.receive(e,t,c);const l=i.remoteSDP.toString();return yield jP(i.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield jP(i.applySendEncodings(r,e)),yield jP(i.peerConnection.setRemoteDescription({type:\"answer\",sdp:l})),e.map(((e,t)=>{const i=e._mediaStreamTrack.id;return{localSSRC:a[t],id:i}}))}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{n()}}))()}async stopSending(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{Sg()&&e.replaceTrack(null),this.peerConnection.removeTrack(e)}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i),this.remoteSDP.stopReceiving(e);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{id:i,mslabel:r}=this.remoteSDP.send(e,t,n),s=new tg(((t,n)=>{const s=setTimeout((()=>{n(new Error(\"Cannot receive track, id: \".concat(i)))}),1e4),o=n=>{const a=pg();if((\"Safari\"===a.name&&11===Number(a.version)||Cg())&&n.track.id!==i&&n.streams[0].id===r){var c;const r=n.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(e,i,n.track.id),this.peerConnection.removeEventListener(\"track\",o),clearTimeout(s),void t(r)}if(n.track.id===i)return this.peerConnection.removeEventListener(\"track\",o),clearTimeout(s),void t(n.track)};this.peerConnection.addEventListener(\"track\",o)})),o=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:o});const a=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(a);return{track:await s,id:i}}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const i=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(i)}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){}async unmuteRemote(e){}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"sender' length doesn't match mids' length.\");t.map((e=>{if(Sg()&&e.track)e.track.enabled=!1;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!1)),e.setParameters(t)}}))}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Senders' length doesn't match mids' length.\");t.map((async e=>{if(Sg()&&e.track)e.track.enabled=!0;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!0)),await e.setParameters(t)}}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return BP((function*(){const i=yield jP(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(_A().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===uI.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(KC.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===uI.RELAY)return;e!==uI.RELAY&&t.remoteSDP.updateCandidates(e);const n=yield jP(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=zP(n.sdp),{remoteIceParameters:s}=yield r.iceParameters;t.remoteSDP.restartICE(s);const o=t.remoteSDP.toString();yield jP(t.peerConnection.setLocalDescription(n)),yield jP(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){KC.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const e=await this.peerConnection.createOffer(),i=this.mungSendOfferSDP(e.sdp,[t]);this.remoteSDP.updateRecvMedia(t._mediaStreamTrack.kind,t);const n=this.remoteSDP.toString();await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getSenders().filter((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e}));1===i.length&&await this.applySendEncodings(i,[t])}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getSenders().find((e=>{var i;return(null===(i=e.track)||void 0===i?void 0:i.id)===t}));i&&await i.replaceTrack(e._mediaStreamTrack)}createDataChannels(e,t){throw new Vg(xg.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}stopDataChannels(e){throw new Vg(xg.NOT_SUPPORTED,\"Planb mode does not support stopDataChannels.\")}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),kC(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(e){const t={iceServers:[],sdpSemantics:\"plan-b\"};return e.iceServers?t.iceServers=e.iceServers:e.turnServer&&\"off\"!==e.turnServer.mode&&(_T(e.turnServer.servers)?t.iceServers=e.turnServer.servers:(t.iceServers&&t.iceServers.push(...ML.turnServerConfigToIceServers(e.turnServer.servers)),kC(\"USE_TURN_SERVER_OF_GATEWAY\")&&t.iceServers&&e.turnServer.serversFromGateway&&t.iceServers.push(...ML.turnServerConfigToIceServers(e.turnServer.serversFromGateway)),e.turnServer.servers.concat(e.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(t.iceTransportPolicy=\"relay\")})))),t}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e._mediaStreamTrack.id}))}if(!t)return KC.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(!_A().supportSetRtpSenderParameters)return KC.warn(\"Browser not support set rtp-sender parameters\");const n={},r={};if(e instanceof Sb)switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(kC(\"DSCP_TYPE\")&&kg()){var s;const e=kC(\"DSCP_TYPE\");Pr(s=[\"very-low\",\"low\",\"medium\",\"high\"]).call(s,e)&&(r.networkPriority=e)}const o=t.getParameters(),a=null===(i=o.encodings)||void 0===i?void 0:i[0];a&&Object.assign(a,r),Object.assign(o,n),KC.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(o.encodings))),await t.setParameters(o)}async applySendEncodings(e,t){try{if(!_A().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];n&&r&&await this.updateRtpSenderEncodings(r,n)}}catch(e){KC.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t){const i=KP.parse(e);return t.forEach(((e,t)=>{const n=e._mediaStreamTrack,r=i.mediaDescriptions.find((e=>e.attributes.mid===n.kind));r&&$P(r,e)})),KP.print(i)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const t=this.remoteSDP.batchSend(e).map(((t,i)=>{let{id:n,mslabel:r}=t;const{kind:s}=e[i];return new tg(((e,t)=>{const i=setTimeout((()=>{t(new Error(\"Cannot receive track, id: \".concat(n)))}),1e4),o=t=>{const a=pg();if(\"Safari\"===a.name&&11===Number(a.version)&&t.track.id!==n&&t.streams[0].id===r){var c;const r=t.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(s,n,t.track.id),this.peerConnection.removeEventListener(\"track\",o),clearTimeout(i),void e({track:r,id:n})}if(t.track.id===n)return this.peerConnection.removeEventListener(\"track\",o),clearTimeout(i),void e({track:t.track,id:n})};this.peerConnection.addEventListener(\"track\",o)}))})),i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:i});const n=await this.peerConnection.createAnswer();return await this.peerConnection.setLocalDescription(n),await tg.all(t)}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}setConfiguration(e){if(_A().supportPCSetConfiguration){const t=ML.resolvePCConfiguration(e);this.peerConnection.setConfiguration(t)}}}function UL(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"Locking from P2PConnection.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}function xL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function VL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?xL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):xL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],ML.prototype,\"connect\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],ML.prototype,\"stopSending\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Array,String,Object]),Uv(\"design:returntype\",tg)],ML.prototype,\"receive\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],ML.prototype,\"stopReceiving\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],ML.prototype,\"muteRemote\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],ML.prototype,\"unmuteRemote\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],ML.prototype,\"muteLocal\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],ML.prototype,\"unmuteLocal\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],ML.prototype,\"close\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],ML.prototype,\"updateEncoderConfig\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],ML.prototype,\"updateSendParameters\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[iA,String]),Uv(\"design:returntype\",tg)],ML.prototype,\"replaceTrack\",null),Mv([UL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],ML.prototype,\"getRemoteSSRC\",null);const FL=\"9\",BL=4e4;function jL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function GL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?jL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):jL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let WL=class e extends PI{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}constructor(t,i){super(t,i),nu(this,\"store\",void 0),nu(this,\"peerConnection\",void 0),nu(this,\"remoteSDP\",void 0),nu(this,\"initialOffer\",void 0),nu(this,\"transportEventReceiver\",void 0),nu(this,\"statsFilter\",void 0),nu(this,\"useXR\",kC(\"USE_XR\")),nu(this,\"localCapabilities\",void 0),nu(this,\"remoteCodecs\",void 0),nu(this,\"localCandidateCount\",0),nu(this,\"allCandidatesReceived\",!1),nu(this,\"dataStreamChannelMap\",new Map),nu(this,\"establishPromise\",void 0),nu(this,\"mutex\",new YT(\"P2PConnection-mutex\")),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=PL(this.peerConnection,kC(\"STATS_UPDATE_INTERVAL\"),void 0,Rg()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}async updateRemoteRTPCapabilities(e,t){this.remoteCodecs=t;const i=[...new Set(this.localCapabilities&&this.localCapabilities.send.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Pr(t=Object.keys(UC)).call(t,e)})))];if(rv.updateRemoteRTPCapabilities(this.store.sessionId,{mids:e,localCodecs:i,remoteCodecs:this.remoteCodecs}),!this.remoteSDP)return void KC.debug(\"[P2PConnection] cannot updateRemoteRTPCapabilities before remote SDP created, local codecs: \".concat(i,\", codecs: \").concat(t));if(this.remoteSDP.updateRemoteCodec(e,t,this.store.codec)){const e=await this.peerConnection.createOffer(),t=this.logSDPExchange(e.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(e);const i=this.remoteSDP.toString();null==t||t(i),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:i})}else KC.debug(\"[P2PConnection] updateRemoteRTPCapabilities no need to exchange SDP.\")}async establish(){try{this.peerConnection.addTransceiver(\"video\",{direction:\"recvonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"recvonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=zP(e.sdp),i=await sL({filterRTX:!kC(\"USE_PUB_RTX\")&&!kC(\"USE_SUB_RTX\"),filterVideoFec:kC(\"FILTER_VIDEO_FEC\"),filterAudioFec:kC(\"FILTER_AUDIO_FEC\"),filterVideoCodec:kC(\"FILTER_VIDEO_CODEC\")},{useXR:this.useXR});return this.localCapabilities=aL(i),this.initialOffer=e,GL(GL({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new Vg(xg.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,n,r,s){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new class{get localCapabilities(){return bT(this._localCapabilities)}get rtpCapabilities(){return bT(this._rtpCapabilities)}get candidates(){return bT(this._candidates)}get iceParameters(){return bT(this._iceParameters)}get dtlsParameters(){return bT(this._dtlsParameters)}constructor(e){nu(this,\"sessionDesc\",void 0),nu(this,\"_localCapabilities\",void 0),nu(this,\"_rtpCapabilities\",void 0),nu(this,\"_candidates\",void 0),nu(this,\"_iceParameters\",void 0),nu(this,\"_dtlsParameters\",void 0),nu(this,\"setup\",void 0),nu(this,\"currentMidIndex\",void 0),nu(this,\"cname\",void 0),nu(this,\"firefoxSsrcMidMap\",new Map),e=bT(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:n,remoteRTPCapabilities:r,remoteSetup:s,localCapabilities:o,cname:a}=e,c=KP.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=ice-lite\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\");this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=o,this.setup=s,this.cname=a;const d=this.rtpCapabilities.send;for(const e of c.mediaDescriptions){if(e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=n,e.attributes.setup=s,\"video\"===e.media.mediaType&&(e.media.fmts=d.videoCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=d.videoCodecs,e.attributes.extmaps=d.videoExtensions,kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:BL,rtx:kC(\"USE_SUB_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=d.audioCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=d.audioCodecs,e.attributes.extmaps=d.audioExtensions,cL(e),kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:2e4}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=c,this.currentMidIndex=c.mediaDescriptions.length-1}preloadRemoteMedia(){const e=kC(\"PRELOAD_MEDIA_COUNT\");this.rtpCapabilities;const t=this.candidates,i=this.dtlsParameters,n=this.iceParameters,r=this.rtpCapabilities.send;for(let s=1;s<e;s++){const e=2*s+2e4,o=2*s+BL,{ssrcs:a,ssrcGroups:c}=ZP([{ssrcId:e}],this.cname),{ssrcs:d,ssrcGroups:l}=ZP([{ssrcId:o,rtx:kC(\"USE_SUB_RTX\")?o+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:FL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.videoCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:d,ssrcGroups:l,rtcpFeedbackWildcards:[],payloads:r.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*s)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:FL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.audioCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:a,ssrcGroups:c,rtcpFeedbackWildcards:[],payloads:r.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*s+1)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return KP.print(this.sessionDesc)}send(e,t,i,n){const{ssrcs:r,ssrcGroups:s}=ZP(t,this.cname,kC(\"SYNC_GROUP\")?i:void 0),o=this.findPreloadMediaDesc(r);if(o){if(Rg()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,o.attributes.mid),n&&(n.twcc||n.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(o);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(o,n),{mid:o.attributes.mid,needExchangeSDP:!0}}return{mid:o.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,r);let i;return-1===t||1===t&&(Sg()||Ag())||0===t&&kC(\"USE_SUB_RTX\")||bg()?(i=this.createOrRecycleSendMedia(e,r,s,\"sendonly\",n),this.updateBundleMids()):(i=bT(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=r,i.attributes.ssrcGroups=s,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,n)),Rg()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,i.attributes.mid),{mid:i.attributes.mid,needExchangeSDP:!0}}}sendDataChannel(){const{mediaDesc:e,needExchangeSDP:t}=this.createOrRecycleDataChannel();return this.updateBundleMids(),{mid:e.attributes.mid,needExchangeSDP:t}}batchSend(e){const t=e.map((e=>{let{kind:t,ssrcMsg:i,mslabel:n}=e;return this.send(t,i,n)})),i=[];let n=!1;return t.forEach((e=>{let{mid:t,needExchangeSDP:r}=e;r&&(n=!0),i.push(t)})),{mids:i,needExchangeSDP:n}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{\"0\"===e.attributes.mid||Rg()||bg()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")})),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Pr(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Pr(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}receive(e,t,i,n){e.forEach(((e,r)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,n[r])})),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}updateCandidates(e){const t=this._candidates.filter((e=>\"udp\"===e.transport));if(e===uI.TCP){if(0===t.length)return;if(kC(\"TCP_CANDIDATE_ONLY\")){const e=this._candidates.filter((e=>\"tcp\"===e.transport));t.forEach((t=>{-1===e.findIndex((e=>e.connectionAddress===t.connectionAddress))&&e.push(VL(VL({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=e}else{const e=[];t.forEach((t=>{e.push(VL(VL({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=[...t,...e]}}else if(e===uI.RELAY){if(0!==t.length)return;{const e=this._candidates.filter((e=>\"tcp\"===e.transport));e.forEach((e=>{t.push(VL(VL({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=[...t,...e]}}else 0===t.length?(this._candidates.filter((e=>\"tcp\"===e.transport)).forEach((e=>{t.push(VL(VL({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=t):this._candidates=this._candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=bT(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex((i=>{const n=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(Rg()){if(n){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return n}))}createOrRecycleDataChannel(){for(const e of this.sessionDesc.mediaDescriptions)if(\"application\"===e.media.mediaType)return{mediaDesc:e,needExchangeSDP:!1};this.currentMidIndex+=1;const e=\"\".concat(this.currentMidIndex),t={media:{mediaType:\"application\",port:FL,protos:[\"UDP\",\"DTLS\",\"SCTP\"],fmts:[\"webrtc-datachannel\"]},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:[],fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[],rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,mid:\"\".concat(e),sctpPort:\"5000\"}};return this.sessionDesc.mediaDescriptions.push(t),{mediaDesc:t,needExchangeSDP:!0}}createOrRecycleRecvMedia(e,t,i,n,r,s){const o=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=lL(o,a,this.localCapabilities.send,o===hI.VIDEO?n:r),d=o===hI.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let h={media:{mediaType:o,port:FL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:c.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:d,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:c,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};h=this.mungRecvMediaDsec(h,e,s);const u=this.findFirstClosedMedia(o);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=h}else this.sessionDesc.mediaDescriptions.push(h);return h}updateRemoteCodec(e,t,i){const n=[...new Set(this._rtpCapabilities.recv.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Pr(t=Object.keys(UC)).call(t,e)})))],r=new Set(t);if(n.every((e=>r.has(e))))return KC.debug(\"codecs has not changed, no need to updateRemoteCodec, codecs: \".concat(t)),!1;const s=this._rtpCapabilities.recv.videoCodecs.filter((e=>t.some((t=>{var i;return Pr(i=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(i,t)}))));if(0===s.length)return KC.debug(\"updateRemoteCodec failed, because cannot find matched codec, remoteCapabilities codecs: \".concat(n,\" codecs: \").concat(t)),!1;const o=[...new Set(s.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")))];let a;if(KC.debug(\"updateRemoteCodec, from \".concat(n,\" to \").concat(o)),0===e.length)a=this.sessionDesc.mediaDescriptions.filter((e=>\"video\"===e.media.mediaType&&\"recvonly\"===e.attributes.direction));else if(a=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&Pr(e).call(e,t.attributes.mid)&&\"recvonly\"===t.attributes.direction)),a.length!==e.length)return KC.debug(\"updateRemoteCodec failed, because cannot find mids, mids: \".concat(e,\", codecs: \").concat(t)),!1;this._rtpCapabilities.recv.videoCodecs=s;const c=this.localCapabilities.send,d=this.rtpCapabilities.recv,l=lL(hI.VIDEO,d,c,i);return a.forEach((e=>{const t=l.map((e=>e.payloadType.toString(10)));KC.debug(\"updateRemoteCodec mid: \".concat(e.attributes.mid,\", from \").concat(e.attributes.payloads,\" to \").concat(l)),e.attributes.payloads=l,e.media.fmts=t})),!0}createOrRecycleSendMedia(e,t,i,n,r){const s=this.rtpCapabilities.send,o=e===hI.VIDEO?s.videoCodecs:s.audioCodecs,a=e===hI.VIDEO?s.videoExtensions:s.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:FL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:o.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:o,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,r);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}mungRecvMediaDsec(e,t,i){const n=bT(e);return eL(n),$P(n,t),tL(n,t),iL(n),nL(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=bT(e);return nL(i,t,this.localCapabilities.recv),cL(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>Rg()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===t?void 0:t.attributes.ssrcs}}({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:n,remoteSetup:r,localCapabilities:this.localCapabilities,cname:s}),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0&&this.remoteSDP.updateRemoteCodec([],this.remoteCodecs,this.store.codec);const o=this.remoteSDP.toString(),a=KP.parse(this.initialOffer.sdp),c=a.mediaDescriptions.find((e=>\"audio\"===e.media.mediaType));c&&cL(c),this.useXR&&dL(a);const d=KP.print(a),l=this.logSDPExchange(d||\"\",\"offer\",\"local\",\"connect\");this.store.descriptionStart(),await this.peerConnection.setLocalDescription({type:\"offer\",sdp:d}),null==l||l(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o});const h=this.peerConnection.getTransceivers()[0];if(null!=h&&h.receiver&&this.tryBindTransportEvents(h.receiver),kC(\"PRELOAD_MEDIA_COUNT\")>0){this.remoteSDP.preloadRemoteMedia();const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t)}}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}send(e,t,i){var n=this;return BP((function*(){const r=yield jP(n.mutex.lock(\"From P2PConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const s=[];e.forEach((e=>{const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});s.push(t),e._updateRtpTransceiver(t)})),Rg()&&!0===kC(\"SIMULCAST\")&&(yield jP(n.applySimulcastForFirefox(s,e)));const o=yield jP(n.peerConnection.createOffer()),a=n.remoteSDP.predictReceivingMids(e.length),c=n.mungSendOfferSDP(o.sdp,e,a),d=KP.parse(c),l=a.map((e=>{const t=d.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return XP(t,kC(\"USE_PUB_RTX\"))}));let h;try{h=yield l}catch(r){h=[],n.remoteSDP.receive(e,t,i,h);const s=n.remoteSDP.toString();throw yield jP(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield jP(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})),yield jP(n.stopSending(a,!0)),r}n.remoteSDP.receive(e,t,i,h);const u=n.remoteSDP.toString(),p=n.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield jP(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield jP(n.applySimulcastEncodings(s,e)),yield jP(n.applySendEncodings(s,e)),null==p||p(u),yield jP(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:u})),s.map(((e,t)=>{const i=a[t];return{localSSRC:l[t],id:i,transceiver:e}}))}catch(e){throw e instanceof Vg?e:new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async createDataChannels(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.createDataChannels before remote SDP created\");let i=this.dataStreamChannelMap.get(e);i&&\"open\"===i.readyState?KC.debug(\"[P2PConnection] Channels are already available and can be reused directly.\"):(i=this.peerConnection.createDataChannel(\"datastream-channel\",{ordered:!1,maxRetransmits:kC(\"DATASTREAM_MAX_RETRANSMITS\")}),i.binaryType=\"arraybuffer\",this.dataStreamChannelMap.set(e,i)),t.forEach((e=>{e._updateOriginDataChannel(i)}));const{needExchangeSDP:n}=this.remoteSDP.sendDataChannel();if(n){const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t),KC.debug(\"[P2PConnection] createDataChannels by exchanging SDP.\")}else KC.debug(\"[P2PConnection] createDataChannels no need to exchange SDP.\");return}catch(e){throw e instanceof Vg?e:new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.createDataChannels failed; \".concat(e.toString()))}}async stopDataChannels(e){try{const t=this.dataStreamChannelMap.get(e);return null==t||t.close(),void this.dataStreamChannelMap.delete(e)}catch(e){throw e instanceof Vg?e:new Vg(xg.DATACHANNEL_FAILED,\"P2PConnection.stopDataChannels failed; \".concat(e.toString()))}}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const s=this.remoteSDP.toString();null==r||r(s),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:s}=this.remoteSDP.send(e,t,i,n);if(s){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),s=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(s||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:s}),KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"))}else KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" no need to exchange SDP.\"));const o=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:o.receiver.track,id:r,transceiver:o}}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);if(i){const e=this.remoteSDP.toString(),t=this.logSDPExchange(e,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const i=await this.peerConnection.createAnswer();null==t||t(i.sdp||\"\"),await this.peerConnection.setLocalDescription(i),KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] batchReceive by exchanging SDP.\"))}else KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] batchReceive no need to exchange SDP.\"));return t.map((e=>{const t=this.peerConnection.getTransceivers().find((t=>t.mid===e));if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e,transceiver:t}}))}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async(e,t)=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return BP((function*(){const i=yield jP(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(_A().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===uI.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(KC.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===uI.RELAY)return;t.remoteSDP.updateCandidates(e);const n=yield jP(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=zP(n.sdp),{remoteIceParameters:s}=yield r.iceParameters;t.remoteSDP.restartICE(s);const o=t.remoteSDP.toString(),a=t.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"restartICE\");t.store.descriptionStart(),yield jP(t.peerConnection.setLocalDescription(n)),null==a||a(o),yield jP(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){KC.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy(),this.dataStreamChannelMap.clear()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),s=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==s||s(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?Rg()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:GL(GL({},mL),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:GL(GL({},mL),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),kC(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(_T(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),kC(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),kC(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")})))),kC(\"ENABLE_ENCODED_TRANSFORM\")&&_A().supportWebRTCEncodedTransform&&(i.encodedInsertableStreams=!0),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(_D(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!kC(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}tryBindTransportEvents(e){const t=e.transport;if(t){this.transportEventReceiver=e,t.onstatechange=()=>{var e;null!=t&&t.state&&(null===(e=this.onDTLSTransportStateChange)||void 0===e||e.call(this,t.state))},t.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const i=t.iceTransport;i&&(i.onstatechange=()=>{const e=null==t?void 0:t.iceTransport.state;var i;e&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,e))},i.getSelectedCandidatePair&&(i.onselectedcandidatepairchange=()=>{if(i.getSelectedCandidatePair()){const{local:e,remote:t}=i.getSelectedCandidatePair();KC.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:t.type,protocol:t.protocol,address:t.address,port:t.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>t.track===e._mediaStreamTrack))}if(!t)return KC.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return KC.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!_A().supportSetRtpSenderParameters)return KC.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const n={},r={};switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(e._encoderConfig){var s;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(r.maxBitrate=1e3*t),(Pr(s=e._hints).call(s,ky.LOW_STREAM)||e.isUseScaleResolutionDownBy)&&(i&&(r.maxFramerate=mD(i)),n&&n>=1&&(r.scaleResolutionDownBy=n))}if(kC(\"DSCP_TYPE\")&&kg()){var o;const e=kC(\"DSCP_TYPE\");Pr(o=[\"very-low\",\"low\",\"medium\",\"high\"]).call(o,e)&&(r.networkPriority=e)}const a=t.getParameters(),c=null===(i=a.encodings)||void 0===i?void 0:i[0];Rg()&&!c&&(n.encodings=[r]),c&&Object.assign(c,r),Object.assign(a,n),KC.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(a.encodings))),await t.setParameters(a)}async applySendEncodings(e,t){try{if(!_A().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof Sb&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){KC.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=KP.parse(e);return t.forEach(((e,t)=>{const r=i[t],s=n.mediaDescriptions.find((e=>e.attributes.mid===r));s&&($P(s,e),rL(s,e,this.store.codec))})),KP.print(n)}mungReceiveAnswerSDP(e,t,i){const n=KP.parse(e),r=n.mediaDescriptions.find((e=>e.attributes.mid===t));return r&&(i===hI.AUDIO&&\"audio\"===r.media.mediaType&&cL(r),this.useXR&&dL(n)),KP.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,s,o;const c=e[a],d=t[a];if(d instanceof Sb&&!Pr(i=d._hints).call(i,ky.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(s=d._scalabilityMode)&&void 0!==s&&s.numSpatialLayers&&(null===(o=d._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!Rg()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof Sb&&this.isVP8Simulcast(n)){const t=e[i],r={},s={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:s.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:s.medium,scaleResolutionDownBy:4}];const o=t.sender.getParameters();await t.sender.setParameters(Object.assign(o,r))}}}isVP8Simulcast(e){var t,i,n,r,s;return!!(e instanceof Sb&&kC(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Pr(t=e._hints).call(t,ky.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(s=e._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(kC(\"SDP_LOGGING\"))return KC.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}setConfiguration(t){if(_A().supportPCSetConfiguration){const i=e.resolvePCConfiguration(t);this.peerConnection.setConfiguration(i)}}};function HL(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}function KL(e,t){let i=document.createElement(\"video\"),n=document.createElement(\"canvas\");i.setAttribute(\"style\",\"display:none\"),n.setAttribute(\"style\",\"display:none\"),i.setAttribute(\"muted\",\"\"),i.muted=!0,i.setAttribute(\"autoplay\",\"\"),i.autoplay=!0,i.setAttribute(\"playsinline\",\"\"),n.width=mD(t.width),n.height=mD(t.height);const r=mD(t.framerate||15);document.body.append(i),document.body.append(n);let s=e._mediaStreamTrack;i.srcObject=new MediaStream([s]),i.play();const o=n.getContext(\"2d\");if(!o)throw new xv(xg.UNEXPECTED_ERROR,\"can not get canvas context\");const a=_A(),c=n.captureStream(a.supportRequestFrame?0:r).getVideoTracks()[0];c.canvas||(c.canvas=n),n.startCapture=()=>{if(!i)return n.stopCapture&&n.stopCapture();if(i.paused&&i.play(),i.videoHeight>2&&i.videoWidth>2){const e=i.videoWidth,t=i.videoHeight/e,r=n.width*t;Math.abs(r-n.height)>=2&&(KC.debug(\"adjust low stream resolution\",\"\".concat(n.width,\"x\").concat(n.height,\" -> \").concat(n.width,\"x\").concat(r)),n.height=r)}o.drawImage(i,0,0,n.width,n.height),c.requestFrame&&c.requestFrame(),s!==e._mediaStreamTrack&&(s=e._mediaStreamTrack,i.srcObject=new MediaStream([s]))},n.stopCapture=uA((()=>n.startCapture&&n.startCapture()),r);const d=c.stop;return c.stop=()=>{d.call(c),i&&(i.remove(),i.srcObject=null,i=null),n&&(n.width=0,n.remove(),n.stopCapture&&n.stopCapture(),n.startCapture=void 0,n.stopCapture=void 0,n=null),KC.debug(\"clean low stream renderer\")},c}function YL(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function qL(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?YL(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):YL(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array,Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"updateRemoteRTPCapabilities\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],WL.prototype,\"connect\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"createDataChannels\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Array,String,Object]),Uv(\"design:returntype\",tg)],WL.prototype,\"receive\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"batchReceive\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"stopReceiving\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],WL.prototype,\"muteRemote\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],WL.prototype,\"unmuteRemote\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"muteLocal\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],WL.prototype,\"unmuteLocal\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],WL.prototype,\"close\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],WL.prototype,\"updateEncoderConfig\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],WL.prototype,\"updateSendParameters\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[iA,String]),Uv(\"design:returntype\",tg)],WL.prototype,\"replaceTrack\",null),Mv([HL,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],WL.prototype,\"getRemoteSSRC\",null);const JL=\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0\\na=msid-semantic: WMS\\na=ice-lite\\nm=application 9 UDP/DTLS/SCTP webrtc-datachannel\\nc=IN IP4 127.0.0.1\\na=mid:0\\n\",zL=\"9\",XL=2e4,QL=4e4;class ZL{get localCapabilities(){return bT(this._localCapabilities)}get rtpCapabilities(){return bT(this._rtpCapabilities)}get candidates(){return bT(this._candidates)}get iceParameters(){return bT(this._iceParameters)}get dtlsParameters(){return bT(this._dtlsParameters)}constructor(e){nu(this,\"sessionDesc\",void 0),nu(this,\"_localCapabilities\",void 0),nu(this,\"_rtpCapabilities\",void 0),nu(this,\"_candidates\",void 0),nu(this,\"_iceParameters\",void 0),nu(this,\"_dtlsParameters\",void 0),nu(this,\"setup\",void 0),nu(this,\"currentMidIndex\",void 0),nu(this,\"cname\",void 0),nu(this,\"firefoxSsrcMidMap\",new Map),e=bT(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:n,remoteRTPCapabilities:r,remoteSetup:s,localCapabilities:o,cname:a}=e,c=KP.parse(JL);this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=o,this.setup=s,this.cname=a;const d=this.rtpCapabilities.send;for(const e of c.mediaDescriptions){if(e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=n,e.attributes.setup=s,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=d.videoCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=d.videoCodecs,e.attributes.extmaps=d.videoExtensions,kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:QL,rtx:kC(\"USE_SUB_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=d.audioCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=d.audioCodecs,e.attributes.extmaps=d.audioExtensions,cL(e),kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:XL}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=c,this.currentMidIndex=c.mediaDescriptions.length-1}updateRemoteRTPCapabilities(e){const t=KP.parse(JL);this._rtpCapabilities=e;const i=this.rtpCapabilities.send;for(const e of t.mediaDescriptions){if(e.attributes.iceUfrag=this._iceParameters.iceUfrag,e.attributes.icePwd=this._iceParameters.icePwd,e.attributes.fingerprints=this._dtlsParameters.fingerprints,e.attributes.candidates=this._candidates,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=i.videoCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.videoCodecs,e.attributes.extmaps=i.videoExtensions,kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:QL,rtx:kC(\"USE_SUB_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=i.audioCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.audioCodecs,e.attributes.extmaps=i.audioExtensions,kC(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=ZP([{ssrcId:XL}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=t,this.currentMidIndex=t.mediaDescriptions.length-1}preloadRemoteMedia(e){this.rtpCapabilities;const t=this.candidates,i=this.dtlsParameters,n=this.iceParameters,r=this.rtpCapabilities.send;for(let s=1;s<e;s++){const e=2*s+XL,o=2*s+QL,{ssrcs:a,ssrcGroups:c}=ZP([{ssrcId:e}],this.cname),{ssrcs:d,ssrcGroups:l}=ZP([{ssrcId:o,rtx:kC(\"USE_SUB_RTX\")?o+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:zL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.videoCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:d,ssrcGroups:l,rtcpFeedbackWildcards:[],payloads:r.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*s-1)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:zL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.audioCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:a,ssrcGroups:c,rtcpFeedbackWildcards:[],payloads:r.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*s)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return KP.print(this.sessionDesc)}send(e,t,i,n){const{ssrcs:r,ssrcGroups:s}=ZP(t,this.cname,kC(\"SYNC_GROUP\")?i:void 0),o=this.findPreloadMediaDesc(r);if(o){if(Rg()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,o.attributes.mid),n&&(n.twcc||n.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(o);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(o,n),{mid:o.attributes.mid,needExchangeSDP:!0}}return{mid:o.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,r);let i;return-1===t||Sg()||Cg()||Ag()||0===t&&kC(\"USE_SUB_RTX\")?(i=this.createOrRecycleSendMedia(e,r,s,\"sendonly\",n),this.updateBundleMids()):(i=bT(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=r,i.attributes.ssrcGroups=s,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,n)),Rg()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,i.attributes.mid),{mid:i.attributes.mid,needExchangeSDP:!0}}}batchSend(e){const t=e.map((e=>{let{kind:t,ssrcMsg:i,mslabel:n}=e;return this.send(t,i,n)})),i=[];let n=!1;return t.forEach((e=>{let{mid:t,needExchangeSDP:r}=e;r&&(n=!0),i.push(t)})),{mids:i,needExchangeSDP:n}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{\"0\"===e.attributes.mid||Rg()||Sg()||Cg()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")})),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Pr(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Pr(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}receive(e,t,i,n){e.forEach(((e,r)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,n[r])})),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}updateCandidates(e){e===uI.TCP?this._candidates.forEach((e=>{-1===this._candidates.findIndex((t=>\"tcp\"===t.transport&&t.connectionAddress===e.connectionAddress&&t.port===e.port))&&this._candidates.push(qL(qL({},e),{},{foundation:\"tcpcandidate\",priority:Number(e.priority)-1+\"\",transport:\"tcp\",port:Number(e.port)+90+\"\"}))})):this._candidates=this._candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=bT(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex((i=>{const n=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(Rg()){if(n){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return n}))}createOrRecycleRecvMedia(e,t,i,n,r,s){const o=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=lL(o,a,this.localCapabilities.send,o===hI.VIDEO?n:r),d=o===hI.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let h={media:{mediaType:o,port:zL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:c.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:d,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:c,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};h=this.mungRecvMediaDsec(h,e,s);const u=this.findFirstClosedMedia(o);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=h}else this.sessionDesc.mediaDescriptions.push(h);return h}updateRemoteCodec(e,t,i){const n=[...new Set(this._rtpCapabilities.recv.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Pr(t=Object.keys(UC)).call(t,e)})))],r=new Set(t);if(n.every((e=>r.has(e))))return KC.debug(\"codecs has not changed, no need to updateRemoteCodec, codecs: \".concat(t)),!1;const s=this._rtpCapabilities.recv.videoCodecs.filter((e=>t.some((t=>{var i;return Pr(i=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(i,t)}))));if(0===s.length)return KC.debug(\"updateRemoteCodec failed, because cannot find matched codec, remoteCapabilities codecs: \".concat(n,\" codecs: \").concat(t)),!1;const o=[...new Set(s.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")))];let a;if(KC.debug(\"updateRemoteCodec, from \".concat(n,\" to \").concat(o)),0===e.length)a=this.sessionDesc.mediaDescriptions.filter((e=>\"video\"===e.media.mediaType&&\"recvonly\"===e.attributes.direction));else if(a=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&Pr(e).call(e,t.attributes.mid)&&\"recvonly\"===t.attributes.direction)),a.length!==e.length)return KC.debug(\"updateRemoteCodec failed, because cannot find mids, mids: \".concat(e,\", codecs: \").concat(t)),!1;this._rtpCapabilities.recv.videoCodecs=s;const c=this.localCapabilities.send,d=this.rtpCapabilities.recv,l=lL(hI.VIDEO,d,c,i);return a.forEach((e=>{const t=l.map((e=>e.payloadType.toString(10)));KC.debug(\"updateRemoteCodec mid: \".concat(e.attributes.mid,\", from \").concat(e.attributes.payloads,\" to \").concat(l)),e.attributes.payloads=l,e.media.fmts=t})),!0}createOrRecycleSendMedia(e,t,i,n,r){const s=this.rtpCapabilities.send,o=e===hI.VIDEO?s.videoCodecs:s.audioCodecs,a=e===hI.VIDEO?s.videoExtensions:s.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:zL,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:o.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:o,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,r);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}mungRecvMediaDsec(e,t,i){const n=bT(e);return eL(n),$P(n,t),tL(n,t),iL(n),nL(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=bT(e);return nL(i,t,this.localCapabilities.recv),cL(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>Rg()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===t?void 0:t.attributes.ssrcs}}function $L(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function ek(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?$L(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):$L(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class tk extends PI{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(e,t,i){super(e,t),nu(this,\"store\",void 0),nu(this,\"peerConnection\",void 0),nu(this,\"remoteSDP\",void 0),nu(this,\"initialOffer\",void 0),nu(this,\"transportEventReceiver\",void 0),nu(this,\"statsFilter\",void 0),nu(this,\"useXR\",kC(\"USE_XR\")),nu(this,\"localCapabilities\",void 0),nu(this,\"localCandidateCount\",0),nu(this,\"allCandidatesReceived\",!1),nu(this,\"remoteCodecs\",void 0),nu(this,\"dataStreamChannelMap\",new Map),nu(this,\"establishPromise\",void 0),nu(this,\"mutex\",new YT(\"NVExtentionsConnection-mutex\")),nu(this,\"rtcMedia\",void 0),this.store=t,this.peerConnection=i,this.statsFilter=PL(this.peerConnection,kC(\"STATS_UPDATE_INTERVAL\"),void 0,Rg()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}async establish(e){try{const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=zP(e.sdp),i=await sL({filterRTX:!kC(\"USE_PUB_RTX\")&&!kC(\"USE_SUB_RTX\"),filterVideoFec:kC(\"FILTER_VIDEO_FEC\"),filterAudioFec:kC(\"FILTER_AUDIO_FEC\"),filterVideoCodec:kC(\"FILTER_VIDEO_CODEC\")},{useXR:this.useXR});return this.localCapabilities=i,this.initialOffer=e,ek(ek({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new xv(xg.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,n,r,s){try{if(!this.initialOffer)throw new Error(\"Cannot establish NVConnection without initial offer.\");this.remoteSDP=new ZL({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:n,remoteSetup:r,localCapabilities:aL(this.localCapabilities),cname:s});const o=this.remoteSDP.toString(),a=KP.parse(this.initialOffer.sdp),c=a.mediaDescriptions.find((e=>\"audio\"===e.media.mediaType));c&&cL(c),this.useXR&&dL(a);const d=KP.print(a),l=this.logSDPExchange(d||\"\",\"offer\",\"local\",\"connect\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:d}),null==l||l(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NV.connect failed; \".concat(e.toString()))}}async updateRemoteRTPCapabilities(e,t){let i;this.remoteCodecs=t,this.localCapabilities&&(i=aL(this.localCapabilities));const n=[...new Set(i&&i.send.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Pr(t=Object.keys(UC)).call(t,e)})))];if(rv.updateRemoteRTPCapabilities(this.store.sessionId,{mids:e,localCodecs:n,remoteCodecs:this.remoteCodecs}),!this.remoteSDP)return void KC.debug(\"[P2PConnection] cannot updateRemoteRTPCapabilities before remote SDP created, local codecs: \".concat(n,\", codecs: \").concat(t));if(this.remoteSDP.updateRemoteCodec(e,t,this.store.codec)){const e=await this.peerConnection.createOffer(),t=this.logSDPExchange(e.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(e);const i=this.remoteSDP.toString();null==t||t(i),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:i})}else KC.debug(\"[P2PConnection] updateRemoteRTPCapabilities no need to exchange SDP.\")}async updateRemoteConnect(e){var t,i,n,r;(null===(t=this.remoteSDP)||void 0===t||t.updateRemoteRTPCapabilities(e),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0)&&(null===(r=this.remoteSDP)||void 0===r||r.updateRemoteCodec([],this.remoteCodecs,this.store.codec));null===(i=this.remoteSDP)||void 0===i||i.preloadRemoteMedia(2);const s=null===(n=this.remoteSDP)||void 0===n?void 0:n.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:s});const o=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(o),KC.debug(\"[NVExtentionsConnection] updateRemoteRTPCapabilities by exchanging SDP.\")}send(e,t,i){var n=this;return BP((function*(){const r=yield jP(n.mutex.lock(\"From NVExtentionsConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.send before remote SDP created\");const s=[];e.forEach((e=>{const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});s.push(t)})),Rg()&&!0===kC(\"SIMULCAST\")&&(yield jP(n.applySimulcastForFirefox(s,e)));const o=yield jP(n.peerConnection.createOffer()),a=n.remoteSDP.predictReceivingMids(e.length),c=n.mungSendOfferSDP(o.sdp,e,a),d=KP.parse(c),l=a.map((e=>{const t=d.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return XP(t,kC(\"USE_PUB_RTX\"))}));let h;try{h=yield l}catch(r){h=[],n.remoteSDP.receive(e,t,i,h);const s=n.remoteSDP.toString();throw yield jP(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield jP(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})),yield jP(n.stopSending(a,!0)),r}n.remoteSDP.receive(e,t,i,h);const u=n.remoteSDP.toString(),p=n.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield jP(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield jP(n.applySimulcastEncodings(s,e)),yield jP(n.applySendEncodings(s,e)),null==p||p(u),yield jP(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:u})),s.map(((e,t)=>{const i=a[t];return{localSSRC:l[t],id:i,transceiver:e}}))}catch(e){throw e instanceof xv?e:new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From NVExtentionsConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call NVExtentionsConnection.stopSending.\");t.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const s=this.remoteSDP.toString();null==r||r(s),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async createDataChannels(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.createDataChannels before remote SDP created\");let i=this.dataStreamChannelMap.get(e);return i&&\"open\"===i.readyState?KC.debug(\"[P2PConnection] Channels are already available and can be reused directly.\"):(i=this.peerConnection.createDataChannel(\"datastream-channel\",{ordered:!1,maxRetransmits:kC(\"DATASTREAM_MAX_RETRANSMITS\")}),i.binaryType=\"arraybuffer\",this.dataStreamChannelMap.set(e,i)),void t.forEach((e=>{e._updateOriginDataChannel(i)}))}catch(e){throw e instanceof xv?e:new xv(xg.DATACHANNEL_FAILED,\"NVExtentionsConnection.createDataChannels failed; \".concat(e.toString()))}}async stopDataChannels(e){try{const t=this.dataStreamChannelMap.get(e);return null==t||t.close(),void this.dataStreamChannelMap.delete(e)}catch(e){throw e instanceof xv?e:new xv(xg.DATACHANNEL_FAILED,\"NVExtentionsConnection.stopDataChannels failed; \".concat(e.toString()))}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:s}=this.remoteSDP.send(e,t,i,n);if(s){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),s=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(s||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:s}),KC.debug(\"[NVExtentionsConnection] receive \".concat(e,\" by exchanging SDP.\"))}else KC.debug(\"[NVExtentionsConnection] receive \".concat(e,\" no need to exchange SDP.\"));const o=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!o)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:o.receiver.track,id:r}}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);if(i){const e=this.remoteSDP.toString(),t=this.logSDPExchange(e,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const i=await this.peerConnection.createAnswer();null==t||t(i.sdp||\"\"),await this.peerConnection.setLocalDescription(i),KC.debug(\"[NVExtentionsConnection] batchReceive by exchanging SDP.\")}else KC.debug(\"[NVExtentionsConnection] batchReceive no need to exchange SDP.\");return t.map((e=>{const t=this.peerConnection.getTransceivers().find((t=>t.mid===e));if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e}}))}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async(e,t)=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return BP((function*(){const i=yield jP(t.mutex.lock(\"From NVExtentionsConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(_A().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===uI.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(KC.debug(\"restartICE change iceTransportPolicy from [\".concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===uI.RELAY)return;e!==uI.RELAY&&t.remoteSDP.updateCandidates(e);const n=yield jP(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=zP(n.sdp),{remoteIceParameters:s}=yield r.iceParameters;t.remoteSDP.restartICE(s);const o=t.remoteSDP.toString(),a=t.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"restartICE\");yield jP(t.peerConnection.setLocalDescription(n)),null==a||a(o),yield jP(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){KC.warning(\"restart ICE failed, abort operation\",e)}finally{i()}}))()}close(){var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy(),this.dataStreamChannelMap.clear()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),s=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==s||s(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new xv(xg.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?Rg()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}getP2PConnectionParams(){var e;if(null===(e=this.peerConnection.currentLocalDescription)||void 0===e||!e.sdp||!this.localCapabilities)throw new Error;return ek(ek({},zP(this.peerConnection.currentLocalDescription.sdp)),{},{rtpCapabilities:this.localCapabilities})}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,KC.debug(\"[pc-\".concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,KC.debug(\"[pc-\".concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),kC(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(e){const t={iceServers:[]};return e.iceServers?t.iceServers=e.iceServers:e.turnServer&&\"off\"!==e.turnServer.mode&&(_T(e.turnServer.servers)?t.iceServers=e.turnServer.servers:(t.iceServers&&t.iceServers.push(...tk.turnServerConfigToIceServers(e.turnServer.servers)),kC(\"USE_TURN_SERVER_OF_GATEWAY\")&&t.iceServers&&e.turnServer.serversFromGateway&&t.iceServers.push(...tk.turnServerConfigToIceServers(e.turnServer.serversFromGateway)),kC(\"FORCE_TURN_TCP\")?t.iceTransportPolicy=\"relay\":e.turnServer.servers.concat(e.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(t.iceTransportPolicy=\"relay\")})))),t}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(_D(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!kC(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}async applySendEncodings(e,t){try{if(!_A().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let l=0;l<e.length;l++){const h=e[l],u=t[l];if(u&&u instanceof Sb){var i,n,r;if(this.isVP8Simulcast(u))continue;const e={},t={};switch(u._optimizationMode){case\"motion\":e.degradationPreference=\"maintain-framerate\";break;case\"detail\":e.degradationPreference=\"maintain-resolution\";break;default:e.degradationPreference=\"balanced\"}var s,o,a,c;if(null!==(i=u._encoderConfig)&&void 0!==i&&i.bitrateMax)t.maxBitrate=1e3*(null===(s=u._encoderConfig)||void 0===s?void 0:s.bitrateMax);if(Pr(n=u._hints).call(n,ky.LOW_STREAM))null!==(o=u._encoderConfig)&&void 0!==o&&o.frameRate&&(t.maxFramerate=mD(u._encoderConfig.frameRate)),null!==(a=u._encoderConfig)&&void 0!==a&&a.scaleResolutionDownBy&&(null===(c=u._encoderConfig)||void 0===c?void 0:c.scaleResolutionDownBy)>1&&(t.scaleResolutionDownBy=u._encoderConfig.scaleResolutionDownBy);if(kC(\"DSCP_TYPE\")&&kg()){var d;const e=kC(\"DSCP_TYPE\");Pr(d=[\"very-low\",\"low\",\"medium\",\"high\"]).call(d,e)&&(t.networkPriority=e)}const l=h.sender.getParameters(),p=null===(r=l.encodings)||void 0===r?void 0:r[0];Rg()&&!p&&(e.encodings=[t]),p&&Object.assign(p,t),Object.assign(l,e),await h.sender.setParameters(l)}}}catch(e){KC.debug(\"Apply RTPSendEncodings failed.\")}}mungSendOfferSDP(e,t,i){const n=KP.parse(e);return t.forEach(((e,t)=>{const r=i[t],s=n.mediaDescriptions.find((e=>e.attributes.mid===r));s&&($P(s,e),rL(s,e,this.store.codec))})),KP.print(n)}mungReceiveAnswerSDP(e,t,i){const n=KP.parse(e),r=n.mediaDescriptions.find((e=>e.attributes.mid===t));return r&&i===hI.AUDIO&&\"audio\"===r.media.mediaType&&cL(r),this.useXR&&dL(n),KP.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,s,o;const c=e[a],d=t[a];if(d instanceof Sb&&!Pr(i=d._hints).call(i,ky.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(s=d._scalabilityMode)&&void 0!==s&&s.numSpatialLayers&&(null===(o=d._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!Rg()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof Sb&&this.isVP8Simulcast(n)){const t=e[i],r={},s={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:s.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:s.medium,scaleResolutionDownBy:4}];const o=t.sender.getParameters();await t.sender.setParameters(Object.assign(o,r))}}}isVP8Simulcast(e){var t,i,n,r,s;return!!(e instanceof Sb&&kC(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Pr(t=e._hints).call(t,ky.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(s=e._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(kC(\"SDP_LOGGING\"))return KC.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during NVExtentionsConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}setConfiguration(e){if(_A().supportPCSetConfiguration){const t=tk.resolvePCConfiguration(e);this.peerConnection.setConfiguration(t)}}}function ik(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From NVExtentionsConnection.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}function nk(e){var t,i,n,r=2;for(\"undefined\"!=typeof Symbol&&(i=WP,n=Symbol.iterator);r--;){if(i&&null!=(t=e[i]))return t.call(e);if(n&&null!=(t=e[n]))return new rk(t.call(e));i=\"@@asyncIterator\",n=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function rk(e){function t(e){if(Object(e)!==e)return tg.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return tg.resolve(e.value).then((function(e){return{value:e,done:t}}))}return rk=function(e){this.s=e,this.n=e.next},rk.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?tg.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?tg.reject(e):t(i.apply(this.s,arguments))}},new rk(e)}Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],tk.prototype,\"connect\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array,Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"updateRemoteRTPCapabilities\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],tk.prototype,\"updateRemoteConnect\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"createDataChannels\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Array,String,Object]),Uv(\"design:returntype\",tg)],tk.prototype,\"receive\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"batchReceive\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"stopReceiving\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],tk.prototype,\"muteRemote\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],tk.prototype,\"unmuteRemote\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"muteLocal\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],tk.prototype,\"unmuteLocal\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],tk.prototype,\"close\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],tk.prototype,\"updateEncoderConfig\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],tk.prototype,\"updateSendParameters\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[iA,String]),Uv(\"design:returntype\",tg)],tk.prototype,\"replaceTrack\",null),Mv([ik,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],tk.prototype,\"getRemoteSSRC\",null);class sk extends PI{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(e,t){super(e,t),nu(this,\"store\",void 0),nu(this,\"peerConnection\",void 0),nu(this,\"cname\",void 0),nu(this,\"mutex\",new YT(\"DataChannelConnection-mutex\")),nu(this,\"dataChannel\",void 0),nu(this,\"_p2pConnection\",void 0),nu(this,\"establishPromise\",void 0),nu(this,\"_nvMedia\",void 0),this.store=t,this.store.dcId=this.store.dcId+1,this.peerConnection=new RTCPeerConnection(sk.resolvePCConfiguration(e),{optional:[{googDscp:!0}]}),this.dataChannel=this.peerConnection.createDataChannel(\"agora-signal\",{ordered:!1,maxPacketLifeTime:50}),this.dataChannel.binaryType=\"arraybuffer\",this._p2pConnection=new tk(e,t,this.peerConnection),this.bindPCEvents(),this.establishPromise=this._p2pConnection.establishPromise}async establish(){var e;const t=null===(e=this._nvMedia)||void 0===e?void 0:e.getLocalRtpCapabilities();return await this._p2pConnection.establish(t)}getP2PConnectionParams(){return this._p2pConnection.getP2PConnectionParams()}async connect(e,t,i,n,r,s){return this.cname=s,await this._p2pConnection.connect(e,t,i,n,r,s),await new tg(((e,t)=>{const n=setTimeout((()=>{this.closeSignal(),t(new xv(xg.DATACHANNEL_CONNECTION_TIMEOUT,\"Datachannel connection timed out, candidates: \".concat(JSON.stringify(i))))}),2e3);this.dataChannel.onopen=()=>{if(\"open\"===this.dataChannel.readyState)return clearTimeout(n),void e()},this.dataChannel.onerror=e=>{this.closeSignal(),t(e)}})),{transmitter:this.dataChannel,close:this.closeSignal.bind(this)}}async updateRemoteRTPCapabilities(e,t){return this._p2pConnection.updateRemoteRTPCapabilities(e,t)}send(e,t,i){var n=this;return BP((function*(){const r=yield jP(n.mutex.lock(\"From DataChannelConnection.send\"));try{return yield*GP(nk(n._p2pConnection.send(e,t,i)))}finally{r()}}))()}async stopSending(e,t){return this._p2pConnection.stopSending(e,t)}async createDataChannels(e,t){return this._p2pConnection.createDataChannels(e,t)}async stopDataChannels(e){return this._p2pConnection.stopDataChannels(e)}async receive(e,t,i,n){return this._nvMedia?(KC.debug(\"[DataChannelConnection] receive \".concat(e,\" by DataChannel.\")),await this._nvMedia.reveiveByRTCMedia(e,t,this.cname)):(KC.debug(\"[DataChannelConnection] receive \".concat(e,\" by WebRTC.\")),await this._p2pConnection.receive(e,t,i,n))}async batchReceive(e){return[...await this._p2pConnection.batchReceive(e)]}async stopReceiving(e){return await this._p2pConnection.stopReceiving(e)}async muteRemote(e){return await this._p2pConnection.muteRemote(e)}async unmuteRemote(e){return await this._p2pConnection.unmuteRemote(e)}async muteLocal(e){return await this._p2pConnection.muteLocal(e)}async unmuteLocal(e){return await this._p2pConnection.unmuteLocal(e)}restartICE(e){var t=this;return BP((function*(){return yield*GP(nk(t._p2pConnection.restartICE(e)))}))()}close(){var e;null===(e=this._nvMedia)||void 0===e||e.close(),this._p2pConnection.close(),this.unbindConnectionEvents(this._p2pConnection)}getStats(){return this._p2pConnection.getStats()}getRemoteVideoIsReady(e){return this._p2pConnection.getRemoteVideoIsReady(e)}updateRemoteConnect(e){var t;null===(t=this._nvMedia)||void 0===t||t.setRemoteRtpCapabilities(e),this._p2pConnection.updateRemoteConnect(e)}async updateEncoderConfig(e,t){return await this._p2pConnection.updateEncoderConfig(e,t)}async updateSendParameters(e,t){return await this._p2pConnection.updateSendParameters(e,t)}setStatsRemoteVideoIsReady(e,t){this._p2pConnection.setStatsRemoteVideoIsReady(e,t)}async replaceTrack(e,t){return await this._p2pConnection.replaceTrack(e,t)}async getRemoteSSRC(e){return this._p2pConnection.getRemoteSSRC(e)}logSDPExchange(e,t,i,n){if(kC(\"SDP_LOGGING\"))return KC.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during DataChannelConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}static resolvePCConfiguration(e){const t={iceServers:[]};return e.iceServers?t.iceServers=e.iceServers:e.turnServer&&\"off\"!==e.turnServer.mode&&(_T(e.turnServer.servers)?t.iceServers=e.turnServer.servers:(t.iceServers&&t.iceServers.push(...sk.turnServerConfigToIceServers(e.turnServer.servers)),kC(\"USE_TURN_SERVER_OF_GATEWAY\")&&t.iceServers&&e.turnServer.serversFromGateway&&t.iceServers.push(...sk.turnServerConfigToIceServers(e.turnServer.serversFromGateway)),kC(\"FORCE_TURN_TCP\")?t.iceTransportPolicy=\"relay\":e.turnServer.servers.concat(e.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(t.iceTransportPolicy=\"relay\")})))),t}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(_D(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!kC(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}bindPCEvents(){this._p2pConnection.onICEConnectionStateChange=e=>{var t;return null===(t=this.onICEConnectionStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onConnectionStateChange=e=>{var t;return null===(t=this.onConnectionStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onDTLSTransportStateChange=e=>{var t;return null===(t=this.onDTLSTransportStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onDTLSTransportError=e=>{var t;return null===(t=this.onDTLSTransportError)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onICETransportStateChange=e=>{var t;return null===(t=this.onICETransportStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstAudioReceived=e=>{var t;return null===(t=this.onFirstAudioReceived)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstVideoReceived=e=>{var t;return null===(t=this.onFirstVideoReceived)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstAudioDecoded=e=>{var t;return null===(t=this.onFirstAudioDecoded)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstVideoDecoded=(e,t,i)=>{var n;return null===(n=this.onFirstVideoDecoded)||void 0===n?void 0:n.call(this,e,t,i)},this._p2pConnection.onFirstVideoDecodedTimeout=e=>{var t;return null===(t=this.onFirstVideoDecodedTimeout)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onSelectedLocalCandidateChanged=(e,t)=>{var i;return null===(i=this.onSelectedLocalCandidateChanged)||void 0===i?void 0:i.call(this,e,t)},this._p2pConnection.onSelectedRemoteCandidateChanged=(e,t)=>{var i;return null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i?void 0:i.call(this,e,t)}}closeSignal(){this.dataChannel.close(),this.peerConnection.close()}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0}setConfiguration(e){this._p2pConnection.setConfiguration(e)}}function ok(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From DataChannelConnection.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}function ak(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function ck(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ak(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ak(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],sk.prototype,\"connect\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array,Array]),Uv(\"design:returntype\",tg)],sk.prototype,\"updateRemoteRTPCapabilities\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Array]),Uv(\"design:returntype\",tg)],sk.prototype,\"createDataChannels\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Array,String,Object]),Uv(\"design:returntype\",tg)],sk.prototype,\"receive\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],sk.prototype,\"stopReceiving\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],sk.prototype,\"muteRemote\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],sk.prototype,\"unmuteRemote\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],sk.prototype,\"muteLocal\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],sk.prototype,\"unmuteLocal\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],sk.prototype,\"close\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],sk.prototype,\"updateEncoderConfig\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],sk.prototype,\"updateSendParameters\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[iA,String]),Uv(\"design:returntype\",tg)],sk.prototype,\"replaceTrack\",null),Mv([ok,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],sk.prototype,\"getRemoteSSRC\",null);class dk extends iT{constructor(){super(),nu(this,\"uplinkStatsUploadInterval\",void 0),nu(this,\"uplinkRelatedStatsUploadInterval\",void 0),nu(this,\"uplinkDenoiserStatsUploadInterval\",void 0),nu(this,\"transportStatsUploadInterval\",void 0),nu(this,\"uplinkExtensionStatsUploadInterval\",void 0),nu(this,\"downlinkExtensionStatsUploadInterval\",void 0),nu(this,\"extensionUsageStatsUploadInterval\",void 0),nu(this,\"downlinkStatsUploadInterval\",void 0),nu(this,\"downlinkRelatedStatsUploadInterval\",void 0),nu(this,\"lastStats\",void 0),nu(this,\"uploadUnplinkStarted\",!1),nu(this,\"uploadDownlinkStarted\",!1),nu(this,\"uploadTransportStarted\",!1),nu(this,\"uploadExtensionUsageStarted\",!1),nu(this,\"requestStats\",void 0),nu(this,\"requestTransportStats\",void 0),nu(this,\"requestLocalMedia\",void 0),nu(this,\"requestRemoteMedia\",void 0),nu(this,\"requestAllTracks\",void 0),nu(this,\"requestVideoIsReady\",void 0),nu(this,\"requestUpload\",void 0)}startUploadTransportStats(e){this.uploadTransportStarted||(this.uploadTransportStarted=!0,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=window.setInterval((()=>{var t;const i=null===(t=this.requestStats)||void 0===t?void 0:t.call(this);if(i){const t=gD(i);if(e){var n;const e=null===(n=this.requestStats)||void 0===n?void 0:n.call(this,!0);if(e){const i=gD(e);t.connectionType+=i.connectionType<<3}t.connectionType+=110}else t.connectionType+=100;AT((()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Sv.TRANSPORT_STATS,t)}))}}),1e3))}startUploadExtensionUsageStats(){if(this.uploadExtensionUsageStarted)return;this.uploadExtensionUsageStarted=!0,this.extensionUsageStatsUploadInterval&&window.clearInterval(this.extensionUsageStatsUploadInterval);const e=new Map;this.extensionUsageStatsUploadInterval=window.setInterval((async()=>{var t,i,n;const r=Date.now(),s={connectionInterval:kC(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3,details:[],lts:r};let o=[];const a=(null===(t=this.requestAllTracks)||void 0===t?void 0:t.call(this))||[];for(const e of a)!e.muted&&e.enabled&&(o=o.concat(await e.getProcessorUsage()));const c=(null===(i=this.requestRemoteMedia)||void 0===i?void 0:i.call(this))||[];for(const[e,t]of c)t.has(hI.VIDEO)&&e.videoTrack&&(o=o.concat(await e.videoTrack.getProcessorUsage())),t.has(hI.AUDIO)&&e.audioTrack&&(o=o.concat(await e.audioTrack.getProcessorUsage()));if(0===o.length)return;s.details=function(e,t){const i={};for(const{id:o,value:a,level:c,direction:d}of e){var n;const e=null!==(n=t.get(o))&&void 0!==n?n:0,l=2===a?e+kC(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3:e;var r,s;t.set(o,l),i[o]?(2===a&&(i[o].value=a),c>i[o].level&&(i[o].level=c),\"remote\"===d&&(i[o].remoteUidCount+=1),i[o].totalTs=null!==(r=t.get(o))&&void 0!==r?r:0):i[o]={value:a,level:c,remoteUidCount:\"local\"===d?0:1,totalTs:null!==(s=t.get(o))&&void 0!==s?s:0}}return Object.keys(i).map((e=>{const{level:t,value:n,totalTs:r}=i[e];return{id:e,level:t,value:n,totalTs:r}}))}(o,e);const d=Date.now(),l=d>r?d:r+1;null===(n=this.requestUpload)||void 0===n||n.call(this,Sv.EXTENSION_USAGE_STATS,{usageStats:s,sendTs:l})}),kC(\"EXTENSION_USAGE_UPLOAD_INTERVAL\"))}startUploadUplinkStats(){this.uploadUnplinkStarted||(this.uploadUnplinkStarted=!0,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadUplinkStats(t),this.lastStats=t)}),3e3),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkRelatedStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadRelatedUplinkStats(t,this.lastStats),this.lastStats=t}),1e3),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadDenoiserStats(t)}),2e3),this.uplinkExtensionStatsUploadInterval&&window.clearInterval(this.uplinkExtensionStatsUploadInterval),this.uplinkExtensionStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadExtensionStats(t)}),2e3))}uploadUplinkStats(e){var t;((null===(t=this.requestLocalMedia)||void 0===t?void 0:t.call(this))||[]).forEach((t=>{let[i,{track:n,ssrcs:r}]=t;switch(i){case _I.LocalVideoLowTrack:case _I.LocalVideoTrack:{const t=function(e,t,i){var n;const r=t.videoSend.find((t=>t.ssrc===e));if(!r)return null;const s={id:xT(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:r.ssrc.toString()};switch(s.A_vstd=i._originMediaStreamTrack&&!i._originMediaStreamTrack.enabled||i._mediaStreamTrack&&!i._mediaStreamTrack.enabled?\"1\":\"0\",r.sentFrame&&(s.A_fhs=r.sentFrame.height.toString(),s.A_frs=r.sentFrame.frameRate.toString(),s.A_fws=r.sentFrame.width.toString()),r.adaptionChangeReason){case\"none\":s.A_ac=\"0\";break;case\"cpu\":s.A_ac=\"1\";break;case\"bandwidth\":s.A_ac=\"2\";break;case\"other\":s.A_ac=\"3\"}return s.A_lvps=$y[i._player?i._player.videoElementStatus:\"uninit\"].toString(),s.A_nr=null===(n=r.nacksCount)||void 0===n?void 0:n.toString(),r.avgEncodeMs&&(s.A_aem=r.avgEncodeMs.toFixed(0).toString()),kC(\"P2P\")&&(r.bytes&&(s.bytesSent=r.bytes.toString()),\"number\"==typeof r.packetsLost&&(s.packetsLost=r.packetsLost.toString()),r.packets&&(s.packetsSent=r.packets.toString())),s}(r[0].ssrcId,e,n),s=i===_I.LocalVideoTrack?function(e,t,i){var n,r,s,o,a,c,d,l;const h=t.videoSend.find((t=>t.ssrc===e));if(!h)return null;const u={id:xT(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:h.ssrc.toString()},p=null!==(n=null!==(r=null===(s=h.inputFrame)||void 0===s?void 0:s.height)&&void 0!==r?r:null==i?void 0:i._videoHeight)&&void 0!==n?n:0,_=null!==(o=null!==(a=null===(c=h.inputFrame)||void 0===c?void 0:c.width)&&void 0!==a?a:null==i?void 0:i._videoWidth)&&void 0!==o?o:0,E=null!==(d=null===(l=h.inputFrame)||void 0===l?void 0:l.frameRate)&&void 0!==d?d:0;return p&&(u.A_fhi=p+\"\"),_&&(u.A_fwi=_+\"\"),E&&(u.A_fri=E+\"\"),u}(r[0].ssrcId,e,n):null;t&&AT((()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Sv.PUBLISH_STATS,{stream_type:i===_I.LocalVideoLowTrack?\"low\":\"high\",stats:ck(ck({},t),s)})}));const o=function(e){const t={id:\"bweforvideo\",timestamp:new Date(e.timestamp).toISOString(),type:\"VideoBwe\"};return e.bitrate.retransmit&&(t.A_rb=e.bitrate.retransmit.toString()),e.bitrate.targetEncoded&&(t.A_teb=e.bitrate.targetEncoded.toString()),t.A_aeb=e.bitrate.actualEncoded.toString(),t.A_tb=e.bitrate.transmit.toString(),void 0!==e.sendBandwidth&&(t.A_asb=e.sendBandwidth.toString()),t}(e);o&&setTimeout((()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Sv.PUBLISH_STATS,{stream_type:i===_I.LocalVideoLowTrack?\"low\":\"high\",stats:o})}),1e3);break}case _I.LocalAudioTrack:{const t=function(e,t,i){const n=t.audioSend.find((t=>t.ssrc===e));if(!n)return null;const r={id:xT(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"audio\",type:\"ssrc\",ssrc:n.ssrc.toString()};return r.A_astd=i._originMediaStreamTrack&&!i._originMediaStreamTrack.enabled||i._mediaStreamTrack&&!i._mediaStreamTrack.enabled?\"1\":\"0\",n.inputLevel?r.A_ail=Math.round(100*n.inputLevel).toString():r.A_ail=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),r.A_apil=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),n.aecReturnLoss&&(r.A_ecrl=Math.round(n.aecReturnLoss).toString()),n.aecReturnLossEnhancement&&(r.A_ecrle=Math.round(n.aecReturnLossEnhancement).toString()),kC(\"P2P\")&&(n.bytes&&(r.bytesSent=n.bytes.toString()),\"number\"==typeof n.packetsLost&&(r.packetsLost=n.packetsLost.toString()),n.packets&&(r.packetsSent=n.packets.toString())),r}(r[0].ssrcId,e,n);t&&AT((()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Sv.PUBLISH_STATS,{stream_type:\"high\",stats:t})}));break}}}))}uploadRelatedUplinkStats(e,t){var i;((null===(i=this.requestLocalMedia)||void 0===i?void 0:i.call(this))||[]).filter((e=>{let[t]=e;return t===_I.LocalVideoLowTrack||t===_I.LocalVideoTrack})).forEach((t=>{let[i,{ssrcs:n}]=t;const r=function(e,t){const i=t.videoSend.find((t=>t.ssrc===e));return i?{mediaType:\"video\",isVideoMute:!1,frameRateInput:i.inputFrame&&i.inputFrame.frameRate.toString(),frameRateSent:i.sentFrame&&i.sentFrame.frameRate.toString(),googRtt:i.rttMs.toString(),qpSumPerFrame:Math.floor(i.qpSumPerFrame).toString()}:null}(n[0].ssrcId,e);r&&AT((()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Sv.PUBLISH_RELATED_STATS,{stream_type:i===_I.LocalVideoLowTrack?\"low\":\"high\",stats:r})}))}))}uploadDenoiserStats(e){for(let r=0;r<e.length;r++){const s=e[r];if(s instanceof $A){var t,i,n;const e=null===(t=(i=s._external).getDenoiserStats)||void 0===t?void 0:t.call(i);return void(e&&(null===(n=this.requestUpload)||void 0===n||n.call(this,Sv.DENOISER_STATS,e)))}}}uploadExtensionStats(e){for(let t=0;t<e.length;t++){e[t].getProcessorStats().forEach((e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)}))}}stopUploadUplinkStats(){this.uploadUnplinkStarted&&(this.uploadUnplinkStarted=!1,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkStatsUploadInterval=void 0,this.uplinkRelatedStatsUploadInterval=void 0,this.uplinkDenoiserStatsUploadInterval=void 0)}startUploadDownlinkStats(){if(this.uploadDownlinkStarted)return;let e;this.uploadDownlinkStarted=!0,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval);let t=!1;this.downlinkStatsUploadInterval=window.setInterval((()=>{var i;const n=null===(i=this.requestStats)||void 0===i?void 0:i.call(this,!0);n&&(this.uploadDownlinkStats(n,t,e),e=n),t=!t}),3e3),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkRelatedStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this,!0);t&&(this.uploadRelatedDownlinkStats(t,this.lastStats),this.lastStats=t)}),1e3),this.downlinkExtensionStatsUploadInterval&&window.clearInterval(this.downlinkExtensionStatsUploadInterval),this.downlinkExtensionStatsUploadInterval=window.setInterval((()=>{var e;const t=null===(e=this.requestRemoteMedia)||void 0===e?void 0:e.call(this);t&&this.uploadDownlinkExtensionStats(t)}),2e3)}uploadDownlinkStats(e,t,i){var n;((null===(n=this.requestRemoteMedia)||void 0===n?void 0:n.call(this))||[]).forEach((n=>{let[r,s]=n;if(s.has(hI.VIDEO)&&r.videoTrack){const n=r.videoTrack?function(e,t,i,n,r){const s=t.videoRecv.find((t=>t.ssrc===e));if(!s)return null;const o={id:xT(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:s.ssrc.toString()};var a,c;if(o.bytesReceived=s.bytes.toString(),o.packetsLost=s.packetsLost.toString(),o.packetsReceived=s.packets.toString(),s.framesRateFirefox&&(o.A_frr=s.framesRateFirefox.toString()),s.receivedFrame?(o.A_frr=s.receivedFrame.frameRate.toString(),o.A_fhr=s.receivedFrame.height.toString(),o.A_fwr=s.receivedFrame.width.toString()):(o.A_fhr=null===(a=n._videoHeight)||void 0===a?void 0:a.toString(),o.A_fwr=null===(c=n._videoWidth)||void 0===c?void 0:c.toString()),o.A_frd=s.decodeFrameRate.toString(),s.outputFrame&&(o.A_fro=s.outputFrame.frameRate.toString()),void 0!==s.jitterBufferMs&&(o.A_jbm=Math.floor(s.jitterBufferMs).toString()),void 0!==s.currentDelayMs&&(o.A_cdm=Math.floor(s.currentDelayMs).toString()),o.A_fs=s.firsCount.toString(),o.A_ns=s.nacksCount.toString(),o.A_ps=s.plisCount.toString(),n&&(o.A_vrtd=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?\"0\":\"1\"),n._player&&n._player.freezeTimeCounterList.length>0&&(o.A_vrft=Math.round(n._player.freezeTimeCounterList.splice(0,1)[0]).toString()),r&&n._player&&\"visible\"===db.visibility){const e=Math.min(6e3,n._player.renderFreezeAccTime);o.A_vrrft=Math.round(e).toString(),n._player.renderFreezeAccTime=Math.max(0,n._player.renderFreezeAccTime-e)}if(o.A_rvps=$y[n._player?n._player.videoElementStatus:\"uninit\"].toString(),i){const t=i.videoRecv.find((t=>t.ssrc===e));if(t&&void 0!==s.totalInterFrameDelay&&void 0!==s.totalSquaredInterFrameDelay&&void 0!==t.totalInterFrameDelay&&void 0!==t.totalSquaredInterFrameDelay){const e=s.totalInterFrameDelay-t.totalInterFrameDelay,i=s.totalSquaredInterFrameDelay-t.totalSquaredInterFrameDelay,n=s.framesDecodeCount-t.framesDecodeCount,r=e/n*1e3,a=Math.round(1e3*Math.sqrt((i-Math.pow(e,2)/n)/n));!isNaN(a)&&r+a>Math.max(3*r,r+150)&&(o.A_ifdsd=a.toString())}}return o}(r._videoSSRC,e,i,r.videoTrack,t):void 0;n&&AT((()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Sv.SUBSCRIBE_STATS,{stream_id:r.uid,stats:n})}))}if(s.has(hI.AUDIO)&&r.audioTrack){const t=r.audioTrack?function(e,t,i,n){const r=t.audioRecv.find((t=>t.ssrc===e));if(!r)return null;const s={id:xT(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"audio\",type:\"ssrc\",ssrc:r.ssrc.toString()};if(s.bytesReceived=r.bytes.toString(),s.packetsLost=r.packetsLost.toString(),s.packetsReceived=r.packets.toString(),r.outputLevel?s.A_aol=Math.round(100*r.outputLevel).toString():s.A_aol=Math.round(100*n._source.getAccurateVolumeLevel()).toString(),s.A_apol=Math.round(100*n._source.getAccurateVolumeLevel()).toString(),n&&(s.A_artd=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?\"0\":\"1\"),s.A_jr=r.jitterMs.toString(),s.A_jbm=Math.floor(r.jitterBufferMs).toString(),s.A_cdm=Math.floor(r.jitterBufferMs).toString(),s.A_raps=$y[xA.getPlayerState(n.getTrackId())].toString(),i){const t=i.audioRecv.find((t=>t.ssrc===e));if(t){const e=r.concealedSamples-t.concealedSamples;e>0&&(s.A_cs=Math.round(e).toString())}}return s}(r._audioSSRC,e,i,r.audioTrack):void 0;t&&AT((()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Sv.SUBSCRIBE_STATS,{stream_id:r.uid,stats:t})}))}}))}uploadRelatedDownlinkStats(e,t){var i;((null===(i=this.requestRemoteMedia)||void 0===i?void 0:i.call(this))||[]).forEach((i=>{let[n,r]=i;if(r.has(hI.VIDEO)&&n.videoTrack){var s;const i=!0===(n._videoSSRC&&(null===(s=this.requestVideoIsReady)||void 0===s?void 0:s.call(this,n._videoSSRC))||!1),r=function(e,t,i,n,r,s){const o=i.videoRecv.find((t=>t.ssrc===e)),a=r?r.videoRecv.find((t=>t.ssrc===e)):void 0;if(!o)return null;const c=hD.isRemoteVideoFreeze(s,o,a)&&t,d={mediaType:\"video\",isVideoMute:!1,peerId:n,frameRateReceived:o.receivedFrame&&o.receivedFrame.frameRate.toString(),frameRateDecoded:o.decodedFrame&&o.decodedFrame.frameRate.toString(),isFreeze:c,bytesReceived:o.bytes.toString(),packetsReceived:o.packets.toString(),packetsLost:o.packetsLost.toString(),qpSumPerFrame:Math.floor(o.qpSumPerFrame).toString()};return o.framesRateFirefox&&(d.frameRateDecoded=o.framesRateFirefox.toString(),d.frameRateReceived=o.framesRateFirefox.toString()),d}(n._videoSSRC,i,e,n.uid,t,n.videoTrack);r&&AT((()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Sv.SUBSCRIBE_RELATED_STATS,{stream_id:n.uid,stats:r})}))}if(r.has(hI.AUDIO)&&n.audioTrack){const t=function(e,t,i,n){const r=t.audioRecv.find((t=>t.ssrc===e));if(!r)return null;const s=hD.isRemoteAudioFreeze(n);return{mediaType:\"audio\",isAudioMute:!1,peerId:i,googJitterReceived:r.jitterMs.toString(),isFreeze:s,bytesReceived:r.bytes.toString(),packetsReceived:r.packets.toString(),packetsLost:r.packetsLost.toString(),frameReceived:r.receivedFrames.toString(),frameDropped:r.droppedFrames.toString()}}(n._audioSSRC,e,n.uid,n.audioTrack);t&&AT((()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Sv.SUBSCRIBE_RELATED_STATS,{stream_id:n.uid,stats:t})}))}}))}stopUploadDownlinkStats(){this.uploadDownlinkStarted&&(this.uploadDownlinkStarted=!1,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkStatsUploadInterval=void 0,this.downlinkRelatedStatsUploadInterval=void 0)}stopUploadTransportStats(){this.uploadTransportStarted&&(this.uploadTransportStarted=!1,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=void 0)}stopUploadExtensionUsageStats(){this.uploadExtensionUsageStarted&&(this.uploadExtensionUsageStarted=!1,this.extensionUsageStatsUploadInterval&&window.clearInterval(this.extensionUsageStatsUploadInterval),this.extensionUsageStatsUploadInterval=void 0)}uploadDownlinkExtensionStats(e){e.forEach((e=>{let[t,i]=e;if(i.has(hI.VIDEO)&&t.videoTrack){t.videoTrack.getProcessorStats().forEach((e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)}))}if(i.has(hI.AUDIO)&&t.audioTrack){t.audioTrack.getProcessorStats().forEach((e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)}))}}))}}function lk(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function hk(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?lk(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):lk(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function uk(e){var t,i,n,r=2;for(\"undefined\"!=typeof Symbol&&(i=WP,n=Symbol.iterator);r--;){if(i&&null!=(t=e[i]))return t.call(e);if(n&&null!=(t=e[n]))return new pk(t.call(e));i=\"@@asyncIterator\",n=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function pk(e){function t(e){if(Object(e)!==e)return tg.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return tg.resolve(e.value).then((function(e){return{value:e,done:t}}))}return pk=function(e){this.s=e,this.n=e.next},pk.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?tg.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?tg.reject(e):t(i.apply(this.s,arguments))}},new pk(e)}class _k extends iT{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(mI.StateChange,t,this._state)}constructor(e,t){super(),nu(this,\"store\",void 0),nu(this,\"statsUploader\",void 0),nu(this,\"connection\",void 0),nu(this,\"localTrackMap\",new Map),nu(this,\"remoteUserMap\",new Map),nu(this,\"localDataChannels\",[]),nu(this,\"remoteDataChannelMap\",new Map),nu(this,\"pendingLocalTracks\",[]),nu(this,\"pendingRemoteTracks\",[]),nu(this,\"pendingLocalDataChannels\",[]),nu(this,\"pendingRemoteDataChannels\",[]),nu(this,\"statsCollector\",void 0),nu(this,\"isPlanB\",!1),nu(this,\"shouldForwardP2PCreation\",void 0),nu(this,\"iceFailedCount\",0),nu(this,\"dtlsFailedCount\",0),nu(this,\"mutex\",new YT(\"P2PChannel-mutex\")),nu(this,\"_state\",EI.Disconnected),nu(this,\"_pcStatsUploadType\",kC(\"NEW_ICE_RESTART\")?pI.FIRST_CONNECTION:pI.OLD_FIRST_CONNECTION),nu(this,\"_isInRestartIce\",!1),nu(this,\"_isStartRestartIce\",!1),nu(this,\"_restartStates\",[\"disconnected\",\"failed\"]),nu(this,\"_restartTimer\",void 0),nu(this,\"_isFirstConnected\",!0),nu(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleMuteLocalTrack\");try{if(!this.connection||this.state!==EI.Connected)return void i(new Vg(xg.INVALID_OPERATION,\"Cannot call P2PChannel.handleMuteLocalTrack before connection established.\"));const r=this.filterTobeMutedTracks(e);if(0===r.length)return void t();const s=r.find((e=>\"videoLowTrack\"===e[0]));if(s){s[1].track._originMediaStreamTrack.stop()}await this.connection.muteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createMuteMessage(r);await gT(this,mI.RequestMuteLocal,o),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleUnmuteLocalTrack\");try{if(!this.connection||this.state!==EI.Connected)return void i(new Vg(xg.INVALID_OPERATION,\"Cannot call P2PChannel.handleUnmuteLocalTrack before connection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();const s=r.find((e=>\"videoLowTrack\"===e[0]));if(s){const t=s[1];if(t.track._originMediaStreamTrack.stop(),!kC(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&_A().supportDualStreamEncoding){const i=e._mediaStreamTrack.clone();t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}else{const i=KL(e,ST(this,mI.RequestLowStreamParameter));t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}await new tg(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}await this.connection.unmuteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createUnmuteMessage(r);await gT(this,mI.RequestUnmuteLocal,o),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(_I.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==EI.Connected)return void t();const{id:r,track:s}=i;await this.connection.updateSendParameters(r,s),await this.connection.updateEncoderConfig(r,s),this.emit(mI.UpdateVideoEncoder,s),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleSetOptimizationMode\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleSetOptimizationMode\");try{const i=this.localTrackMap.get(_I.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==EI.Connected)return;const{id:r,track:s}=i;await this.connection.updateSendParameters(r,s),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.mutex.lock(\"From P2PChannel.handleReplaceTrack\"));try{var s;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.connection||!i||this.state!==EI.Connected)return void t();if(await(null===(s=this.connection)||void 0===s?void 0:s.replaceTrack(e,i[1].id)),this.isPlanB){const t=i[1];t.id=e._mediaStreamTrack.id,this.localTrackMap.set(i[0],t)}if(i[0]===_I.LocalVideoTrack&&!kC(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&_A().supportDualStreamEncoding){const t=this.localTrackMap.get(_I.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new tg(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var o;null===(o=r)||void 0===o||o()}})),nu(this,\"handleGetRTCStats\",(e=>{e(this.statsCollector.getRTCStats())})),nu(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),nu(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),nu(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),nu(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new dk,this.bindStatsUploaderEvents(),this.isPlanB=!_A().supportUnifiedPlan||kC(\"CHROME_FORCE_PLAN_B\")&&kg(),this.shouldForwardP2PCreation=kC(\"FORWARD_P2P_CREATION\")&&_A().supportPCSetConfiguration&&function(){const e=_g();return e===ag.ANDROID||e===ag.IOS||e===ag.HARMONY_OS}(),this.shouldForwardP2PCreation&&(this.connection=this.store.useDataChannel?new sk({},this.store):this.isPlanB?new ML({},this.store):new WL({},this.store),this.bindConnectionEvents(this.connection))}async startP2PConnection(e,t){var i;this.state=EI.New;const n=this.shouldForwardP2PCreation&&\"closed\"===(null===(i=this.connection)||void 0===i?void 0:i.peerConnectionState);if(this.shouldForwardP2PCreation&&!n||(n&&this.connection&&(KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2PConnection ForwardP2P closed.\")),this.connection.close(),this.unbindConnectionEvents(this.connection)),this.connection=this.store.useDataChannel?new sk(e,this.store):this.isPlanB?new ML(e,this.store):new WL(e,this.store),this.bindConnectionEvents(this.connection)),!this.connection)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot P2PChannel.startConnection before P2PConnection initialization .\");return this._pcStatsUploadType=kC(\"NEW_ICE_RESTART\")?pI.FIRST_CONNECTION:pI.OLD_FIRST_CONNECTION,this._isFirstConnected=!0,this._isInRestartIce=!1,this._isStartRestartIce=!1,this.connection.setConfiguration(e),this.connection.establishPromise}async connect(e,t,i,n,r,s){if(!this.connection)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");this.connection instanceof sk?this.connection.updateRemoteConnect(n):(this.store.peerConnectionStart(),await this.connection.connect(e,t,i,n,r,s),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=EI.Connected)}updateRemoteRTPCapabilities(e){const t=Array.from(this.localTrackMap.entries()).filter((e=>{var t;let[i]=e;return Pr(t=[_I.LocalVideoLowTrack,_I.LocalVideoTrack]).call(t,i)})).map((e=>{let[,{id:t}]=e;return t}));if(this.connection instanceof WL){if(!Pr(e).call(e,this.store.codec)){const t=[\"vp8\",\"h264\"].find((t=>Pr(e).call(e,t)));t&&(this.store.codec=t,KC.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\" updateRemoteRTPCapabilities] default codec is not available, hence the fallback to \").concat(t,\".\")))}this.connection.updateRemoteRTPCapabilities(t,e)}}async preConnect(e,t,i,n,r,s){if(!this.connection)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");this.store.peerConnectionStart();const o=await this.connection.connect(e,t,i,n,r,s);return this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=EI.Connected,o}getEstablishParams(){if(this.connection instanceof sk)return this.connection.getP2PConnectionParams();throw new Error(\"Only DataChannelConnection needs to obtain establishParams\")}async publishDataChannel(e){if(!this.connection){if(this.state===EI.Disconnected)throw new Vg(xg.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");const t=e.filter((e=>-1!==this.pendingLocalDataChannels.findIndex((t=>t.id===e.id))));return void(this.pendingLocalDataChannels=this.pendingLocalDataChannels.concat(t))}const t=this.filterTobePublishedDataChannels(e);0!==t.length&&(t.forEach((e=>{const t=Date.now();this.store.publish(e.id.toString(),\"datachannel\",t)})),await this.connection.createDataChannels(this.store.uid,t),t.forEach((e=>{this.localDataChannels.push(e);const t=Date.now();this.store.publish(e.id+\"\",\"datachannel\",void 0,t)})))}publish(e,t,i){var n=this;return BP((function*(){const r=yield jP(n.mutex.lock(\"From P2PChannel.publish\"));try{if(!n.connection||n.state!==EI.Connected){if(n.state===EI.Disconnected)throw new Vg(xg.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");n.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===n.pendingLocalTracks.indexOf(e)));return void(n.pendingLocalTracks=n.pendingLocalTracks.concat(t))}n.store.pubId=n.store.pubId+1,cD.markPublishStart(n.store.clientId,n.store.pubId);const s=n.filterTobePublishedTracks(e,t,i);if(0===s.length)return void(yield jP(n.tryToUnmuteAudio(e)));yield*GP(uk(n.doPublish(n.connection,s)))}finally{r()}}))()}doPublish(e,t){var i=this;return BP((function*(){t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===_I.LocalAudioTrack?\"audio\":\"video\",r)})),i.bindLocalTrackEvents(t);const n=yield jP(e.send(t.map((e=>{let{track:t}=e;return t})),i.store.codec,i.store.audioCodec)),r=(yield jP(n.next())).value,s=i.createGatewayPublishMessage(t,r);let o;try{o=yield s}catch(e){throw n.throw(e),(null==e?void 0:e.code)===xg.WS_ABORT&&t.forEach((e=>{let{track:t}=e;-1===i.pendingLocalTracks.indexOf(t)&&i.pendingLocalTracks.push(t)})),i.unbindLocalTrackEvents(t),e}const a=i.mapPubResToRemoteConfig(s,o),c=(yield jP(n.next(a))).value;t.forEach((e=>{let{type:t}=e;i.statsCollector.addLocalStats(t)})),i.assignLocalTracks(t,c),i.statsUploader.startUploadUplinkStats(),t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===_I.LocalAudioTrack?\"audio\":\"video\",void 0,r)}))}))()}async updateVideoStreamParameter(e,t){const i=this.localTrackMap.get(t);if(!i)return;if(!(i.track instanceof Sb))return KC.warn(\"[updateVideoStreamParameter]: track is not an instance of LocalVideoTrack\");if(!(this.connection instanceof WL||this.connection instanceof ML))return KC.warn(\"[updateVideoStreamParameter]: connection is not P2PConnection or P2PConnectionPlanB\");const{track:n}=i,r=function(e,t){const i={};return e.height&&e.width&&(i.scaleResolutionDownBy=CD(e,t)),i.maxFramerate=e.framerate?mD(e.framerate):void 0,i.maxBitrate=e.bitrate?1e3*e.bitrate:void 0,i}(e,n);if(n._encoderConfig||(n._encoderConfig={}),t!==_I.LocalVideoLowTrack||!kC(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&_A().supportDualStreamEncoding)null!=r.scaleResolutionDownBy&&(n._encoderConfig.scaleResolutionDownBy=r.scaleResolutionDownBy);else{const t=n._originMediaStreamTrack;if(!t.canvas)return KC.warn(\"[\".concat(n.getTrackId(),\"] no canvas on track\"));!function(e,t){const i=e.canvas;t.width&&(i.width=mD(t.width)),t.height&&(i.height=mD(t.height)),t.framerate&&(i.stopCapture&&i.stopCapture(),i.stopCapture=uA((()=>{!i.startCapture&&i.stopCapture&&i.stopCapture(),i.startCapture&&i.startCapture()}),mD(t.framerate)))}(t,e)}null!=r.maxBitrate&&(n._encoderConfig.bitrateMax=r.maxBitrate/1e3),null!=r.maxFramerate&&(n._encoderConfig.frameRate&&\"object\"==typeof n._encoderConfig.frameRate?n._encoderConfig.frameRate.max=r.maxFramerate:n._encoderConfig.frameRate={max:r.maxFramerate}),KC.debug(\"[\".concat(n.getTrackId(),\"] LowStreamEncoderConfig: , \").concat(JSON.stringify(n._encoderConfig))),await this.connection.updateRtpSenderEncodings(n)}publishLowStream(e){var t=this;return BP((function*(){if(!t.connection||t.state!==EI.Connected)return;const i=yield jP(t.mutex.lock(\"Locking from P2PChannel.publishLowStream\"));try{const r=t.localTrackMap.get(_I.LocalVideoTrack);if(!r)throw new Vg(xg.UNEXPECTED_ERROR,\"Could not find high stream\");if(t.localTrackMap.has(_I.LocalVideoLowTrack))throw new Vg(xg.UNEXPECTED_ERROR,\"[\".concat(t.store.clientId,\"] Can't publish low stream when stream already publish\"));const s=[{track:t.getLowVideoTrack(r.track,e),type:_I.LocalVideoLowTrack}];if(yield*GP(uk(t.doPublish(t.connection,s))),r.track.muted||!r.track.enabled){var n;const e=null===(n=t.localTrackMap.get(_I.LocalVideoLowTrack))||void 0===n?void 0:n.id;void 0!==e&&(yield jP(t.connection.muteLocal([e])))}}finally{i()}}))()}async republish(){this.pendingLocalTracks.length>0&&(KC.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await fT(this,mI.RequestRePublish,this.pendingLocalTracks),this.emit(mI.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[]),this.pendingLocalDataChannels.length>0&&(KC.debug(\"Emit P2PChannelEvents.RequestRePublishDataChannel to republish datachannels.\"),await fT(this,mI.RequestRePublishDataChannel,this.pendingLocalDataChannels),this.pendingLocalDataChannels=[])}async reSubscribe(e){for(let e=this.pendingRemoteTracks.length-1;e>=0;e--){const{user:t,kind:i}=this.pendingRemoteTracks[e];(i!==hI.AUDIO||t._audio_added_&&t._audioSSRC)&&(i!==hI.VIDEO||t._video_added_&&t._videoSSRC)||this.pendingRemoteTracks.splice(e,1)}if(e)await fT(this,mI.RequestReSubscribe,this.pendingRemoteTracks);else for(const{user:e,kind:t}of this.pendingRemoteTracks)await this.subscribe(e,t,t===hI.VIDEO?e._videoSSRC:e._audioSSRC);this.pendingRemoteTracks.forEach((e=>{let{user:t}=e;this.emit(mI.MediaReconnectEnd,t.uid)})),this.pendingRemoteTracks=[]}async unpublish(e){if(!this.connection||this.state!==EI.Connected)return void e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find((e=>\"videoLowTrack\"===e[0]));if(i){i[1].track.close()}return this.doUnpublish(this.connection,t)}async unpublishDataChannel(e){if(!this.connection||this.state!==EI.Connected)return void e.forEach((e=>{const t=this.pendingLocalDataChannels.indexOf(e);-1!==t&&this.pendingLocalDataChannels.splice(t,1)}));const t=this.filterTobeUnpublishedDataChannels(e);return 0!==t.length?(t.forEach((e=>{const t=this.localDataChannels.indexOf(e);-1!==t&&this.localDataChannels.splice(t,1)})),0===this.localDataChannels.length&&await this.connection.stopDataChannels(this.store.uid),t.map((e=>e.id))):void 0}async unpublishLowStream(){if(!this.connection||this.state!==EI.Connected)return;const e=this.localTrackMap.get(_I.LocalVideoLowTrack);if(!e)return;e.track.close();const t=[[_I.LocalVideoLowTrack,e]];return this.doUnpublish(this.connection,t)}async doUnpublish(e,t){const i=this.createGatewayUnpublishMessage(t);return await e.stopSending(t.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&this.statsUploader.stopUploadUplinkStats(),i}async subscribeDataChannel(e,t){if(!this.connection||this.state!==EI.Connected)throw new Vg(xg.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");const i=t.filter((t=>{var i;return!(null!==(i=this.remoteDataChannelMap.get(e))&&void 0!==i&&i.get(t.id))}));if(0!==i.length)return await this.connection.createDataChannels(e.uid,i),i.forEach((t=>{var i;this.remoteDataChannelMap.has(e)?null===(i=this.remoteDataChannelMap.get(e))||void 0===i||i.set(t.id,t):this.remoteDataChannelMap.set(e,new Map([[t.id,t]]));const n=this.pendingRemoteDataChannels.findIndex((i=>{let{user:n,id:r}=i;return n.uid===e.uid&&r===t.id}));-1!==n&&this.pendingRemoteDataChannels.splice(n,1)})),i.map((e=>e.id))}async subscribe(e,t,i,n,r){var s;if(!this.connection||this.state!==EI.Connected)throw new Vg(xg.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");if(null!==(s=this.remoteUserMap.get(e))&&void 0!==s&&s.has(t))return;let o,a,c;if(r){const i=r.find((e=>{let{stream_type:i}=e;return i===t}));if(!i)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot subscribe to remote \".concat(t,\" for user: \").concat(e.uid,\" because subscribe answer from gateway does not contain stream_type: \").concat(t,\".\"));const n=await this.connection.receive(t,i.ssrcs,String(e._uintid),i.attributes);this.connection instanceof WL&&(c=n.transceiver),o=n.track,a=n.id}else{const r=await this.connection.receive(t,[{ssrcId:i,rtx:n}],String(e._uintid),void 0);this.connection instanceof WL&&(c=r.transceiver),o=r.track,a=r.id}t===hI.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(o):(e._audioTrack=new Ob(o,e.uid,e._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),c&&e._audioTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(o):(e._videoTrack=new wb(o,e.uid,e._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),c&&e._videoTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._videoTrack));const d=this.remoteUserMap.get(e);d?d.set(t,a):this.remoteUserMap.set(e,new Map([[t,a]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadDownlinkStats();const l=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));-1!==l&&(this.pendingRemoteTracks.splice(l,1),this.emit(mI.MediaReconnectEnd,e.uid))}async massSubscribe(e){return this.massSubscribeNoLock(e)}async massSubscribeNoLock(e){if(!this.connection||this.state!==EI.Connected)throw new Vg(xg.INVALID_OPERATION,\"Cannot subscribeAll remote users when peerConnection disconnected.\");e=e.filter((e=>{var t;let{user:i,mediaType:n}=e;return!(null!==(t=this.remoteUserMap.get(i))&&void 0!==t&&t.has(n))}));const t=await this.connection.batchReceive(e.map((e=>{let{user:t,mediaType:i,ssrcId:n,rtxSsrcId:r}=e;return{kind:i,ssrcMsg:[{ssrcId:n,rtx:r}],mslabel:String(t._uintid)}})));e.forEach(((e,i)=>{let{user:n,mediaType:r}=e;const{track:s,id:o,transceiver:a}=t[i];r===hI.AUDIO?(n._audioTrack?n._audioTrack._updateOriginMediaStreamTrack(s):(n._audioTrack=new Ob(s,n.uid,n._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(n._audioTrack.getTrackId()))),a&&n._audioTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(n,n._audioTrack)):(n._videoTrack?n._videoTrack._updateOriginMediaStreamTrack(s):(n._videoTrack=new wb(s,n.uid,n._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(n._videoTrack.getTrackId()))),a&&n._videoTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(n,n._videoTrack));const c=this.remoteUserMap.get(n);c?c.set(r,o):this.remoteUserMap.set(n,new Map([[r,o]])),this.statsCollector.addRemoteStats(n.uid),this.statsUploader.startUploadDownlinkStats();const d=this.pendingRemoteTracks.findIndex((e=>{let{user:t,kind:i}=e;return t.uid===n.uid&&r===i}));-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(mI.MediaReconnectEnd,n.uid))}))}async unsubscribe(e,t,i){const n=this.pendingRemoteTracks.filter((i=>{let{user:n,kind:r}=i;return void 0!==t?n.uid===e.uid&&t===r:n.uid===e.uid}));if(n.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.connection&&this.state===EI.Connected||i||n.forEach((t=>{let{kind:i}=t;var n;if(i===hI.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===hI.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.connection||this.state!==EI.Connected)return;const r=this.filterTobeUnSubscribedTracks(e,t);if(0===r.length)return;await this.connection.stopReceiving(r.map((e=>{let[,{id:t}]=e;return t})));const s=this.createUnsubscribeMessage(r);return this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),r.forEach((e=>{let[t,{kind:n}]=e;var r,s;n===hI.VIDEO&&t._videoSSRC&&(null===(r=this.connection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(n===hI.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(s=t._videoTrack)||void 0===s||s._destroy(),t._videoTrack=void 0);else if(n===hI.AUDIO){var o;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}})),s}async unsubscribeDataChannel(e,t){if(t.forEach((e=>{const t=this.pendingRemoteDataChannels.findIndex((t=>t.id===e.id));-1!==t&&this.pendingRemoteDataChannels.splice(t,1)})),!this.connection)return;const i=this.filterTobeUnSubscribedDataChannels(e,t);if(0===i.length)return;t.forEach((e=>{e._close()}));const n=this.remoteDataChannelMap.get(e);return i.forEach((e=>{n&&n.delete(e.id)})),n&&0===n.size&&(this.remoteDataChannelMap.delete(e),await this.connection.stopDataChannels(e.uid)),i.map((e=>e.id))}async massUnsubscribe(e){return this.massUnsubscribeNoLock(e)}async massUnsubscribeNoLock(e){let t=[];for(const{user:i,mediaType:n}of e){const e=this.pendingRemoteTracks.filter((e=>{let{user:t,kind:r}=e;return void 0!==n?t.uid===i.uid&&n===r:t.uid===i.uid}));e.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),t=t.concat(e)}if(!this.connection||this.state!==EI.Connected)return void t.forEach((e=>{let{user:t,kind:i}=e;var n;if(i===hI.AUDIO)null===(n=t._audioTrack)||void 0===n||n._destroy(),t._audioTrack=void 0;else if(i===hI.VIDEO){var r;null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0}}));const i=cS(e).call(e,((e,t)=>{let{user:i,mediaType:n}=t;const r=this.filterTobeUnSubscribedTracks(i,n);return e.concat(r)}),[]);if(0===i.length)return;await this.connection.stopReceiving(i.map((e=>{let[,{id:t}]=e;return t})));const n=this.createUnsubscribeAllMessage(i);return this.withdrawRemoteTracks(i),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),i.forEach((e=>{let[t,{kind:i}]=e;var n,r;i===hI.VIDEO&&t._videoSSRC&&(null===(n=this.connection)||void 0===n||n.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===hI.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0;else if(i===hI.AUDIO){var s;this.unbindRemoteTrackEvents(t._audioTrack),null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}})),n}async muteRemote(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===hI.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.connection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(_I.LocalAudioTrack);if((null==t?void 0:t.track)instanceof tb){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==_I.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===_I.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===_I.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}getAllDataChannels(){return this.localDataChannels}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(_I.LocalAudioTrack),s=n?this.localTrackMap.get(_I.LocalVideoLowTrack):this.localTrackMap.get(_I.LocalVideoTrack);rv.publish(this.store.sessionId,{eventElapse:cD.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==s?void 0:s.track.getTrackLabel(),screenshare:-1!==(null==s?void 0:s.track._hints.indexOf(ky.SCREEN_TRACK)),audio:!!i,video:!!s,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var s;i||(i=[]);const o=i.find((e=>e instanceof ZA)),a=n?null===(s=this.localTrackMap.get(_I.LocalVideoTrack))||void 0===s?void 0:s.track:i.find((e=>e instanceof Sb));rv.publish(this.store.sessionId,{eventElapse:cD.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==o?void 0:o.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(ky.SCREEN_TRACK)),audio:!!o,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===hI.VIDEO?i._videoSSRC:i._audioSSRC;r&&rv.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===hI.VIDEO,audio:n===hI.AUDIO,peerid:i.uid,subscribeRequestid:n===hI.VIDEO?i._videoSSRC:i._audioSSRC,p2pid:this.store.p2pId,eventElapse:cD.measureFromSubscribeStart(this.store.clientId,r)})}reset(){KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.reset\")),this.mutex=new YT(\"P2PChannel-mutex\"),this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.shouldForwardP2PCreation&&(this.connection=this.store.useDataChannel?new sk({},this.store):this.isPlanB?new ML({},this.store):new WL({},this.store),this.bindConnectionEvents(this.connection)),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(_I.LocalAudioTrack);if((null==e?void 0:e.track)instanceof tb){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.iceFailedCount=0,this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.localDataChannels=[],this.remoteDataChannelMap.clear(),this.pendingLocalDataChannels=[],this.pendingRemoteDataChannels=[],this.state=EI.Disconnected}getStats(){var e;return null===(e=this.connection)||void 0===e?void 0:e.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.connection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(_I.LocalVideoTrack);if(e)return{width:e.track._videoWidth||0,height:e.track._videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof Sb||t&&t.track instanceof ZA?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(_I.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=Zu(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.connection&&(KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.disconnectForReconnect closing P2PConnection\")),this.state=EI.Reconnecting,kC(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0,this.shouldForwardP2PCreation&&(this.connection=this.store.useDataChannel?new sk({},this.store):this.isPlanB?new ML({},this.store):new WL({},this.store),this.bindConnectionEvents(this.connection)),0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case _I.LocalVideoTrack:Pr(t=n._hints).call(t,ky.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case _I.LocalAudioTrack:n instanceof tb?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case _I.LocalVideoLowTrack:}})),this.emit(mI.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(hu(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(mI.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),0!==this.localDataChannels.length&&(this.localDataChannels.forEach((e=>{this.pendingLocalDataChannels.push(e)})),this.localDataChannels.length=0),0!==this.remoteDataChannelMap.size&&(Array.from(this.remoteDataChannelMap.entries()).forEach((e=>{let[t,i]=e;Array.from(hu(i).call(i)).forEach((e=>{this.setPendingRemoteDataChannel(t,e)}))})),this.remoteDataChannelMap.clear()),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel disconnected, waiting to reconnect.\")))}hasPendingRemoteDataChannel(e,t){for(const i of this.pendingRemoteDataChannels){const{user:n,id:r}=i;if((e instanceof NP?e.uid:e)===n.uid&&r===t)return!0}return!1}setPendingRemoteDataChannel(e,t){this.hasPendingRemoteDataChannel(e,t)||this.pendingRemoteDataChannels.push({user:e,id:t})}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof NP?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}restartICE(e){var t=this;return BP((function*(){if(!t.connection||t.state!==EI.Connected||t.connection instanceof sk)return;const i=yield jP(t.mutex.lock(\"From P2PChannel.restartICE\"));let n;try{n=yield jP(t.connection.restartICE(e));const r=yield jP(n.next());if(r.done)return;const s=r.value,o=yield s;switch(t.reportPCDisconnectedOrFailed(e),e){case uI.TCP:t._pcStatsUploadType=pI.TCP_RESTART;break;case uI.RELAY:t._pcStatsUploadType=pI.RELAY_RESTART;break;default:t._pcStatsUploadType=pI.OLD_RESTART}t._isInRestartIce=!0,n.next(o)}catch(e){var r;null===(r=n)||void 0===r||r.throw(e)}finally{i()}}))()}getUplinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats(),t=this.localTrackMap.get(_I.LocalVideoTrack),i=this.localTrackMap.get(_I.LocalAudioTrack),n=e.videoSend.find((e=>e.ssrc===(null==t?void 0:t.ssrcs[0].ssrcId))),r=e.audioSend.find((e=>e.ssrc===(null==i?void 0:i.ssrcs[0].ssrcId)));if(!n||!r)return 1;const s=TT(this,mI.NeedSignalRTT),o=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=o&&a?(o+a)/2:o||a,d=(c&&s?(c+s)/2:c||s)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,h=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,u=null==t?void 0:t.track;if(u&&u._encoderConfig&&-1===u._hints.indexOf(ky.SCREEN_TRACK)){const t=u._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return av[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][h]}}return h}getDownlinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,s=n._videoSSRC,o=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===s));if(!o&&!a)return void(t+=1);const c=TT(this,mI.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,h=o?o.jitterMs:void 0,u=e.recvPacketLossRate;let p=.7*u*100/50+.3*l/1500;h&&(p=.6*u*100/50+.2*l/1500+.2*h/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new tg(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}filterTobePublishedTracks(e,t,i){const n=[],r=_A(),s=this.getAllTracks();e=yT(e=e.filter((e=>-1===s.indexOf(e))));let o=!1,a=!1;for(const s of e){if(s instanceof Sb&&(this.localTrackMap.has(_I.LocalVideoTrack)||o?new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:s,type:_I.LocalVideoTrack}),o=!0),t)){const e=this.getLowVideoTrack(s,i);n.push({track:e,type:_I.LocalVideoLowTrack})}if(s instanceof ZA){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(e){if(!(e.track instanceof tb))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(s._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(s),this.bindLocalAudioTrackEvents(s,!0)}else if(a){const e=n.find((e=>{let{type:t}=e;return t===_I.LocalAudioTrack}));if(!(e.track instanceof tb))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(s._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(s)}else{if(!r.webAudioMediaStreamDest||s instanceof tb||s._bypassWebAudio)n.push({track:s,type:_I.LocalAudioTrack});else{const e=new tb;e.addAudioTrack(s),n.push({track:e,type:_I.LocalAudioTrack})}a=!0}}}return n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=yT(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof ZA){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(!e)continue;e.track instanceof tb?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([_I.LocalAudioTrack,e]),e.track.close())):t.push([_I.LocalAudioTrack,e])}if(i instanceof Sb){const e=this.localTrackMap.get(_I.LocalVideoTrack);if(!e)continue;t.push([_I.LocalVideoTrack,e]);const i=this.localTrackMap.get(_I.LocalVideoLowTrack);i&&t.push([_I.LocalVideoLowTrack,i])}}return t}filterTobePublishedDataChannels(e){return e=(e=yT(e)).filter((e=>-1===this.localDataChannels.findIndex((t=>t.id===e.id))))}filterTobeUnpublishedDataChannels(e){return e=(e=(e=yT(e)).filter((e=>-1!==this.localDataChannels.indexOf(e)))).filter((e=>e._originDataChannel))}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case _I.LocalVideoTrack:t.addListener(Ly.GET_STATS,this.handleGetLocalVideoStats),t.addListener(Ly.GET_RTC_STATS,this.handleGetRTCStats),t.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(Ly.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(Ly.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.addListener(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case _I.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case _I.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof tb?e.trackList.forEach((e=>{e.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Ly.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener(Ly.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case _I.LocalVideoTrack:t.off(Ly.GET_STATS,this.handleGetLocalVideoStats),t.off(Ly.GET_RTC_STATS,this.handleGetRTCStats),t.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(Ly.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(Ly.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.off(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case _I.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case _I.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof tb?e.trackList.forEach((e=>{e.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Ly.GET_STATS,this.handleGetLocalAudioStats),e.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off(Ly.GET_STATS,this.handleGetLocalAudioStats),e.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof wb&&t.addListener(Ly.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof Ob&&t.addListener(Ly.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(Ly.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(hI.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(hI.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e,t){return e.map(((e,i)=>{var n;let r,s,{track:o,type:a}=e;switch(a){case _I.LocalAudioTrack:r=$v.Audio,s={dtx:o instanceof $A&&o._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case _I.LocalVideoTrack:r=Pr(n=o._hints).call(n,ky.SCREEN_TRACK)?$v.Screen:$v.High,s=hk(hk({},fD(o)),{},{codec:this.store.codec});break;case _I.LocalVideoLowTrack:r=$v.Low,s=hk(hk({},fD(o)),{},{codec:this.store.codec})}return{stream_type:r,attributes:s,ssrcs:t[i]}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}assignLocalTracks(e,t){e.forEach(((e,i)=>{let{track:n,type:r}=e;this.localTrackMap.set(r,{track:n,id:t[i].id,ssrcs:t[i].localSSRC})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{if(KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onConnectionStateChange(\").concat(t,\")\")),this.emit(mI.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"connected\"===t&&(this._restartTimer&&(clearTimeout(this._restartTimer),this._restartTimer=void 0),(this._isFirstConnected||this._isInRestartIce)&&this.reportPCStats(Date.now(),!0,this._pcStatsUploadType),this._isInRestartIce=!1,this._isFirstConnected=!1,this._isStartRestartIce=!1),kC(\"NEW_ICE_RESTART\")){var i;if(Pr(i=this._restartStates).call(i,t)){if(this._isStartRestartIce)return;this._isStartRestartIce=!0;const t=t=>{if(\"disconnected\"===e.iceConnectionState||\"checking\"===e.iceConnectionState||\"failed\"===e.iceConnectionState){KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] start use restartICE, type is \").concat(t));\"CONNECTED\"===TT(this,mI.QueryClientConnectionState)&&this.emit(mI.RequestRestartICE,t)}},i=()=>{\"disconnected\"!==e.iceConnectionState&&\"checking\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),KC.debug(\"[\".concat(this.store.clientId,\"] P2PConnection disconnected timeout, force reconnect\")),setTimeout((()=>this.emit(mI.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())},n=kC(\"ICE_RESTART_INTERVAL\");return void(this._restartTimer=window.setTimeout((()=>{if(kC(\"JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE\")&&_A().supportPCSetConfiguration)t(uI.RELAY),this._restartTimer=window.setTimeout(i,n);else if(Rg())t(uI.UDP),this._restartTimer=window.setTimeout(i,4e3);else{if(t(uI.TCP),_A().supportPCSetConfiguration)return void(this._restartTimer=window.setTimeout((()=>{t(uI.RELAY),this._restartTimer=window.setTimeout(i,n)}),n));this._restartTimer=window.setTimeout(i,n)}}),800))}}else{if(\"disconnected\"===t&&\"disconnected\"===e.iceConnectionState)return setTimeout((()=>{if(\"disconnected\"===e.iceConnectionState&&kC(\"ICE_RESTART\")){\"CONNECTED\"===TT(this,mI.QueryClientConnectionState)&&this.emit(mI.RequestRestartICE)}}),800),void setTimeout((()=>{\"disconnected\"===e.peerConnectionState&&(KC.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection disconnected timeout 4000ms, force reconnect\")),this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isInRestartIce=!1,setTimeout((()=>this.emit(mI.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())}),4e3);\"failed\"===t&&(KC.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection state failed, force reconnect\")),this.reportPCDisconnectedOrFailed(),setTimeout((()=>this.emit(mI.P2PLost)),0),this.iceFailedCount+=1,await this.requestReconnect())}},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),rv.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:oT.TRACER}).onSuccess(),this.emit(mI.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(By.FIRST_FRAME_DECODED),rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_AUDIO_DECODE,QC.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_AUDIO_RECEIVED,QC.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_VIDEO_RECEIVED,QC.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(mI.ConnectionTypeChange,i),KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(vD(t)),\" -> \").concat(JSON.stringify(vD(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(vD(t)),\" -> \").concat(JSON.stringify(vD(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(_I.LocalAudioTrack);if(e instanceof ZA&&(null==i?void 0:i.track)instanceof tb)return i.track.isActive||t.push([_I.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===_I.LocalVideoTrack)){const e=this.localTrackMap.get(_I.LocalVideoLowTrack);e&&t.push([_I.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(_I.LocalAudioTrack);if(e instanceof ZA&&(null==i?void 0:i.track)instanceof tb)return i.track.isActive&&t.push([_I.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===_I.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(_I.LocalVideoLowTrack);e&&t.push([_I.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}filterTobeUnSubscribedDataChannels(e,t){const i=[];return t.forEach((t=>{var n;null!==(n=this.remoteDataChannelMap.get(e))&&void 0!==n&&n.has(t.id)&&i.push(t)})),i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case hI.VIDEO:return void(i._videoSSRC&&t.push({stream_type:hI.VIDEO,ssrcId:i._videoSSRC}));case hI.AUDIO:return void(i._audioSSRC&&t.push({stream_type:hI.AUDIO,ssrcId:i._audioSSRC}))}})),t}createUnsubscribeAllMessage(e){const t=new Map;return e.forEach((e=>{let[i,{kind:n}]=e;if(t.has(i)){let e=t.get(i);n===hI.VIDEO?e|=iI.Video:e|=iI.Audio,t.set(i,e)}else n===hI.VIDEO?t.set(i,iI.Video):t.set(i,iI.Audio)})),{users:Array.from(t.entries()).map((e=>{let[t,i]=e;return{stream_id:t.uid,stream_type:i}}))}}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(_I.LocalVideoTrack),i=this.localTrackMap.get(_I.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.connection){return\"connected\"!==this.connection.peerConnectionState}return!0}mapPubResToRemoteConfig(e,t){return e.map(((e,i)=>{var n;let{stream_type:r}=e;return null===(n=t.find((e=>{let{stream_type:t}=e;return r===t})))||void 0===n?void 0:n.attributes}))}async tryToUnmuteAudio(e){for(let i=0;i<e.length;i++)if(e[i]instanceof ZA){var t;const n=this.filterTobeUnmutedTracks(e[i]);if(0===n.length)continue;await(null===(t=this.connection)||void 0===t?void 0:t.unmuteLocal(n.map((e=>{let[,{id:t}]=e;return t}))));const r=this.createUnmuteMessage(n);return void await gT(this,mI.RequestUnmuteLocal,r)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=()=>this.getStats(),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.connection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(mI.RequestUploadStats,e,t),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await UT(zT(this.dtlsFailedCount,JT)),this.emit(mI.RequestReconnect)}async reconnectP2P(){const e=Array.from(this.localTrackMap.entries()),t=this.createGatewayUnpublishMessage(e);Array.from(this.remoteUserMap.entries()),t.length>0&&await fT(this,mI.RequestUnpublishForReconnectPC,t),this.disconnectForReconnect(),this.emit(mI.RequestReconnectPC)}canPublishLowStream(){return this.localTrackMap.has(_I.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof Sb))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof Sb)).length>1)throw new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof ZA)).length>1&&(e.some((e=>e instanceof ZA&&e._bypassWebAudio))||!_A().webAudioMediaStreamDest))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof Sb&&this.pendingLocalTracks.some((e=>e instanceof Sb)))throw new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof ZA&&this.pendingLocalTracks.some((e=>e instanceof ZA))&&(!_A().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof ZA&&e._bypassWebAudio))))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=!kC(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&_A().supportDualStreamEncoding,n=hk(hk({},{width:160,height:120,framerate:15,bitrate:50}),t);let r;r=i?e._mediaStreamTrack.clone():KL(e,n);const s=xT(8,\"track-low-\"),o=new Sb(r,hk(hk({},i&&{scaleResolutionDownBy:CD(n,e)}),{},{frameRate:n.framerate,bitrateMax:n.bitrate,bitrateMin:n.bitrate}),void 0,void 0,s);return o.on(Vy.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,My.LOW_STREAM)})),o._hints.push(ky.LOW_STREAM),e.addListener(Ly.NEED_CLOSE,(()=>{o.close()})),o}async globalLock(){return this.mutex.lock(\"From P2PChannel.globalLock\")}async reportPCStats(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this.connection&&this.connection instanceof WL){var r,s,o,a;const c=this.store.keyMetrics.descriptionStart||0,{iceConnectionState:d,dtlsTransportState:l,peerConnectionState:h}=this.connection,{local:u,remote:p}=await this.connection.getSelectedCandidatePair();rv.pcStats(this.store.sessionId,{startTime:c,eventElapse:e-c||0,iceconnectionsate:d,dtlsstate:l,connectionstate:h,intSucc:t?1:2,error:n,selectedLocalCandidateProtocol:null!==(r=null==u?void 0:u.protocol)&&void 0!==r?r:\"\",selectedLocalCandidateType:null!==(s=u.candidateType)&&void 0!==s?s:\"\",selectedLocalCandidateAddress:\"\".concat(u.address,\":\").concat(u.port),selectedRemoteCandidateProtocol:null!==(o=p.protocol)&&void 0!==o?o:\"\",selectedRemoteCandidateType:null!==(a=p.candidateType)&&void 0!==a?a:\"\",selectedRemoteCandidateAddress:\"\".concat(p.address,\":\").concat(p.port),restartCnt:i})}}reportVideoFirstFrameDecoded(e,t,i,n){var r;const s=Array.from(hu(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(s){n||this.store.subscribe(s.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,o=r.subscribe.find((e=>e.userId===s.uid&&\"video\"===e.type));rv.firstRemoteVideoDecode(this.store.sessionId,XC.FIRST_VIDEO_DECODE,QC.FIRST_VIDEO_DECODE,{peer:s._uintid,videowidth:t,videoheight:i,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==o?void 0:o.subscribeEnd)||0,subscriberStart:(null==o?void 0:o.subscribeStart)||0,videoAddNotify:(null==o?void 0:o.streamAdded)||0,state:n?1:0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.connection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const s=await this.connection.getRemoteSSRC(r);return void 0!==s&&s!==i}resetConnection(e){KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] reset connection to \").concat(e)),this.state===EI.Connected?(KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] fallback to websocket but P2PChannel state still connected, disconnect first\")),this.disconnectForReconnect()):(this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.shouldForwardP2PCreation&&(this.connection=e===nI.datachannel?new sk({},this.store):this.isPlanB?new ML({},this.store):new WL({},this.store),this.bindConnectionEvents(this.connection)))}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===_I.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,My.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}reportPCDisconnectedOrFailed(e){this.connection&&this.connection instanceof WL&&(\"disconnected\"!==this.connection.iceConnectionState&&\"checking\"!==this.connection.iceConnectionState&&\"failed\"!==this.connection.iceConnectionState||(this._isFirstConnected?(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isFirstConnected=!1):this._pcStatsUploadType===pI.TCP_RESTART&&e===uI.RELAY?this.reportPCStats(Date.now(),!1,this._pcStatsUploadType):this.reportPCStats(Date.now(),!1,pI.DISCONNECTED_OR_FAILED)))}}function Ek(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PChannel.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}function mk(e){let t=bk();return function(e,t){let i=e.appId;void 0!==i&&(jk(t,10),kk(t,i));let n=e.cid;void 0!==n&&(jk(t,16),jk(t,n));let r=e.cname;void 0!==r&&(jk(t,26),kk(t,r));let s=e.deviceId;void 0!==s&&(jk(t,34),kk(t,s));let o=e.elapse;void 0!==o&&(jk(t,40),Gk(t,o));let a=e.fileSize;void 0!==a&&(jk(t,48),Gk(t,yk(a)));let c=e.height;void 0!==c&&(jk(t,56),Gk(t,yk(c)));let d=e.jpg;void 0!==d&&(jk(t,66),jk(t,d.length),function(e,t){let i=Dk(e,t.length);e.bytes.set(t,i)}(t,d));let l=e.networkType;void 0!==l&&(jk(t,72),Gk(t,yk(l)));let h=e.osType;void 0!==h&&(jk(t,80),Gk(t,yk(h)));let u=e.requestId;void 0!==u&&(jk(t,90),kk(t,u));let p=e.sdkVersion;void 0!==p&&(jk(t,98),kk(t,p));let _=e.sequence;void 0!==_&&(jk(t,104),Gk(t,yk(_)));let E=e.sid;void 0!==E&&(jk(t,114),kk(t,E));let m=e.timestamp;void 0!==m&&(jk(t,120),Gk(t,m));let f=e.uid;void 0!==f&&(jk(t,128),jk(t,f));let g=e.vid;void 0!==g&&(jk(t,136),jk(t,g));let T=e.width;void 0!==T&&(jk(t,144),Gk(t,yk(T)));let S=e.service;void 0!==S&&(jk(t,152),jk(t,S));let R=e.callbackData;void 0!==R&&(jk(t,162),kk(t,R));let C=e.jpgEncryption;void 0!==C&&(jk(t,168),jk(t,C));let v=e.requestType;void 0!==v&&(jk(t,176),jk(t,v));let I=e.scorePorn;void 0!==I&&(jk(t,185),Fk(t,I));let y=e.scoreSexy;void 0!==y&&(jk(t,193),Fk(t,y));let A=e.scoreNeutral;void 0!==A&&(jk(t,201),Fk(t,A));let b=e.scene;void 0!==b&&(jk(t,208),jk(t,b));let w=e.ossFilePrefix;void 0!==w&&(jk(t,218),kk(t,w));let O=e.serviceVendor;if(void 0!==O)for(let e of O){jk(t,226);let i=bk();Tk(e,i),jk(t,i.limit),Mk(t,i),wk(i)}}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function fk(e){return function(e){let t={};e:for(;!Nk(e);){let i=Bk(e);switch(i>>>3){case 0:break e;case 1:t.code=Bk(e);break;case 2:t.msg=Lk(e,Bk(e));break;case 3:{let i=Sk(e);t.data=gk(e),e.limit=i;break}default:Rk(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function gk(e){let t={};e:for(;!Nk(e);){let i=Bk(e);switch(i>>>3){case 0:break e;case 1:t.requestId=Lk(e,Bk(e));break;case 2:t.requestType=Bk(e)>>>0;break;case 3:t.scorePorn=Vk(e);break;case 4:t.scoreSexy=Vk(e);break;case 5:t.scoreNeutral=Vk(e);break;case 6:t.requestScene=Bk(e)>>>0;break;case 7:t.scene=Bk(e)>>>0;break;default:Rk(e,7&i)}}return t}function Tk(e,t){let i=e.service;void 0!==i&&(jk(t,8),jk(t,i));let n=e.vendor;void 0!==n&&(jk(t,16),jk(t,n));let r=e.token;void 0!==r&&(jk(t,26),kk(t,r));let s=e.callbackUrl;void 0!==s&&(jk(t,34),kk(t,s))}function Sk(e){let t=Bk(e),i=e.limit;return e.limit=e.offset+t,i}function Rk(e,t){switch(t){case 0:for(;128&Uk(e););break;case 2:Ok(e,Bk(e));break;case 5:Ok(e,4);break;case 1:Ok(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Boolean]),Uv(\"design:returntype\",tg)],_k.prototype,\"startP2PConnection\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],_k.prototype,\"connect\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",void 0)],_k.prototype,\"updateRemoteRTPCapabilities\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object,Array,Object,String,String]),Uv(\"design:returntype\",tg)],_k.prototype,\"preConnect\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"publishDataChannel\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"unpublish\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"unpublishDataChannel\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],_k.prototype,\"unpublishLowStream\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"subscribeDataChannel\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Number,Number,Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"subscribe\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"massSubscribe\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Boolean]),Uv(\"design:returntype\",tg)],_k.prototype,\"unsubscribe\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"unsubscribeDataChannel\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],_k.prototype,\"massUnsubscribe\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],_k.prototype,\"muteRemote\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],_k.prototype,\"unmuteRemote\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],_k.prototype,\"hasRemoteMediaWithLock\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],_k.prototype,\"disconnectForReconnect\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],_k.prototype,\"updateBitrateLimit\",null),Mv([Ek,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Number]),Uv(\"design:returntype\",tg)],_k.prototype,\"remoteMediaSsrcChanged\",null);let Ck=new Float32Array(1);new Uint8Array(Ck.buffer);let vk=new Float64Array(1),Ik=new Uint8Array(vk.buffer);function yk(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let Ak=[];function bk(){const e=Ak.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}function wk(e){Ak.push(e)}function Ok(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function Nk(e){return e.offset>=e.limit}function Dk(e,t){let i=e.bytes,n=e.offset,r=e.limit,s=n+t;if(s>i.length){let t=new Uint8Array(2*s);t.set(i),e.bytes=t}return e.offset=s,s>r&&(e.limit=s),n}function Pk(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function Lk(e,t){let i=Pk(e,t),n=String.fromCharCode,r=e.bytes,s=\"�\",o=\"\";for(let e=0;e<t;e++){let a,c,d,l,h=r[e+i];0==(128&h)?o+=n(h):192==(224&h)?e+1>=t?o+=s:(a=r[e+i+1],128!=(192&a)?o+=s:(l=(31&h)<<6|63&a,l<128?o+=s:(o+=n(l),e++))):224==(240&h)?e+2>=t?o+=s:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?o+=s:(l=(15&h)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?o+=s:(o+=n(l),e+=2))):240==(248&h)?e+3>=t?o+=s:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?o+=s:(l=(7&h)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?o+=s:(l-=65536,o+=n(55296+(l>>10),56320+(1023&l)),e+=3))):o+=s}return o}function kk(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}jk(e,n);let r=Dk(e,n),s=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?s[r++]=n:(n<2048?s[r++]=n>>6&31|192:(n<65536?s[r++]=n>>12&15|224:(s[r++]=n>>18&7|240,s[r++]=n>>12&63|128),s[r++]=n>>6&63|128),s[r++]=63&n|128)}}function Mk(e,t){let i=Dk(e,t.limit),n=e.bytes,r=t.bytes;for(let e=0,s=t.limit;e<s;e++)n[e+i]=r[e]}function Uk(e){return e.bytes[Pk(e,1)]}function xk(e,t){let i=Dk(e,1);e.bytes[i]=t}function Vk(e){let t=Pk(e,8),i=e.bytes;return Ik[0]=i[t++],Ik[1]=i[t++],Ik[2]=i[t++],Ik[3]=i[t++],Ik[4]=i[t++],Ik[5]=i[t++],Ik[6]=i[t++],Ik[7]=i[t++],vk[0]}function Fk(e,t){let i=Dk(e,8),n=e.bytes;vk[0]=t,n[i++]=Ik[0],n[i++]=Ik[1],n[i++]=Ik[2],n[i++]=Ik[3],n[i++]=Ik[4],n[i++]=Ik[5],n[i++]=Ik[6],n[i++]=Ik[7]}function Bk(e){let t,i=0,n=0;do{t=Uk(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function jk(e,t){for(t>>>=0;t>=128;)xk(e,127&t|128),t>>>=7;xk(e,t)}function Gk(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,s=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,o=Dk(e,s),a=e.bytes;switch(s){case 10:a[o+9]=r>>>7&1;case 9:a[o+8]=9!==s?128|r:127&r;case 8:a[o+7]=8!==s?n>>>21|128:n>>>21&127;case 7:a[o+6]=7!==s?n>>>14|128:n>>>14&127;case 6:a[o+5]=6!==s?n>>>7|128:n>>>7&127;case 5:a[o+4]=5!==s?128|n:127&n;case 4:a[o+3]=4!==s?i>>>21|128:i>>>21&127;case 3:a[o+2]=3!==s?i>>>14|128:i>>>14&127;case 2:a[o+1]=2!==s?i>>>7|128:i>>>7&127;case 1:a[o]=1!==s?128|i:127&i}}function Wk(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const Hk=new Map([[\"moderation\",1],[\"supervise\",2]]);class Kk extends iT{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(SI.CONNECTION_STATE_CHANGE,t,e)}get inspectType(){return this._inspectType}set inspectType(e){var t;this._inspectMode=cS(t=e.map((e=>Hk.get(e)||0))).call(t,((e,t)=>e+t)),this._inspectType=e}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this.qualityTimer&&(window.clearTimeout(this.qualityTimer),this.qualityTimer=null),this._quality>=1||(this.qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this.qualityRatio}),6e4))}constructor(e){super(),nu(this,\"name\",\"AgoraRTCVideoContentInspect\"),nu(this,\"_connectionState\",gI.CONNECTING),nu(this,\"_innerConnectionState\",void 0),nu(this,\"sequence\",0),nu(this,\"inspectStartTime\",void 0),nu(this,\"workerManagerConnection\",void 0),nu(this,\"workerConnection\",void 0),nu(this,\"workerMessageLengthLimit\",void 0),nu(this,\"inspectIntervalMinimum\",void 0),nu(this,\"qualityRatio\",void 0),nu(this,\"_connectInfo\",void 0),nu(this,\"_cancelTokenSource\",EC.CancelToken.source()),nu(this,\"_retryConfig\",void 0),nu(this,\"wmSequence\",0),nu(this,\"inspectInterval\",void 0),nu(this,\"inspectTimer\",null),nu(this,\"ossFilePrefix\",void 0),nu(this,\"extraInfo\",void 0),nu(this,\"_inspectType\",void 0),nu(this,\"_inspectMode\",void 0),nu(this,\"_quality\",1),nu(this,\"qualityTimer\",null),nu(this,\"_inspectId\",void 0),nu(this,\"_needWorkUrlOnly\",!1),nu(this,\"inspectImage\",(()=>{if(this.connectionState!==gI.CONNECTED)throw new xv(xg.OPERATION_ABORTED,\"content inspect service connection status is \".concat(this.connectionState));this.inspectTimer&&(window.clearInterval(this.inspectTimer),this.inspectTimer=null),this.inspectTimer=window.setInterval((()=>{this.connectionState===gI.CONNECTED?this.requestToInspectImage():KC.debug(\"[\".concat(this._inspectId,\"] Inspect State is not connected , \"),this.connectionState)}),this.inspectInterval<this.inspectIntervalMinimum?this.inspectIntervalMinimum:this.inspectInterval),this.requestToInspectImage()})),this._inspectId=xT(5,\"inspect-\"),this.workerMessageLengthLimit=kC(\"VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT\"),this.inspectIntervalMinimum=kC(\"VIDEO_INSPECT_INTERVAL_MINIMUM\"),this.qualityRatio=kC(\"VIDEO_INSPECT_QUALITY_RATIO\"),this.inspectInterval=e.interval,this.ossFilePrefix=e.ossFilePrefix,this.extraInfo=e.extraInfo,this.inspectType=e.inspectType,this.inspectStartTime=Number(Date.now()),this.workerManagerConnection=new XI(\"worker-manager-\"+this._inspectId,JT),this.on(SI.STATE_CHANGE,((e,t)=>{this._innerConnectionState=e,KC.debug(\"[\".concat(this._inspectId,\"] Inspect operation :\").concat(TI[e],\" \").concat(t||\"\"))})),this.handleWorkerManagerEvents(),this.workerConnection=new XI(\"worker-\"+this._inspectId,JT),this.handleWorkerEvents()}async init(e,t){this.emit(SI.STATE_CHANGE,TI.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new tg(((n,r)=>{this.on(SI.CONNECTION_STATE_CHANGE,((e,t)=>{t===gI.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorkerManager(e)})).catch((e=>{r(e)}))}))}async requestAP(e,t,i){const n=kC(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:s,cname:o,sid:a,token:c,uid:d}=t;oP++;const l=\"image_moderation_api\",h={service_name:l,json_body:JSON.stringify({appId:r,areaCode:s,cname:o,command:\"allocateEdge\",requestId:oP,seq:oP,sid:a,token:c,ts:Date.now(),uid:d+\"\"})};let u,p,_=e[0];return XT((async()=>{u=Date.now();const e=await VD(_,{data:h,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-u,0!==e.code){const t=new xv(xg.UNEXPECTED_RESPONSE,\"image inspect ap error, code\"+e.code,{retry:!0,responseTime:p});throw KC.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new xv(xg.UNEXPECTED_RESPONSE,\"image inspect ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw KC.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new xv(xg.UNEXPECTED_RESPONSE,\"image inspect ap empty server\",{code:t.code,responseTime:p});throw KC.error(e.toString()),e}const n=kC(\"VIDEO_INSPECT_WORKER_MANAGER_HOST\"),r=kC(\"VIDEO_INSPECT_WORKER_MANAGER_PORT\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(r||i)})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,responseTime:p}}),((t,i)=>(rv.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(rv.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==xg.OPERATION_ABORTED&&t.code!==xg.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(SI.STATE_CHANGE,TI.AP_CONNECTED);const{addressList:s}=r;return this.wmSequence++,s}async connectWorkerManager(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._needWorkUrlOnly=t,this.emit(SI.STATE_CHANGE,TI.CONNECT_WORKER_MANAGER),await this.workerManagerConnection.init(e,1e4)}async connectWorker(e){await this.workerConnection.init([e])}handleWorkerManagerEvents(){this.workerManagerConnection.on(Iv.CONNECTED,(async()=>{this.emit(SI.STATE_CHANGE,TI.WORKER_MANAGER_CONNECTED,this.workerManagerConnection.url),this.workerManagerConnection.sendMessage({appId:this._connectInfo.appId,cname:this._connectInfo.cname,uid:this._connectInfo.uid+\"\",sdkVersion:\"4.19.3\",sid:this._connectInfo.sid,seq:this.wmSequence,ts:Number(Date.now()),requestId:Math.floor(1e12*Math.random()),allocate:!0,clientRequest:{command:\"join\"}},!0)})),this.workerManagerConnection.on(Iv.CLOSED,(()=>{this._innerConnectionState<TI.GET_WORKER_MANAGER_RESPONSE&&KC.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is closed before connecting worker\"))})),this.workerManagerConnection.on(Iv.FAILED,(()=>{this._innerConnectionState<TI.GET_WORKER_MANAGER_RESPONSE&&KC.debug(\"[\".concat(this._inspectId,\"] Connecting inspect worker manager is failed before connecting worker\"))})),this.workerManagerConnection.on(Iv.RECONNECTING,(()=>{this._innerConnectionState<TI.GET_WORKER_MANAGER_RESPONSE&&KC.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is reconnecting before connecting worker\"))})),this.workerManagerConnection.on(Iv.ON_MESSAGE,(async e=>{this.emit(SI.STATE_CHANGE,TI.GET_WORKER_MANAGER_RESPONSE);const t=this.workerManagerConnection.url;this.workerManagerConnection.close();const i=JSON.parse(e.data);if(200!==i.code)throw KC.error(\"[\".concat(this._inspectId,\"] Unexpected code \").concat(i.code,\" from worker manager\")),new xv(xg.UNEXPECTED_RESPONSE,\"response code of worker is unexpected\",i);if(!(i.serverResponse&&i.serverResponse.portWss&&t))throw KC.error(\"[\".concat(this._inspectId,\"] Unexpected content from worker manager : \").concat(JSON.stringify(i))),new xv(xg.UNEXPECTED_RESPONSE,\"response content of worker is unexpected\",i);{const e=kC(\"VIDEO_INSPECT_WORKER_PORT\")||i.serverResponse.portWss,n=t.replace(/:\\d+\\/?$/,\":\".concat(e));this.emit(SI.STATE_CHANGE,TI.CONNECT_WORKER,n),this._needWorkUrlOnly?this.emit(SI.REQUEST_NEW_WORKER_URL,n):await this.connectWorker(n)}})),this.workerManagerConnection.on(Iv.WILL_RECONNECT,((e,t,i)=>{i(e)})),this.workerManagerConnection.on(Iv.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}handleWorkerEvents(){this.workerConnection.on(Iv.CONNECTED,(async()=>{this.emit(SI.STATE_CHANGE,TI.WORKER_CONNECTED,this.workerConnection.url),this.connectionState=gI.CONNECTED})),this.workerConnection.on(Iv.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const i=fk(new Uint8Array(e.data));if(kC(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")&&KC.debug(\"[\".concat(this._inspectId,\"] Response message for worker of inspect content \"),JSON.stringify(i)),200===i.code){if(Array.isArray(this.inspectType)&&1===this.inspectType.length&&\"supervise\"===this.inspectType[0])return void this.emit(SI.INSPECT_RESULT,void 0,void 0);if(i.data&&i.data.scorePorn&&i.data.scoreSexy&&i.data.scoreNeutral){var t;const e={porn:i.data.scorePorn,sexy:i.data.scoreSexy,neutral:i.data.scoreNeutral},n=cS(t=Object.keys(e)).call(t,((t,i)=>e[t]>e[i]?t:i),\"porn\"),r=Object.keys(e).find((e=>e===n));this.emit(SI.INSPECT_RESULT,r)}else this.emit(SI.INSPECT_RESULT,void 0,new xv(xg.UNEXPECTED_RESPONSE,i.code+\"\",\"There is an unexpected data on message\"))}else this.emit(SI.INSPECT_RESULT,void 0,new xv(xg.UNEXPECTED_RESPONSE,i.code+\"\",i.msg))}else KC.error(\"[\".concat(this._inspectId,\"] Unexpected message type from worker\")),this.emit(SI.INSPECT_RESULT,void 0,new xv(xg.UNEXPECTED_RESPONSE,\"invalid worker message type\"))})),this.workerConnection.on(Iv.CLOSED,(()=>{this.connectionState=gI.CLOSED})),this.workerConnection.on(Iv.FAILED,(()=>{this.connectionState=gI.CLOSED})),this.workerConnection.on(Iv.RECONNECTING,(()=>{this.connectionState=this.connectionState===gI.CONNECTED?gI.RECONNECTING:gI.CONNECTING})),this.workerConnection.on(Iv.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this.workerConnection.on(Iv.REQUEST_NEW_URLS,((e,t)=>{this.workerManagerConnection.close(),this.once(SI.REQUEST_NEW_WORKER_URL,(t=>{e([t])})),this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then((e=>{this.connectWorkerManager(e,!0)})).catch((e=>{t(e)}))}))}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){this.sequence++;const e=TT(this,SI.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void this.emit(SI.INSPECT_RESULT,void 0,new xv(xg.INVALID_OPERATION,\"Only the track being played can be inspected\"));const i=await this.generateRequestData(e,t);this.workerConnection.sendMessage(i,!0,!0)}else this.emit(SI.INSPECT_RESULT,void 0,new xv(xg.INVALID_OPERATION,\"Only the track being published can be inspected\"))}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:s,sid:o,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await fb(d,i,n),h=this.sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+xT(12,\"\"),u={appId:i,cid:r,cname:n,deviceId:\"\",elapse:Kk.intToLong(Number(c-this.inspectStartTime)),fileSize:l.byteLength,jpgEncryption:2,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:h,sdkVersion:\"4.19.3\",sequence:this.sequence,sid:o,timestamp:Kk.intToLong(c),uid:a,vid:s,service:this._inspectMode,callbackData:this.extraInfo,ossFilePrefix:this.ossFilePrefix};void 0===this.extraInfo&&delete u.callbackData,void 0===this.ossFilePrefix&&delete u.ossFilePrefix;const p=mk(u);if(p.byteLength<this.workerMessageLengthLimit){if(kC(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Wk(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Wk(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},u);delete e.jpg,KC.debug(\"[\".concat(this._inspectId,\"] Request message for worker of inspect content \"),JSON.stringify(e))}return p}{const t=this.quality*this.qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:s,sid:o,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=EC.CancelToken.source(),this.workerManagerConnection&&this.workerManagerConnection.close(),this.workerConnection&&this.workerConnection.close(),this.inspectTimer&&window.clearInterval(this.inspectTimer),this.inspectTimer=null,this.connectionState=gI.CLOSED,this.emit(SI.STATE_CHANGE,TI.CLOSED)}}function Yk(e){let t=function(){const e=Xk.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}();return function(e,t){let i=e.appId;void 0!==i&&(aM(t,10),nM(t,i));let n=e.cid;void 0!==n&&(aM(t,16),aM(t,n));let r=e.cname;void 0!==r&&(aM(t,26),nM(t,r));let s=e.deviceId;void 0!==s&&(aM(t,34),nM(t,s));let o=e.elapse;void 0!==o&&(aM(t,40),dM(t,o));let a=e.fileSize;void 0!==a&&(aM(t,48),dM(t,zk(a)));let c=e.height;void 0!==c&&(aM(t,56),dM(t,zk(c)));let d=e.jpg;void 0!==d&&(aM(t,66),aM(t,d.length),tM(t,d));let l=e.networkType;void 0!==l&&(aM(t,72),dM(t,zk(l)));let h=e.osType;void 0!==h&&(aM(t,80),dM(t,zk(h)));let u=e.requestId;void 0!==u&&(aM(t,90),nM(t,u));let p=e.sdkVersion;void 0!==p&&(aM(t,98),nM(t,p));let _=e.sequence;void 0!==_&&(aM(t,104),dM(t,zk(_)));let E=e.sid;void 0!==E&&(aM(t,114),nM(t,E));let m=e.timestamp;void 0!==m&&(aM(t,120),dM(t,m));let f=e.uid;void 0!==f&&(aM(t,128),aM(t,f));let g=e.vid;void 0!==g&&(aM(t,136),aM(t,g));let T=e.width;void 0!==T&&(aM(t,144),dM(t,zk(T)));let S=e.service;void 0!==S&&(aM(t,152),aM(t,S));let R=e.callbackData;void 0!==R&&(aM(t,162),aM(t,R.length),tM(t,R));let C=e.ticket;void 0!==C&&(aM(t,170),nM(t,C))}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function qk(e){return function(e){let t={};e:for(;!Zk(e);){let i=oM(e);switch(i>>>3){case 0:break e;case 1:t.code=oM(e);break;case 2:t.msg=iM(e,oM(e));break;case 3:t.requestId=iM(e,oM(e));break;case 4:t.timestamp=cM(e,!1);break;default:Jk(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function Jk(e,t){switch(t){case 0:for(;128&rM(e););break;case 2:Qk(e,oM(e));break;case 5:Qk(e,4);break;case 1:Qk(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}function zk(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let Xk=[];function Qk(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function Zk(e){return e.offset>=e.limit}function $k(e,t){let i=e.bytes,n=e.offset,r=e.limit,s=n+t;if(s>i.length){let t=new Uint8Array(2*s);t.set(i),e.bytes=t}return e.offset=s,s>r&&(e.limit=s),n}function eM(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function tM(e,t){let i=$k(e,t.length);e.bytes.set(t,i)}function iM(e,t){let i=eM(e,t),n=String.fromCharCode,r=e.bytes,s=\"�\",o=\"\";for(let e=0;e<t;e++){let a,c,d,l,h=r[e+i];0==(128&h)?o+=n(h):192==(224&h)?e+1>=t?o+=s:(a=r[e+i+1],128!=(192&a)?o+=s:(l=(31&h)<<6|63&a,l<128?o+=s:(o+=n(l),e++))):224==(240&h)?e+2>=t?o+=s:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?o+=s:(l=(15&h)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?o+=s:(o+=n(l),e+=2))):240==(248&h)?e+3>=t?o+=s:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?o+=s:(l=(7&h)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?o+=s:(l-=65536,o+=n(55296+(l>>10),56320+(1023&l)),e+=3))):o+=s}return o}function nM(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}aM(e,n);let r=$k(e,n),s=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?s[r++]=n:(n<2048?s[r++]=n>>6&31|192:(n<65536?s[r++]=n>>12&15|224:(s[r++]=n>>18&7|240,s[r++]=n>>12&63|128),s[r++]=n>>6&63|128),s[r++]=63&n|128)}}function rM(e){return e.bytes[eM(e,1)]}function sM(e,t){let i=$k(e,1);e.bytes[i]=t}function oM(e){let t,i=0,n=0;do{t=rM(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function aM(e,t){for(t>>>=0;t>=128;)sM(e,127&t|128),t>>>=7;sM(e,t)}function cM(e,t){let i,n=0,r=0,s=0;return i=rM(e),n=127&i,128&i&&(i=rM(e),n|=(127&i)<<7,128&i&&(i=rM(e),n|=(127&i)<<14,128&i&&(i=rM(e),n|=(127&i)<<21,128&i&&(i=rM(e),r=127&i,128&i&&(i=rM(e),r|=(127&i)<<7,128&i&&(i=rM(e),r|=(127&i)<<14,128&i&&(i=rM(e),r|=(127&i)<<21,128&i&&(i=rM(e),s=127&i,128&i&&(i=rM(e),s|=(127&i)<<7))))))))),{low:n|r<<28,high:r>>>4|s<<24,unsigned:t}}function dM(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,s=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,o=$k(e,s),a=e.bytes;switch(s){case 10:a[o+9]=r>>>7&1;case 9:a[o+8]=9!==s?128|r:127&r;case 8:a[o+7]=8!==s?n>>>21|128:n>>>21&127;case 7:a[o+6]=7!==s?n>>>14|128:n>>>14&127;case 6:a[o+5]=6!==s?n>>>7|128:n>>>7&127;case 5:a[o+4]=5!==s?128|n:127&n;case 4:a[o+3]=4!==s?i>>>21|128:i>>>21&127;case 3:a[o+2]=3!==s?i>>>14|128:i>>>14&127;case 2:a[o+1]=2!==s?i>>>7|128:i>>>7&127;case 1:a[o]=1!==s?128|i:127&i}}const lM={},hM={},uM=4294967296,pM=uM*uM,_M=pM/2,EM=SM(0,!0),mM=SM(0),fM=RM(0,-2147483648,!1),gM=RM(-1,2147483647,!1),TM=RM(-1,-1,!0);function SM(e,t){let i,n,r;return t?(r=0<=(e>>>=0)&&e<256)&&(n=hM[e],n)?n:(i=RM(e,0,!0),r&&(hM[e]=i),i):(r=-128<=(e|=0)&&e<128)&&(n=lM[e],n)?n:(i=RM(e,e<0?-1:0,!1),r&&(lM[e]=i),i)}function RM(e,t,i){return{low:0|e,high:0|t,unsigned:!!i}}function CM(e,t){if(isNaN(e))return t?EM:mM;if(t){if(e<0)return EM;if(e>=pM)return TM}else{if(e<=-_M)return fM;if(e+1>=_M)return gM}return e<0?t?EM:mM:RM(e%uM|0,e/uM|0,t)}function vM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class IM extends iT{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(AI.CONNECTION_STATE_CHANGE,e,t)}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this._qualityTimer&&(window.clearTimeout(this._qualityTimer),this._qualityTimer=null),this._quality>=1||(this._qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this._qualityRatio}),6e4))}constructor(e){var t;super(),nu(this,\"name\",\"AgoraRTCImageModeration\"),nu(this,\"_connectionState\",yI.CONNECTING),nu(this,\"_sequence\",0),nu(this,\"_moderationStartTime\",void 0),nu(this,\"_workerConnection\",void 0),nu(this,\"_workerMessageLengthLimit\",void 0),nu(this,\"_qualityRatio\",void 0),nu(this,\"_connectInfo\",void 0),nu(this,\"_cancelTokenSource\",EC.CancelToken.source()),nu(this,\"_retryConfig\",void 0),nu(this,\"_moderationInterval\",void 0),nu(this,\"_moderationTimer\",null),nu(this,\"_moderationMode\",1),nu(this,\"_quality\",1),nu(this,\"_qualityTimer\",null),nu(this,\"_ticket\",void 0),nu(this,\"_moderationIntervalMinimum\",void 0),nu(this,\"_uploadFailedNum\",0),nu(this,\"_uploadNum\",0),nu(this,\"_uploadTimer\",null),nu(this,\"_moderationId\",void 0),nu(this,\"inspectImage\",(()=>{if(this.connectionState!==yI.CONNECTED)throw new xv(xg.OPERATION_ABORTED,\"image moderation service connection status is \".concat(this.connectionState));this._moderationTimer&&(window.clearInterval(this._moderationTimer),this._moderationTimer=null),this._moderationTimer=window.setInterval((()=>{this.connectionState===yI.CONNECTED?this.requestToInspectImage():KC.debug(\"[\".concat(this._moderationId,\"] Moderation State is not connected , \"),this.connectionState)}),this._moderationInterval<this._moderationIntervalMinimum?this._moderationIntervalMinimum:this._moderationInterval),this.requestToInspectImage()})),this._moderationId=xT(5,\"image-moderation-\"),this._workerMessageLengthLimit=kC(\"IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT\"),this._moderationIntervalMinimum=kC(\"IMAGE_MODERATION_INTERVAL_MINIMUM\"),this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,this._qualityRatio=kC(\"IMAGE_MODERATION_QUALITY_RATIO\"),this._moderationStartTime=Number(Date.now()),this._workerConnection=new XI(\"worker-\"+this._moderationId,JT),this.on(AI.STATE_CHANGE,((e,t)=>{KC.debug(\"[\".concat(this._moderationId,\"] Moderation operation :\").concat(bI[e],\" \").concat(t||\"\"))})),this.handleWorkerEvents()}async init(e,t){this.emit(AI.STATE_CHANGE,bI.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new tg(((n,r)=>{this.on(AI.CONNECTION_STATE_CHANGE,((e,t)=>{e===yI.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorker(e)})).catch((e=>{r(e)}))}))}updateConfig(e){var t;this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,KC.debug(\"[\".concat(this._moderationId,\"] updateConfig: \").concat(JSON.stringify(e))),this.connectionState===yI.CONNECTED&&this.inspectImage()}async requestAP(e,t,i){const n=kC(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:s,cname:o,sid:a,token:c,uid:d}=t;oP++;const l=\"moderation_plugin\",h={service_name:l,json_body:JSON.stringify({appId:r,areaCode:s,cname:o,command:\"allocateEdge\",requestId:oP,seq:oP,sid:a,appToken:c,ts:Date.now(),uid:d+\"\"})};let u,p,_=e[0];return XT((async()=>{u=Date.now();const e=await VD(_,{data:h,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-u,0!==e.code){const t=new xv(xg.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code\"+e.code,{retry:!0,responseTime:p});throw KC.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new xv(xg.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw KC.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new xv(xg.UNEXPECTED_RESPONSE,\"moderation plugin ap empty server\",{code:t.code,responseTime:p});throw KC.error(e.toString()),e}if(!t.servers.some((e=>!!e.wss))){const e=new xv(xg.UNEXPECTED_RESPONSE,\"moderation plugin ap empty port\",{code:t.code,responseTime:p});throw KC.error(e.toString()),e}const n=kC(\"IMAGE_MODERATION_WORKER_HOST\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(i,\"/moderation\")})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,ticket:t.appTicket,responseTime:p}}),((t,i)=>(rv.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(rv.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==xg.OPERATION_ABORTED&&t.code!==xg.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(AI.STATE_CHANGE,bI.AP_CONNECTED);const{addressList:s,ticket:o}=r;return this._ticket=o,s}async connectWorker(e){this.emit(AI.STATE_CHANGE,bI.CONNECT_WORKER),await this._workerConnection.init(e,1e4)}handleWorkerEvents(){this._workerConnection.on(Iv.CONNECTED,(async()=>{this.emit(AI.STATE_CHANGE,bI.WORKER_CONNECTED,this._workerConnection.url),this.connectionState=yI.CONNECTED})),this._workerConnection.on(Iv.CLOSED,(()=>{this.connectionState=yI.CLOSED})),this._workerConnection.on(Iv.FAILED,(()=>{this.connectionState=yI.CLOSED})),this._workerConnection.on(Iv.RECONNECTING,(()=>{this.connectionState=this.connectionState===yI.CONNECTED?yI.RECONNECTING:yI.CONNECTING})),this._workerConnection.on(Iv.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const t=qk(new Uint8Array(e.data));kC(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&KC.debug(\"[\".concat(this._moderationId,\"] Response message for worker of image moderation \"),JSON.stringify(t)),this._uploadNum++,void 0===t.code||0===t.code||(this._uploadFailedNum++,KC.error(\"[\".concat(this._moderationId,\"] Error response from worke, code is \").concat(t.code,\", msg is \").concat(t.msg)),this._uploadTimer||(this._uploadTimer=window.setTimeout((()=>{rv.reportApiInvoke(this._connectInfo.sid||null,{name:sT.IMAGE_MODERATION_UPLOAD,options:[this._uploadFailedNum,this._uploadNum,t.code],tag:oT.TRACER}).onError(new xv(xg.IMAGE_MODERATION_UPLOAD_FAILED,t.msg)),this._uploadTimer=null}),kC(\"IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL\"))))}else KC.error(\"[\".concat(this._moderationId,\"] Unexpected message type from worker\"))})),this._workerConnection.on(Iv.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this._workerConnection.on(Iv.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){const e=TT(this,AI.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void(kC(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&KC.debug(\"Only the track being played can be inspected\"));this._sequence++;const i=await this.generateRequestData(e,t);this._workerConnection.sendMessage(i,!0,!0)}else kC(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&KC.debug(\"Only the track being published can be inspected\")}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:s,sid:o,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await fb(d,i,n),h=this._sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+xT(12,\"\"),u={appId:i,cid:r,cname:n,deviceId:\"\",elapse:IM.intToLong(Number(c-this._moderationStartTime)),fileSize:d.buffer.byteLength,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:h,sdkVersion:\"4.19.3\",sequence:this._sequence,sid:o,timestamp:CM(c),uid:a,vid:s,service:this._moderationMode,ticket:this._ticket},p=Yk(u);if(p.byteLength<this._workerMessageLengthLimit){if(kC(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},u);delete e.jpg,KC.debug(\"[\".concat(this._moderationId,\"] Request message for worker of image moderation service: \"),JSON.stringify(e))}return p}{const t=this.quality*this._qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:s,sid:o,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=EC.CancelToken.source(),this._workerConnection&&this._workerConnection.close(),this._moderationTimer&&window.clearInterval(this._moderationTimer),this._moderationTimer=null,this._uploadTimer&&window.clearTimeout(this._uploadTimer),this._uploadTimer=null,this.connectionState=yI.CLOSED,this.emit(AI.STATE_CHANGE,bI.CLOSED)}}function yM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function AM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?yM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):yM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class bM extends DI{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}constructor(e,t,i){super(e,t),nu(this,\"direction\",void 0),nu(this,\"store\",void 0),nu(this,\"peerConnection\",void 0),nu(this,\"transportEventReceiver\",void 0),nu(this,\"statsFilter\",void 0),nu(this,\"localCandidateCount\",0),nu(this,\"allCandidatesReceived\",!1),nu(this,\"mutex\",new YT(\"P2PConnection-mutex\")),nu(this,\"dataChannel\",void 0),nu(this,\"onLocalCandidate\",void 0),this.store=t,this.peerConnection=new RTCPeerConnection(bM.resolvePCConfiguration(e),{optional:[{googDscp:!0}]}),this.direction=null!=i?i:vv.SEND_ONLY,this.dataChannel=this.peerConnection.createDataChannel(\"agora-p2p-signal\",{ordered:!0}),this.statsFilter=PL(this.peerConnection,kC(\"STATS_UPDATE_INTERVAL\"),void 0,Rg()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(e){try{if(e){await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();if(await this.peerConnection.setLocalDescription(t),!t.sdp)throw new Error(\"Cannot get answer sdp when trying to establish PeerConnection.\");return t.sdp}{const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");return await this.peerConnection.setLocalDescription(e),e.sdp}}catch(e){throw new Vg(xg.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e){try{await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:e})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async addRemoteCandidate(e){try{await this.peerConnection.addIceCandidate(e)}catch(e){throw new Vg(xg.ADD_CANDIDATE_FAILED,\"P2PConnection.addRemoteCandidate failed; \".concat(e.toString()))}}async send(e){try{const t=[];e.forEach((e=>{const i=this.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});t.push(i)})),Rg()&&!0===kC(\"SIMULCAST\")&&await this.applySimulcastForFirefox(t,e),await this.applySimulcastEncodings(t,e),await this.applySendEncodings(t,e);const i=await this.peerConnection.createOffer();if(await this.peerConnection.setLocalDescription(i),!i.sdp)throw new Error(\"Cannot get offer.sdp when trying to send PeerConnection.\");const n=t.map((e=>{const t=this.getLocalSSRC(e.mid,i.sdp);if(!t)throw new Error(\"Cannot get ssrc when trying to send PeerConnection.\");return{mid:e.mid,localSSRC:[{ssrcId:t}]}}));return{sdp:i.sdp,trackMessage:n}}catch(e){throw e instanceof Vg?e:new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length (\".concat(t.length,\") doesn't match mids' length (\").concat(e.length,\") when trying to call P2PConnection.stopSending.\"));t.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e),this.peerConnection.removeTrack(e.sender)}));const n=await this.peerConnection.createOffer();if(await this.peerConnection.setLocalDescription(n),!n.sdp)throw new Error(\"Cannot get offer.sdp when trying to send PeerConnection.\");return n.sdp}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i){try{await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();if(!n.sdp)throw new Error(\"Cannot get answer sdp when trying to receive track.\");await this.peerConnection.setLocalDescription(n),KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"));const r=this.getRemoteMid(i,t);if(void 0===r)throw new Error(\"Cannot get transceiver mid when trying to receive track.\");const s=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!s||null===s.mid)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,mid:s.mid,sdp:n.sdp}}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async setDescription(e,t){try{if(\"remote\"===e){await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const i=await this.peerConnection.createAnswer();if(!i.sdp)throw new Error(\"Cannot get answer sdp when trying to receive track.\");return await this.peerConnection.setLocalDescription(i),KC.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] exchanging SDP, type is \").concat(e)),i.sdp}await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:t})}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection.setDescription failed; \".concat(e.toString()))}}async stopReceiving(e,t){try{const i=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(i.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");i.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)})),await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();if(await this.peerConnection.setLocalDescription(n),!n.sdp)throw new Error(\"Cannot get answer sdp when trying to receive track.\");return n.sdp}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async restartICE(){try{const e=await this.peerConnection.createOffer({iceRestart:!0});if(!e.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");return this.store.descriptionStart(),await this.peerConnection.setLocalDescription(e),e.sdp}catch(e){throw new Vg(xg.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.transportEventReceiver=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?Rg()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:AM(AM({},mL),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:AM(AM({},mL),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{var t;e.candidate&&(null===(t=this.onLocalCandidate)||void 0===t||t.call(this,e.candidate));e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,KC.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),kC(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(e){const t={iceServers:[]};return e.iceServers?t.iceServers=e.iceServers:e.turnServer&&\"off\"!==e.turnServer.mode&&(_T(e.turnServer.servers)?t.iceServers=e.turnServer.servers:(t.iceServers&&t.iceServers.push(...bM.turnServerConfigToIceServers(e.turnServer.servers)),kC(\"USE_TURN_SERVER_OF_GATEWAY\")&&t.iceServers&&e.turnServer.serversFromGateway&&t.iceServers.push(...bM.turnServerConfigToIceServers(e.turnServer.serversFromGateway)),kC(\"FORCE_TURN_TCP\")?t.iceTransportPolicy=\"relay\":e.turnServer.servers.concat(e.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(t.iceTransportPolicy=\"relay\")})))),kC(\"ENABLE_ENCODED_TRANSFORM\")&&_A().supportWebRTCEncodedTransform&&(t.encodedInsertableStreams=!0),t}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.tcpport&&(t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(_D(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}),t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=udp\")}),t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"stun:\".concat(e.turnServerURL,\":\").concat(e.tcpport)}))})),t}tryBindTransportEvents(e){const t=e.transport;if(t){this.transportEventReceiver=e,t.onstatechange=()=>{var e;null!=t&&t.state&&(null===(e=this.onDTLSTransportStateChange)||void 0===e||e.call(this,t.state))},t.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const i=t.iceTransport;i&&(i.onstatechange=()=>{const e=null==t?void 0:t.iceTransport.state;var i;e&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,e))},i.getSelectedCandidatePair&&(i.onselectedcandidatepairchange=()=>{if(i.getSelectedCandidatePair()){const{local:e,remote:t}=i.getSelectedCandidatePair();KC.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:t.type,protocol:t.protocol,address:t.address,port:t.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>t.track===e._mediaStreamTrack))}if(!t)return KC.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return KC.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!_A().supportSetRtpSenderParameters)return KC.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const n={},r={};switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(e._encoderConfig){var s;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(r.maxBitrate=1e3*t),Pr(s=e._hints).call(s,ky.LOW_STREAM)&&(i&&(r.maxFramerate=mD(i)),n&&n>=1&&(r.scaleResolutionDownBy=n))}if(kC(\"DSCP_TYPE\")&&kg()){var o;const e=kC(\"DSCP_TYPE\");Pr(o=[\"very-low\",\"low\",\"medium\",\"high\"]).call(o,e)&&(r.networkPriority=e)}const a=t.getParameters(),c=null===(i=a.encodings)||void 0===i?void 0:i[0];Rg()&&!c&&(n.encodings=[r]),c&&Object.assign(c,r),Object.assign(a,n),KC.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(a.encodings))),await t.setParameters(a)}async applySendEncodings(e,t){try{if(!_A().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof Sb&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){KC.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=KP.parse(e);return t.forEach(((e,t)=>{const r=i[t],s=n.mediaDescriptions.find((e=>e.attributes.mid===r));s&&($P(s,e),rL(s,e,this.store.codec))})),KP.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,s,o;const c=e[a],d=t[a];if(d instanceof Sb&&!Pr(i=d._hints).call(i,ky.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(s=d._scalabilityMode)&&void 0!==s&&s.numSpatialLayers&&(null===(o=d._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!Rg()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof Sb&&this.isVP8Simulcast(n)){const t=e[i],r={},s={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:s.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:s.medium,scaleResolutionDownBy:4}];const o=t.sender.getParameters();await t.sender.setParameters(Object.assign(o,r))}}}isVP8Simulcast(e){var t,i,n,r,s;return!!(e instanceof Sb&&kC(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Pr(t=e._hints).call(t,ky.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(s=e._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(kC(\"SDP_LOGGING\"))return KC.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}getLocalSSRC(e,t){var i,n;if(t=null!==(i=t)&&void 0!==i?i:null===(n=this.currentLocalDescription)||void 0===n?void 0:n.sdp){var r;const i=null===(r=KP.parse(t).mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===r?void 0:r.attributes.ssrcs;return null==i?void 0:i[0].ssrcId}}getRemoteMid(e,t){var i,n;if(t=null!==(i=t)&&void 0!==i?i:null===(n=this.currentRemoteDescription)||void 0===n?void 0:n.sdp){var r;return null===(r=KP.parse(t).mediaDescriptions.find((t=>t.attributes.ssrcs.some((t=>t.ssrcId===e)))))||void 0===r?void 0:r.attributes.mid}}async getRemoteSSRC(e,t){var i,n;if(t=null!==(i=t)&&void 0!==i?i:null===(n=this.currentRemoteDescription)||void 0===n?void 0:n.sdp){var r;const i=null===(r=KP.parse(t).mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===r?void 0:r.attributes.ssrcs;return null==i?void 0:i[0].ssrcId}}}function wM(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,s=new Array(r),o=0;o<r;o++)s[o]=arguments[o];return await n.apply(this,s)}finally{i()}},i}var OM;function NM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function DM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?NM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):NM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],bM.prototype,\"establish\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],bM.prototype,\"connect\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[RTCIceCandidate]),Uv(\"design:returntype\",tg)],bM.prototype,\"addRemoteCandidate\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],bM.prototype,\"send\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,String,Number]),Uv(\"design:returntype\",tg)],bM.prototype,\"receive\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,String]),Uv(\"design:returntype\",tg)],bM.prototype,\"setDescription\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array,String]),Uv(\"design:returntype\",tg)],bM.prototype,\"stopReceiving\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],bM.prototype,\"restartICE\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],bM.prototype,\"close\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],bM.prototype,\"updateEncoderConfig\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,iA]),Uv(\"design:returntype\",tg)],bM.prototype,\"updateSendParameters\",null),Mv([wM,Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[iA,String]),Uv(\"design:returntype\",tg)],bM.prototype,\"replaceTrack\",null),function(e){e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\"}(OM||(OM={}));class PM extends iT{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(mI.StateChange,t,this._state)}constructor(e,t){super(),nu(this,\"store\",void 0),nu(this,\"statsUploader\",void 0),nu(this,\"sendConnection\",void 0),nu(this,\"recvConnection\",void 0),nu(this,\"localTrackMap\",new Map),nu(this,\"remoteUserMap\",new Map),nu(this,\"localDataChannels\",[]),nu(this,\"pendingLocalTracks\",[]),nu(this,\"pendingRemoteTracks\",[]),nu(this,\"statsCollector\",void 0),nu(this,\"dtlsFailedCount\",0),nu(this,\"sendMutex\",new YT(\"P2PChannel2-send-mutex\")),nu(this,\"recvMutex\",new YT(\"P2PChannel2-recv-mutex\")),nu(this,\"_state\",EI.Disconnected),nu(this,\"_restartStates\",[\"disconnected\",\"failed\"]),nu(this,\"_restartTimer\",void 0),nu(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleMuteLocalTrack\");try{if(!this.sendConnection||this.state!==EI.Connected)return void i(new Vg(xg.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before sendConnection established.\"));const o=this.filterTobeMutedTracks(e);if(0===o.length)return void t();const a=o.find((e=>\"videoLowTrack\"===e[0]));if(a){a[1].track._originMediaStreamTrack.stop()}let c=!1;var r,s;if(\"video\"===e.trackMediaType)c=!(null===(r=this.localTrackMap.get(_I.LocalAudioTrack))||void 0===r||!r.track._muted);else c=void 0===(null===(s=this.localTrackMap.get(_I.LocalVideoTrack))||void 0===s?void 0:s.id);const d=o.filter((e=>{let[t,i]=e;return(t!==_I.LocalAudioTrack||c)&&void 0!==i.id})).map((e=>{let[,t]=e;return t}));let l;d.length>0&&(l=await this.sendConnection.stopSending(d.map((e=>e.id))),d.forEach((e=>{e.id=void 0,e.ssrcs=void 0})));const h=this.createMuteMessage(o),u=\"video\"===e.trackMediaType?OI.MUTE_LOCAL_VIDEO:OI.MUTE_LOCAL_AUDIO,p=await fT(this,mI.RequestP2PMuteLocal,{action:u,sdp:l,message:h,isMuteAll:c});p&&await this.sendConnection.setDescription(\"local\",p),(l||\"audio\"===e.trackMediaType)&&await gT(this,mI.RequestMuteLocal,h),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleUnmuteLocalTrack\");try{if(!this.sendConnection||this.state!==EI.Connected)return void i(new Vg(xg.INVALID_OPERATION,\"Cannot call P2PChannel2.handleUnmuteLocalTrack before sendConnection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();const s=this.createUnmuteMessage(r),o=\"video\"===e.trackMediaType?OI.UNMUTE_LOCAL_VIDEO:OI.UNMUTE_LOCAL_AUDIO;await gT(this,mI.RequestP2PMuteLocal,{action:o,message:s}),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(_I.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==EI.Connected)return void t();const{id:r,track:s}=i;r&&(await this.sendConnection.updateSendParameters(r,s),await this.sendConnection.updateEncoderConfig(r,s),this.emit(mI.UpdateVideoEncoder,s)),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleSetOptimizationMode\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleSetOptimizationMode\");try{const i=this.localTrackMap.get(_I.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==EI.Connected)return;const{id:r,track:s}=i;r&&await this.sendConnection.updateSendParameters(r,s),t()}catch(e){i(e)}finally{n()}})),nu(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.sendMutex.lock(\"From P2PChannel2.handleReplaceTrack\"));try{var s;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.sendConnection||!i||void 0===i[1].id||this.state!==EI.Connected)return void t();if(await(null===(s=this.sendConnection)||void 0===s?void 0:s.replaceTrack(e,i[1].id)),i[0]===_I.LocalVideoTrack&&_A().supportDualStreamEncoding){const t=this.localTrackMap.get(_I.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new tg(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var o;null===(o=r)||void 0===o||o()}})),nu(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),nu(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),nu(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),nu(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new dk,this.bindStatsUploaderEvents()}async startP2PConnection(e,t){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support startP2PConnection.\")}async connect(e,t,i,n,r,s){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support connect.\")}async startP2P(e,t){if(this.state=EI.New,this.sendConnection&&(KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset P2PConnection.\")),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection)),this.recvConnection&&(KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset P2PConnection.\")),this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection)),this.sendConnection=new bM(e,this.store),this.bindConnectionEvents(this.sendConnection),this.recvConnection=new bM(e,this.store,vv.RECEIVE_ONLY),this.bindConnectionEvents(this.recvConnection),t){this.store.peerConnectionStart(),await this.recvConnection.establish(t);const e=await this.sendConnection.establish(t);return this.statsUploader.startUploadTransportStats(!0),this.statsUploader.startUploadExtensionUsageStats(),this.state=EI.Connected,e}return await this.recvConnection.establish(t),this.sendConnection.establish(t)}async p2pConnect(e){if(!this.sendConnection||!this.recvConnection)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.startP2PConnection .\");this.store.peerConnectionStart(),await this.recvConnection.connect(e),await this.sendConnection.connect(e),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=EI.Connected}async addRemoteCandidate(e){if(!this.sendConnection||!this.recvConnection)throw new Vg(xg.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.addRemoteCandidate .\");await this.recvConnection.addRemoteCandidate(e),await this.sendConnection.addRemoteCandidate(e)}async publish(e,t,i){if(!this.sendConnection||this.state!==EI.Connected){this.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===this.pendingLocalTracks.indexOf(e)));return void(this.pendingLocalTracks=this.pendingLocalTracks.concat(t))}this.store.pubId=this.store.pubId+1,cD.markPublishStart(this.store.clientId,this.store.pubId);const n=this.filterTobePublishedTracks(e,t,i);if(0===n.length)return void await this.tryToUnmuteAudio(e);n.forEach((e=>{let{track:t,type:i}=e;const n=Date.now();this.store.publish(t.getTrackId(),i===_I.LocalAudioTrack?\"audio\":\"video\",n)})),this.bindLocalTrackEvents(n);const r=this.createGatewayPublishMessage(n);return this.assignLocalTracks(n),n.forEach((e=>{let{track:t,type:i}=e;const n=Date.now();this.store.publish(t.getTrackId(),i===_I.LocalAudioTrack?\"audio\":\"video\",void 0,n)})),r}async dopublish(e){if(!this.sendConnection||this.state!==EI.Connected)return;const t=this.localTrackMap.get(e);if(t){const{sdp:i,trackMessage:n}=await this.sendConnection.send([t.track]),{mid:r,localSSRC:s}=n[0];t.id=r,t.ssrcs=s,this.statsCollector.addLocalStats(e),this.statsUploader.startUploadUplinkStats();const o=await fT(this,mI.RequestP2PPublish,{kind:e===_I.LocalAudioTrack?hI.AUDIO:hI.VIDEO,sdp:i,ssrcId:s[0].ssrcId});await this.sendConnection.setDescription(\"local\",o);const a=this.createUnmuteMessage([[e,t]]);await gT(this,mI.RequestUnmuteLocal,a)}else;}async setDescription(e,t){let i,n;\"local\"===e?(i=await this.sendMutex.lock(\"From P2PChannel.restartICE\"),n=this.sendConnection):(i=await this.recvMutex.lock(\"From P2PChannel.restartICE\"),n=this.recvConnection);try{if(!n||this.state!==EI.Connected)return;return await n.setDescription(e,t)}finally{i()}}publishLowStream(e){return BP((function*(){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support publishLowStream.\")}))()}async republish(){this.pendingLocalTracks.length>0&&(KC.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await fT(this,mI.RequestRePublish,this.pendingLocalTracks),this.emit(mI.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[])}async unpublish(e){if(!this.sendConnection||this.state!==EI.Connected)return void(0===e.length?this.pendingLocalTracks.length=0:this.pendingLocalTracks=this.pendingLocalTracks.filter((t=>!Pr(e).call(e,t))));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}})));const i=t.filter((e=>{let[,{id:t}]=e;return void 0!==t}));if(!this.sendConnection||this.state!==EI.Connected)return void e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}));const n=t.find((e=>\"videoLowTrack\"===e[0]));if(n){n[1].track.close()}let r;const s=this.createGatewayUnpublishMessage(t);i.length>0&&(r=await this.sendConnection.stopSending(i.map((e=>{let[,{id:t}]=e;return t})))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&this.statsUploader.stopUploadUplinkStats();const o=this.createMuteMessage(t);return await tg.all(o.map((async e=>{await gT(this,mI.RequestMuteLocal,[e])}))),{sdp:r,unpubMsg:s}}async unpublishLowStream(){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support unpublishLowStream.\")}async doUnpublish(e){if(!this.sendConnection||this.state!==EI.Connected)return;const t=[];if(e!==hI.AUDIO){const e=this.localTrackMap.get(_I.LocalVideoTrack);void 0!==(null==e?void 0:e.id)&&t.push([_I.LocalVideoTrack,e]);const i=this.localTrackMap.get(_I.LocalVideoLowTrack);void 0!==(null==i?void 0:i.id)&&t.push([_I.LocalVideoLowTrack,i]),this.statsCollector.removeLocalStats(_I.LocalVideoTrack),this.statsCollector.removeLocalStats(_I.LocalVideoLowTrack)}if(e!==hI.VIDEO){const e=this.localTrackMap.get(_I.LocalAudioTrack);void 0!==(null==e?void 0:e.id)&&t.push([_I.LocalAudioTrack,e]),this.statsCollector.removeLocalStats(_I.LocalAudioTrack)}if(t.length>0){const i=await this.sendConnection.stopSending(t.map((e=>{let[,t]=e;return t.id})));t.forEach((e=>{let[,t]=e;t.id=void 0,t.ssrcs=void 0}));const n=await fT(this,mI.RequestP2PUnPublish,{sdp:i,kind:e});await this.sendConnection.setDescription(\"local\",n);const r=this.createMuteMessage(t);await tg.all(r.map((async e=>{await gT(this,mI.RequestMuteLocal,[e])})))}else;}async subscribe(e,t,i,n){var r;if(!this.recvConnection||this.state!==EI.Connected)throw new Vg(xg.INVALID_OPERATION,\"Cannot subscribe remote user when recvConnection disconnected.\");if(null!==(r=this.remoteUserMap.get(e))&&void 0!==r&&r.has(t))return;const{track:s,mid:o,sdp:a}=await this.recvConnection.receive(t,i,n);t===hI.AUDIO?(e._audioSSRC=n,e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(s):(e._audioTrack=new Ob(s,e.uid,e._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoSSRC=n,e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(s):(e._videoTrack=new wb(s,e.uid,e._uintid,this.store),KC.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._videoTrack));const c=this.remoteUserMap.get(e);c?c.set(t,o):this.remoteUserMap.set(e,new Map([[t,o]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadDownlinkStats(),await gT(this,mI.RequestP2PUnmuteRemote,t);const d=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));return-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(mI.MediaReconnectEnd,e.uid)),a}async unsubscribe(e,t,i,n){const r=this.pendingRemoteTracks.filter((t=>{let{user:n,kind:r}=t;return void 0!==i?n.uid===e.uid&&i===r:n.uid===e.uid}));if(r.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.recvConnection&&this.state===EI.Connected||n||r.forEach((t=>{let{kind:i}=t;var n;if(i===hI.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===hI.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.recvConnection||this.state!==EI.Connected)return;const s=this.filterTobeUnSubscribedTracks(e,i);if(0===s.length)return void(i!==hI.VIDEO&&gT(this,mI.RequestP2PMuteRemote,hI.AUDIO));const o=await this.recvConnection.stopReceiving(s.map((e=>{let[,{id:t}]=e;return t})),t);return this.withdrawRemoteTracks(s),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),s.forEach((e=>{let[t,{kind:i}]=e;var r,s;i===hI.VIDEO&&t._videoSSRC&&(null===(r=this.recvConnection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===hI.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),n||(null===(s=t._videoTrack)||void 0===s||s._destroy(),t._videoTrack=void 0);else if(i===hI.AUDIO){var o;if(this.unbindRemoteTrackEvents(t._audioTrack),!n)null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}})),s.filter((e=>{let[,{kind:t}]=e;return t!==hI.AUDIO})).forEach((e=>{let[,{kind:t}]=e;gT(this,mI.RequestP2PMuteRemote,t)})),i!==hI.VIDEO&&gT(this,mI.RequestP2PMuteRemote,hI.AUDIO),o}getAllDataChannels(){return this.localDataChannels}async massSubscribe(e){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support massSubscribe.\")}async massSubscribeNoLock(e){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support massSubscribeNoLock.\")}async massUnsubscribe(e){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribe.\")}async massUnsubscribeNoLock(e){throw new Vg(xg.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribeNoLock.\")}async muteRemote(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===hI.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.recvConnection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||KC.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(_I.LocalAudioTrack);if((null==t?void 0:t.track)instanceof tb){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==_I.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===_I.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===_I.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(_I.LocalAudioTrack),s=n?this.localTrackMap.get(_I.LocalVideoLowTrack):this.localTrackMap.get(_I.LocalVideoTrack);rv.publish(this.store.sessionId,{eventElapse:cD.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==s?void 0:s.track.getTrackLabel(),screenshare:-1!==(null==s?void 0:s.track._hints.indexOf(ky.SCREEN_TRACK)),audio:!!i,video:!!s,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var s;i||(i=[]);const o=i.find((e=>e instanceof ZA)),a=n?null===(s=this.localTrackMap.get(_I.LocalVideoTrack))||void 0===s?void 0:s.track:i.find((e=>e instanceof Sb));rv.publish(this.store.sessionId,{eventElapse:cD.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==o?void 0:o.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(ky.SCREEN_TRACK)),audio:!!o,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===hI.VIDEO?i._videoSSRC:i._audioSSRC;r&&rv.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===hI.VIDEO,audio:n===hI.AUDIO,peerid:i.uid,subscribeRequestid:n===hI.VIDEO?i._videoSSRC:i._audioSSRC,p2pid:this.store.p2pId,eventElapse:cD.measureFromSubscribeStart(this.store.clientId,r)})}reset(){KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.reset\")),this.sendMutex=new YT(\"P2PChannel2-send-mutex\"),this.sendMutex=new YT(\"P2PChannel2-recv-mutex\"),this.sendConnection&&(this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0),this.recvConnection&&(this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(_I.LocalAudioTrack);if((null==e?void 0:e.track)instanceof tb){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.state=EI.Disconnected}getStats(e){var t,i;return e?null===(i=this.recvConnection)||void 0===i?void 0:i.getStats():null===(t=this.sendConnection)||void 0===t?void 0:t.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.recvConnection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(_I.LocalVideoTrack);if(e)return{width:e.track._videoWidth||0,height:e.track._videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof Sb||t&&t.track instanceof ZA?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(_I.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=Zu(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.sendConnection&&this.recvConnection&&(KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.disconnectForReconnect closing P2PConnection\")),this.state=EI.Reconnecting,kC(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0,this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0,0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case _I.LocalVideoTrack:Pr(t=n._hints).call(t,ky.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case _I.LocalAudioTrack:n instanceof tb?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case _I.LocalVideoLowTrack:}})),this.emit(mI.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(hu(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(mI.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),KC.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 disconnected, waiting to reconnect.\")))}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof NP?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}async restartICE(e){let t;t=e.direction===vv.SEND_ONLY?await this.sendMutex.lock(\"From P2PChannel.restartICE\"):await this.recvMutex.lock(\"From P2PChannel.restartICE\");try{const i=await e.restartICE(),n=await fT(this,mI.RequestP2PRestartICE,i);e.setDescription(\"local\",n)}finally{t()}}getUplinkNetworkQuality(){if(!this.sendConnection)return 0;const e=this.sendConnection.getStats(),t=this.localTrackMap.get(_I.LocalVideoTrack),i=this.localTrackMap.get(_I.LocalAudioTrack),n=e.videoSend.find((e=>{var i;return e.ssrc===(null==t||null===(i=t.ssrcs)||void 0===i?void 0:i[0].ssrcId)})),r=e.audioSend.find((e=>{var t;return e.ssrc===(null==i||null===(t=i.ssrcs)||void 0===t?void 0:t[0].ssrcId)}));if(!n||!r)return 1;const s=TT(this,mI.NeedSignalRTT),o=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=o&&a?(o+a)/2:o||a,d=(c&&s?(c+s)/2:c||s)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,h=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,u=null==t?void 0:t.track;if(u&&u._encoderConfig&&-1===u._hints.indexOf(ky.SCREEN_TRACK)){const t=u._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return av[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][h]}}return h}getDownlinkNetworkQuality(){if(!this.recvConnection)return 0;const e=this.recvConnection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,s=n._videoSSRC,o=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===s));if(!o&&!a)return void(t+=1);const c=TT(this,mI.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,h=o?o.jitterMs:void 0,u=e.recvPacketLossRate;let p=.7*u*100/50+.3*l/1500;h&&(p=.6*u*100/50+.2*l/1500+.2*h/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new tg(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}filterTobePublishedTracks(e,t,i){const n=[],r=_A(),s=this.getAllTracks();e=yT(e=e.filter((e=>-1===s.indexOf(e))));let o=!1,a=!1;for(const s of e){if(s instanceof Sb&&(this.localTrackMap.has(_I.LocalVideoTrack)||o?new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:s,type:_I.LocalVideoTrack}),o=!0),t)){const e=this.getLowVideoTrack(s,i);n.push({track:e,type:_I.LocalVideoLowTrack})}if(s instanceof ZA){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(e){if(!(e.track instanceof tb))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(s._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(s),this.bindLocalAudioTrackEvents(s,!0)}else if(a){const e=n.find((e=>{let{type:t}=e;return t===_I.LocalAudioTrack}));if(!(e.track instanceof tb))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(s._bypassWebAudio)throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(s)}else{if(!r.webAudioMediaStreamDest||s instanceof tb||s._bypassWebAudio)n.push({track:s,type:_I.LocalAudioTrack});else{const e=new tb;e.addAudioTrack(s),n.push({track:e,type:_I.LocalAudioTrack})}a=!0}}}return n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=yT(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof ZA){const e=this.localTrackMap.get(_I.LocalAudioTrack);if(!e)continue;e.track instanceof tb?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([_I.LocalAudioTrack,e]),e.track.close())):t.push([_I.LocalAudioTrack,e])}if(i instanceof Sb){const e=this.localTrackMap.get(_I.LocalVideoTrack);if(!e)continue;t.push([_I.LocalVideoTrack,e]);const i=this.localTrackMap.get(_I.LocalVideoLowTrack);i&&t.push([_I.LocalVideoLowTrack,i])}}return t}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case _I.LocalVideoTrack:t.addListener(Ly.GET_STATS,this.handleGetLocalVideoStats),t.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(Ly.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(Ly.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.addListener(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case _I.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case _I.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof tb?e.trackList.forEach((e=>{e.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Ly.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener(Ly.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case _I.LocalVideoTrack:t.off(Ly.GET_STATS,this.handleGetLocalVideoStats),t.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(Ly.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(Ly.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.off(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case _I.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case _I.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof tb?e.trackList.forEach((e=>{e.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Ly.GET_STATS,this.handleGetLocalAudioStats),e.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off(Ly.GET_STATS,this.handleGetLocalAudioStats),e.off(Ly.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Ly.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(Ly.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Ly.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof wb&&t.addListener(Ly.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof Ob&&t.addListener(Ly.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(Ly.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(hI.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(hI.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e){return e.map((e=>{var t;let i,n,{track:r,type:s}=e;switch(s){case _I.LocalAudioTrack:i=$v.Audio,n={dtx:r instanceof $A&&r._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High,n=DM(DM({},fD(r)),{},{codec:this.store.codec});break;case _I.LocalVideoLowTrack:i=$v.Low,n=DM(DM({},fD(r)),{},{codec:this.store.codec})}return{kind:s===_I.LocalAudioTrack?hI.AUDIO:hI.VIDEO,stream_type:i,attributes:n,isMuted:r.muted||!r.enabled}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}assignLocalTracks(e){e.forEach((e=>{let{track:t,type:i}=e;this.localTrackMap.set(i,{track:t})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{var i;if(KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onConnectionStateChange(\").concat(t,\")\")),this.emit(mI.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),Pr(i=this._restartStates).call(i,t)||e.direction===vv.SEND_ONLY){if(this._restartTimer)return;const t=()=>{if(\"disconnected\"===e.iceConnectionState||\"checking\"===e.iceConnectionState||\"failed\"===e.iceConnectionState){KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] start use restartICE\"));\"CONNECTED\"===TT(this,mI.QueryClientConnectionState)&&this.restartICE(e)}};this._restartTimer=window.setTimeout((()=>{t(),this._restartTimer=void 0}),800)}else;},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),rv.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:oT.TRACER}).onSuccess(),this.emit(mI.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(By.FIRST_FRAME_DECODED),rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_AUDIO_DECODE,QC.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_AUDIO_RECEIVED,QC.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(hu(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&rv.firstRemoteFrame(this.store.sessionId,XC.FIRST_VIDEO_RECEIVED,QC.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(mI.ConnectionTypeChange,i),KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(vD(t)),\" -> \").concat(JSON.stringify(vD(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{KC.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(vD(t)),\" -> \").concat(JSON.stringify(vD(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)},e.onLocalCandidate=e=>{this.emit(mI.LocalCandidate,e)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0,e.onLocalCandidate=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(_I.LocalAudioTrack);if(e instanceof ZA&&(null==i?void 0:i.track)instanceof tb)return i.track.isActive||t.push([_I.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===_I.LocalVideoTrack)){const e=this.localTrackMap.get(_I.LocalVideoLowTrack);e&&t.push([_I.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(_I.LocalAudioTrack);if(e instanceof ZA&&(null==i?void 0:i.track)instanceof tb)return i.track.isActive&&t.push([_I.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===_I.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(_I.LocalVideoLowTrack);e&&t.push([_I.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:s,id:o}]=e;switch(n){case _I.LocalAudioTrack:i=$v.Audio;break;case _I.LocalVideoTrack:i=Pr(t=r._hints).call(t,ky.SCREEN_TRACK)?$v.Screen:$v.High;break;case _I.LocalVideoLowTrack:i=$v.Low}return{stream_type:i,ssrcs:s,mid:o}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case hI.VIDEO:return void(i._videoSSRC&&t.push({stream_type:hI.VIDEO,ssrcId:i._videoSSRC}));case hI.AUDIO:return void(i._audioSSRC&&t.push({stream_type:hI.AUDIO,ssrcId:i._audioSSRC}))}})),t}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(_I.LocalVideoTrack),i=this.localTrackMap.get(_I.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.sendConnection&&this.recvConnection){const e=this.sendConnection.peerConnectionState,t=this.recvConnection.peerConnectionState;return\"connected\"!==e&&\"connected\"!==t}return!0}async tryToUnmuteAudio(e){for(let t=0;t<e.length;t++)if(e[t]instanceof ZA){const i=this.filterTobeUnmutedTracks(e[t]);if(0===i.length)continue;const n=this.createUnmuteMessage(i);return void await gT(this,mI.RequestUnmuteLocal,n)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=e=>this.getStats(e),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()).filter((e=>{let[,{ssrcs:t}]=e;return!!t})),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.recvConnection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(mI.RequestUploadStats,e,t),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await UT(zT(this.dtlsFailedCount,JT)),this.emit(mI.RequestReconnect)}async reconnectP2P(){}canPublishLowStream(){return this.localTrackMap.has(_I.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof Sb))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof Sb)).length>1)throw new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof ZA)).length>1&&(e.some((e=>e instanceof ZA&&e._bypassWebAudio))||!_A().webAudioMediaStreamDest))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof Sb&&this.pendingLocalTracks.some((e=>e instanceof Sb)))throw new Vg(xg.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof ZA&&this.pendingLocalTracks.some((e=>e instanceof ZA))&&(!_A().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof ZA&&e._bypassWebAudio))))throw new Vg(xg.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=!kC(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&_A().supportDualStreamEncoding,n=DM(DM({},{width:160,height:120,framerate:15,bitrate:50}),t);let r;r=i?e._mediaStreamTrack.clone():KL(e,n);const s=xT(8,\"track-low-\"),o=new Sb(r,DM(DM({},i&&{scaleResolutionDownBy:CD(n,e)}),{},{frameRate:n.framerate,bitrateMax:n.bitrate,bitrateMin:n.bitrate}),void 0,void 0,s);return o.on(Vy.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,My.LOW_STREAM)})),o._hints.push(ky.LOW_STREAM),e.addListener(Ly.NEED_CLOSE,(()=>{o.close()})),o}async globalLock(){return this.recvMutex.lock(\"From P2PChannel2.globalLock\")}reportVideoFirstFrameDecoded(e,t,i,n){var r;const s=Array.from(hu(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(s){n||this.store.subscribe(s.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,o=r.subscribe.find((e=>e.userId===s.uid&&\"video\"===e.type));rv.firstRemoteVideoDecode(this.store.sessionId,XC.FIRST_VIDEO_DECODE,QC.FIRST_VIDEO_DECODE,{peer:s._uintid,videowidth:t,videoheight:i,subscribeElapse:cD.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==o?void 0:o.subscribeEnd)||0,subscriberStart:(null==o?void 0:o.subscribeStart)||0,videoAddNotify:(null==o?void 0:o.streamAdded)||0,state:n?1:0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.recvConnection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const s=await this.recvConnection.getRemoteSSRC(r);return void 0!==s&&s!==i}resetConnection(e){KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel2] reset connection to \").concat(e)),this.state===EI.Connected?(KC.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel2] fallback to websocket but P2PChannel2 state still connected, disconnect first\")),this.disconnectForReconnect()):(this.sendConnection&&(this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0),this.recvConnection&&(this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0))}async publishDataChannel(e){throw new Vg(xg.NOT_SUPPORTED)}async unpublishDataChannel(e){throw new Vg(xg.NOT_SUPPORTED)}async subscribeDataChannel(e,t){throw new Vg(xg.NOT_SUPPORTED)}async unsubscribeDataChannel(e,t){throw new Vg(xg.NOT_SUPPORTED)}hasPendingRemoteDataChannel(e,t){throw new Vg(xg.NOT_SUPPORTED)}setPendingRemoteDataChannel(e,t){throw new Vg(xg.NOT_SUPPORTED)}async preConnect(e,t,i,n,r,s){throw new Vg(xg.NOT_SUPPORTED)}getEstablishParams(){throw new Vg(xg.NOT_SUPPORTED)}async reSubscribe(e){throw new Vg(xg.NOT_SUPPORTED)}async updateVideoStreamParameter(e,t){throw new Vg(xg.NOT_SUPPORTED)}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===_I.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,My.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}}function LM(e){return function(t,i,n){const r=t[i];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return n.value=async function(){for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];switch(e){case OM.SEND_ONLY:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}case OM.RECEIVE_ONLY:{const e=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}default:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i)),t=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e(),t()}}}},n}}function kM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function MM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?kM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):kM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}Mv([LM(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,String]),Uv(\"design:returntype\",tg)],PM.prototype,\"startP2P\",null),Mv([LM(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],PM.prototype,\"p2pConnect\",null),Mv([LM(OM.SEND_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],PM.prototype,\"dopublish\",null),Mv([LM(OM.SEND_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],PM.prototype,\"unpublish\",null),Mv([LM(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],PM.prototype,\"unpublishLowStream\",null),Mv([LM(OM.SEND_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],PM.prototype,\"doUnpublish\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,String,Number]),Uv(\"design:returntype\",tg)],PM.prototype,\"subscribe\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,String,Boolean]),Uv(\"design:returntype\",tg)],PM.prototype,\"unsubscribe\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],PM.prototype,\"muteRemote\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],PM.prototype,\"unmuteRemote\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String]),Uv(\"design:returntype\",tg)],PM.prototype,\"hasRemoteMediaWithLock\",null),Mv([LM(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],PM.prototype,\"disconnectForReconnect\",null),Mv([LM(OM.RECEIVE_ONLY),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Number]),Uv(\"design:returntype\",tg)],PM.prototype,\"remoteMediaSsrcChanged\",null);const UM=Date.now(),xM=20,VM=new Map,FM=new Map;async function BM(e){const t=VM.get(e),i=Array.isArray(t)&&t[t.length-1],n=FM.get(e);if(!i)return void(n.isSyncing=!1);const r={uid:i.uid,payload:DT(i.payload)};0===n.firstRecvTs&&(n.firstRecvTs=i.recvTs,n.firstSendTs=i.sendTs);const s=i.sendTs-n.firstSendTs,o=s-(Date.now()-n.firstRecvTs);o>0&&(n.firstRecvTs=Date.now()-s);let a=i.mediaDelay+o;a<=0?(t.pop(),jM(i.context,r),a=0):a=Math.min(a,xM),setTimeout((()=>t.length&&BM(e)),a)}function jM(e,t){e.safeEmit(dT.STREAM_MESSAGE,t.uid,t.payload),e.onStreamMessage&&e.onStreamMessage(t)}function GM(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;if(!e.syncWithAudio)return jM(i,{uid:e.uid,payload:DT(e.payload)});const n=\"\".concat(i.id,\"-\").concat(e.uid),r=VM.get(n)||[],s=r.findIndex((t=>e.sendTs>=t.sendTs)),o=MM(MM({},e),{},{context:i,mediaDelay:t,recvTs:Date.now()});-1===s?r.push(o):r.splice(s,0,o),VM.set(n,r);let a=!1;var c;FM.has(n)?a=!(null===(c=FM.get(n))||void 0===c||!c.isSyncing):FM.set(n,{isSyncing:a,firstRecvTs:0,firstSendTs:0});a||BM(n)}const WM=pg().name;function HM(){return!function(e,t,i){const n=pg();if(n.os!==ag.IOS||!n.osVersion)return!1;const r=n.osVersion.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}(16,0,!0)&&!function(e,t,i){const n=pg();if(n.name!==cg.SAFARI||!n.osVersion)return!1;const r=n.version.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}(16,0,!0)}function KM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function YM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?KM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):KM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}YT.setLogger(KC);class qM extends iT{get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._p2pChannel.getAllTracks(!0)}get uid(){return this._uid}get channelName(){return this._channelName}get localDataChannels(){return this._p2pChannel.getAllDataChannels()}get mode(){return this._config.mode}get role(){var e;return(null===(e=this._config)||void 0===e?void 0:e.role)||\"audience\"}get codec(){return this._config.codec}get audioCodec(){return this._config.audioCodec||\"opus\"}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}get __className__(){return\"Client\"}constructor(e){let t;if(super(),nu(this,\"store\",void 0),nu(this,\"_uid\",void 0),nu(this,\"_channelName\",void 0),nu(this,\"_uintUid\",void 0),nu(this,\"_users\",[]),nu(this,\"_config\",void 0),nu(this,\"_clientId\",void 0),nu(this,\"_appId\",void 0),nu(this,\"_sessionId\",null),nu(this,\"_key\",void 0),nu(this,\"_joinInfo\",void 0),nu(this,\"_gateway\",void 0),nu(this,\"_statsCollector\",void 0),nu(this,\"_configDistribute\",void 0),nu(this,\"_leaveMutex\",new YT(\"client-leave\")),nu(this,\"_publishMutex\",new YT(\"client-publish\")),nu(this,\"_renewTokenMutex\",new YT(\"client-renewtoken\")),nu(this,\"_subscribeMutex\",new YT(\"client-subscribe\")),nu(this,\"_encryptionMode\",\"none\"),nu(this,\"_encryptionSecret\",null),nu(this,\"_encryptionSalt\",null),nu(this,\"_proxyServer\",void 0),nu(this,\"_turnServer\",{servers:[],mode:\"auto\"}),nu(this,\"_cloudProxyServerMode\",\"disabled\"),nu(this,\"_isDualStreamEnabled\",!1),nu(this,\"_defaultStreamFallbackType\",void 0),nu(this,\"_lowStreamParameter\",void 0),nu(this,\"_streamFallbackTypeCacheMap\",new Map),nu(this,\"_remoteStreamTypeCacheMap\",new Map),nu(this,\"_axiosCancelSource\",EC.CancelToken.source()),nu(this,\"_audioVolumeIndicationInterval\",void 0),nu(this,\"_networkQualityInterval\",void 0),nu(this,\"_userOfflineTimeout\",void 0),nu(this,\"_streamRemovedTimeout\",void 0),nu(this,\"_injectStreamingClient\",void 0),nu(this,\"_liveTranscodeStreamingClient\",void 0),nu(this,\"_liveRawStreamingClient\",void 0),nu(this,\"_channelMediaRelayClient\",void 0),nu(this,\"_networkQualitySensitivity\",\"normal\"),nu(this,\"_p2pChannel\",void 0),nu(this,\"_useLocalAccessPoint\",!1),nu(this,\"_setLocalAPVersion\",void 0),nu(this,\"_joinAndNotLeaveYet\",!1),nu(this,\"_numberOfJoinCount\",0),nu(this,\"_remoteDefaultVideoStreamType\",void 0),nu(this,\"_inspect\",void 0),nu(this,\"_moderation\",void 0),nu(this,\"_license\",void 0),nu(this,\"_pendingPublishedUsers\",[]),nu(this,\"ntpAlignErrorCount\",0),nu(this,\"remoteInboundOffset\",0),nu(this,\"_handleLocalTrackEnable\",((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),nu(this,\"_handleLocalTrackDisable\",((e,t,i)=>{this.unpublish(e).then(t).catch(i)})),nu(this,\"_handleUserOnline\",(e=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(e.uid,this.channelName))return void KC.debug(\"[\".concat(e.uid,\"] will be ignored in local\"));this.isStringUID&&\"string\"!=typeof e.uid&&KC.error(\"[\".concat(this._clientId,\"] StringUID is Mixed with UintUID\"));const t=this._users.find((t=>t.uid===e.uid));if(t)t._trust_in_room_=!0;else{const t=new NP(e.uid,e.uint_id||e.uid);this._users.push(t),KC.debug(\"[\".concat(this._clientId,\"] user online\"),e.uid),this.safeEmit(dT.USER_JOINED,t)}})),nu(this,\"_handleUserOffline\",(e=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(e.uid,this.channelName))return;const t=this._users.find((t=>t.uid===e.uid));t&&(this._handleRemoveStream(e),this._handleRemoveDataChannels(e),IT(this._users,t),this._remoteStreamTypeCacheMap.delete(t.uid),this._streamFallbackTypeCacheMap.delete(t.uid),KC.debug(\"[\".concat(this._clientId,\"] user offline\"),e.uid,\"reason:\",e.reason),this.safeEmit(dT.USER_LEAVED,t,e.reason))})),nu(this,\"_handleAddAudioOrVideoStream\",((e,t,i,n,r,s,o)=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(t,this.channelName))return;const a=this._users.find((e=>e.uid===t));if(!a)return void KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));KC.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(a.uid,e,void 0,void 0,void 0,Date.now());const c=\"audio\"===e?a.hasAudio:a.hasVideo;a._uintid||(a._uintid=r||t),\"audio\"===e?a._trust_audio_stream_added_state_=!0:a._trust_video_stream_added_state_=!0,\"audio\"===e?(a._audio_added_=!0,void 0!==i&&(a._audioSSRC=i),void 0!==n&&(a._cname=n),s&&(a._audioOrtc=s)):(a._video_added_=!0,void 0!==i&&(a._videoSSRC=i),void 0!==n&&(a._cname=n),void 0!==o&&(a._rtxSsrcId=o),s&&(a._videoOrtc=s)),(\"audio\"===e?a.hasAudio:a.hasVideo)&&!c&&(KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(a.uid,\" published \").concat(e)),this.safeEmit(dT.USER_PUBLISHED,a,e)),\"video\"===e?rv.onGatewayStream(this._sessionId,XC.ON_ADD_VIDEO_STREAM,QC.ON_ADD_VIDEO_STREAM,{peer:r||t,ssrc:a._videoSSRC}):rv.onGatewayStream(this._sessionId,XC.ON_ADD_AUDIO_STREAM,QC.ON_ADD_AUDIO_STREAM,{peer:r||t,ssrc:a._audioSSRC}),this._p2pChannel.remoteMediaSsrcChanged(a,e,i).then((t=>{if(t&&(KC.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after rejoin because SSRC id changed.\")),this._p2pChannel instanceof _k))return this._p2pChannel.unsubscribe(a,e,!0).then((()=>this._subscribe(a,e,!0).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())}))))})),this._p2pChannel.hasPendingRemoteMedia(a,e)&&(KC.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after reconnect.\")),this._subscribe(a,e,!0).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),nu(this,\"_handleRemoveStream\",((e,t,i)=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(e.uid,this.channelName))return;const n=this._users.find((t=>t.uid===e.uid));if(!n)return void KC.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_stream)\"));KC.debug(\"[\".concat(this._clientId,\"] stream removed with uid \").concat(e.uid));let r=()=>{};if(n.hasAudio&&n.hasVideo?r=()=>{KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(n.uid,\" unpublished audio track\")),this.safeEmit(dT.USER_UNPUBLISHED,n,\"audio\"),KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(n.uid,\" unpublished video track\")),this.safeEmit(dT.USER_UNPUBLISHED,n,\"video\")}:n.hasVideo?r=()=>{KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(n.uid,\" unpublished video track\")),this.safeEmit(dT.USER_UNPUBLISHED,n,\"video\")}:n.hasAudio&&(r=()=>{KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(n.uid,\" unpublished audio track\")),this.safeEmit(dT.USER_UNPUBLISHED,n,\"audio\")}),n._trust_audio_stream_added_state_=!0,n._trust_video_stream_added_state_=!0,n._audio_added_=!1,n._video_added_=!1,this._p2pChannel instanceof _k)this._p2pChannel.unsubscribe(n).then((e=>{if(e)return this._gateway.unsubscribe(e,n.uid)}));else if(t&&i)if(e.sdp){const{sdp:r}=e;this._p2pChannel.unsubscribe(n,r).then((e=>{e&&t(e)})).catch(i)}else t&&t();n._audioSSRC=void 0,n._videoSSRC=void 0,n._audioOrtc=void 0,n._videoOrtc=void 0,n._rtxSsrcId=void 0,rv.onGatewayStream(this._sessionId,XC.ON_REMOVE_STREAM,QC.ON_REMOVE_STREAM,{peer:e.uint_id||e.uid}),r()})),nu(this,\"_handleSetStreamLocalEnable\",((e,t,i)=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(t,this.channelName))return;const n=this._users.find((e=>e.uid===t));if(!n)return void KC.error(\"[\".concat(this._clientId,\"] can not find target user!(disable_local)\"));KC.debug(\"[\".concat(this._clientId,\"] local \").concat(e,\" \").concat(i?\"enabled\":\"disabled\",\" with uid \").concat(t));const r=\"audio\"===e?n.hasAudio:n.hasVideo;if(\"audio\"===e){n._trust_audio_enabled_state_=!0;const e=n._audio_enabled_;if(n._audio_enabled_=i,n._audio_enabled_===e)return;{const e=n._audio_enabled_?\"enable-local-audio\":\"disable-local-audio\";KC.debug(\"[\".concat(this._clientId,\"] user-info-updated, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(dT.USER_INFO_UPDATED,t,e)}}else{n._trust_video_enabled_state_=!0;const e=n._video_enabled_;if(n._video_enabled_=i,n._video_enabled_===e)return;{const e=n._video_enabled_?\"enable-local-video\":\"disable-local-video\";KC.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(dT.USER_INFO_UPDATED,t,e)}}const s=\"audio\"===e?n.hasAudio:n.hasVideo;return r!==s?!r&&s?(KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" published \").concat(e)),void this.safeEmit(dT.USER_PUBLISHED,n,e)):(\"video\"===e&&n._videoTrack&&n._videoTrack._destroy(),\"audio\"===e&&n._audioTrack,this._p2pChannel.muteRemote(n,e),KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished \").concat(e)),void this.safeEmit(dT.USER_UNPUBLISHED,n,e)):void 0})),nu(this,\"_handleMuteStream\",((e,t,i,n,r,s)=>{if(kC(\"BLOCK_LOCAL_CLIENT\")&&dv(e,this.channelName))return;KC.debug(\"[\".concat(this._clientId,\"] receive mute message\"),e,t,i);const o=this._users.find((t=>t.uid===e));if(!o)return void KC.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(e));const a=\"audio\"===t?o.hasAudio:o.hasVideo;if(\"audio\"===t){o._trust_audio_mute_state_=!0;const t=o._audio_muted_;if(o._audio_muted_=i,o._audio_muted_===t)return;{const t=o._audio_muted_?\"mute-audio\":\"unmute-audio\";KC.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(dT.USER_INFO_UPDATED,e,t)}}else{o._trust_video_mute_state_=!0;const t=o._video_muted_;if(o._video_muted_=i,o._video_muted_===t)return;{const t=o._video_muted_?\"mute-video\":\"unmute-video\";KC.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(dT.USER_INFO_UPDATED,e,t)}}const c=\"audio\"===t?o.hasAudio:o.hasVideo;if(a!==c){if(!a&&c){if(!this.store.useP2P){if(!(\"audio\"===t?o._audioSSRC:o._videoSSRC))return void KC.warning(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" receive \").concat(t,\" unmute message  before add stream message, \").concat(t,\" SSRC doesn't exist yet.\"))}return KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" published \").concat(t)),void this.safeEmit(dT.USER_PUBLISHED,o,t)}\"video\"===t&&o._videoTrack&&o._videoTrack._destroy(),\"audio\"===t&&o._audioTrack,r&&s&&this._p2pChannel instanceof PM&&(n?this._p2pChannel.unsubscribe(o,n,t).then((e=>{r(e)})).catch(s):r()),this._p2pChannel.muteRemote(o,t),KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" unpublished \").concat(t)),this.safeEmit(dT.USER_UNPUBLISHED,o,t)}})),nu(this,\"_handleP2PLost\",(async e=>{KC.debug(\"[\".concat(this._clientId,\"] receive p2p lost\"),e),parseInt(e.p2pid,10)===this.store.p2pId?await this._p2pChannel.requestReconnect():KC.warning(\"[\".concat(this._clientId,\"] P2PLost stream not found\"),e)})),nu(this,\"_handleTokenWillExpire\",(()=>{KC.debug(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeWillExpire\")),this.safeEmit(dT.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)})),nu(this,\"_handleBeforeUnload\",(e=>{\"beforeunload\"===e.type&&void 0!==e.returnValue&&\"\"!==e.returnValue||(this.leave(),KC.info(\"[\".concat(this._clientId,\"] auto leave onbeforeunload or pagehide\")))})),nu(this,\"_handleUpdateNetworkQuality\",(()=>{if(\"normal\"===this._networkQualitySensitivity)return;if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.safeEmit(dT.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});const e={downlinkNetworkQuality:0,uplinkNetworkQuality:0};e.uplinkNetworkQuality=this._p2pChannel.getUplinkNetworkQuality(),e.downlinkNetworkQuality=this._p2pChannel.getDownlinkNetworkQuality(),this.safeEmit(dT.NETWORK_QUALITY,e)})),nu(this,\"_handleP2PAddAudioOrVideoStream\",((e,t)=>{const i=this._users.find((e=>e.uid===t));if(!i)return void KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));KC.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(i.uid,e,void 0,void 0,void 0,Date.now());const n=\"audio\"===e?i.hasAudio:i.hasVideo;\"audio\"===e?i._trust_audio_stream_added_state_=!0:i._trust_video_stream_added_state_=!0,\"audio\"===e?i._audio_added_=!0:i._video_added_=!0,(\"audio\"===e?i.hasAudio:i.hasVideo)&&!n&&(KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(i.uid,\" published \").concat(e)),this.safeEmit(dT.USER_PUBLISHED,i,e)),this._p2pChannel.hasPendingRemoteMedia(i,e)&&(KC.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(i.uid,\" after reconnect.\")),this._subscribe(i,e,!0).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),this._config=e,this._clientId=xT(5,\"client-\"),this.store=new wC(e.codec,e.audioCodec,e.mode,this._clientId),this.store.clientCreated(),e.proxyServer&&this.setProxyServer(e.proxyServer,!0),e.turnServer&&this.setTurnServer(e.turnServer,!0),KC.info(\"[\".concat(this._clientId,\"] Initializing AgoraRTC client v\").concat(OC,\" build: \").concat(DC,\", mode: \").concat(this.mode,\", codec: \").concat(this.codec)),e.clientRoleOptions)try{mT(e.clientRoleOptions),t=Object.assign({},e.clientRoleOptions)}catch(e){KC.warning(\"[\".concat(this._clientId,\"] \").concat(e.toString()))}this._statsCollector=new hD(this.store),this._statsCollector.onStatsException=(e,t,i)=>{KC.debug(\"[\".concat(this._clientId,\"] receive exception msg, code: \").concat(e,\", msg: \").concat(t,\", uid: \").concat(i)),this.safeEmit(dT.EXCEPTION,{code:e,msg:t,uid:i})},this._statsCollector.onUploadPublishDuration=(e,t,i,n)=>{const r=this._users.find((t=>t.uid===e));r&&rv.peerPublishStatus(this._sessionId,{subscribeElapse:n,audioPublishDuration:t,videoPublishDuration:i,peer:r._uintid})},this.store.useDataChannel=_A().supportDataChannel&&kC(\"SIGNAL_CHANNEL\"),this.store.useP2P=kC(\"P2P\"),this._gateway=new MD(this.store,{clientId:this._clientId,mode:this.mode,codec:this.codec,websocketRetryConfig:e.websocketRetryConfig||JT,httpRetryConfig:e.httpRetryConfig||JT,forceWaitGatewayResponse:void 0===e.forceWaitGatewayResponse||e.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:e.role,clientRoleOptions:t}),this._configDistribute=new TP,this.store.useP2P?(this._p2pChannel=new PM(this.store,this._statsCollector),this._handleP2PEvents()):this._p2pChannel=new _k(this.store,this._statsCollector),this._handleP2PChannelEvents(),this._handleGatewayEvents(),this._handleGatewaySignalEvents()}async joinMeta(e,t,i,n,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],o=arguments.length>6&&void 0!==arguments[6]&&arguments[6];LC(\"JOIN_GATEWAY_USE_443PORT_ONLY\",s),LC(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\",o);const a=this._gateway.signal.websocket;return a instanceof zI&&(a.use443PortOnly=s,a.tryDoubleDomain=o),async function(e,t,i){rg.get(e)||rg.set(e,[]),sg.get(e)||sg.set(e,t),og.get(e)||og.set(e,0);const n=rg.get(e),r=sg.get(e);if(!n||!r)throw new Error(\"concurrent: deferQueue or maxConcurrency is null\");if(og.get(e)===r){const e=ng();n.push(e),await e.promise}og.set(e,og.get(e)+1);for(var s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];const c=await i(...o);return og.set(e,og.get(e)-1),og.get(e)===r-1&&n.length>0&&(n[0].resolve(),n.shift()),0===og.get(e)&&(rg.set(e,[]),sg.set(e,0),og.set(e,0)),c}(\"client.join\",kC(\"JOIN_MAX_CONCURRENCY\"),this.join.bind(this),e,t,i,n,r)}async join(e,t,i,n,r){const s=++this._numberOfJoinCount;this.store.joinStart(),n&&(this.store.uid=n);const o=vC(),a=IC()?window.isSecureContext:\"Browser Not Support\";if(!IC()&&!o||!window.isSecureContext){const e=\"The website must be running in a secure context (About secure context: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts ), otherwise the media collection will be restricted by the browser\";KC.warning(e)}const c=VT();\"DISCONNECTED\"===this.connectionState&&(this.store.avoidJoinStart=Math.round(Date.now()),KC.debug(\"[\".concat(this._clientId,\"] set avoidJoinStart to \").concat(this.store.avoidJoinStart)));const d=rv.reportApiInvoke(c,{name:sT.JOIN,options:[e,t,i,n],states:{isHttps:o,isSecureContext:a},tag:oT.TRACER});rv.setAppId(e);try{if(!i&&null!==i)throw new xv(xg.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&Wg(i,\"token\",1,2047),Wg(e,\"appid\",1,2047),Vv(t),n&&Fv(n),r&&Wg(r,\"optionalInfo\",1,2047)}catch(e){throw d.onError(e),e}if(KC.info(\"[\".concat(this._clientId,\"] start join channel \").concat(t,\", join number: \").concat(s)),this._leaveMutex.isLocked){KC.debug(\"[\".concat(this._clientId,\"] join: waiting leave operation\"));(await this._leaveMutex.lock())(),KC.debug(\"[\".concat(this._clientId,\"] join: continue\"))}if(this._joinAndNotLeaveYet=!0,\"DISCONNECTED\"!==this.connectionState){const e=new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already in connecting/connected state\"));throw d.onError(e),e}this._sessionId||(this._sessionId=c,this.store.sessionId=this._sessionId),this._gateway.state=\"CONNECTING\";const l=YM({clientId:this._clientId,appId:e,sid:this._sessionId,cname:t,uid:\"string\"!=typeof n?n:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:i||e,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:r,license:this._license,useLocalAccessPoint:this._useLocalAccessPoint},void 0!==this._remoteDefaultVideoStreamType&&{defaultVideoStream:this._remoteDefaultVideoStreamType});if(this._useLocalAccessPoint&&(l.setLocalAPVersion=this._setLocalAPVersion),\"string\"==typeof n&&(l.stringUid=n,this._uintUid?(l.uid=this._uintUid,this._uintUid=void 0):l.uid=0),\"none\"!==this._encryptionMode&&this._encryptionSecret){if(l.aesmode=this._encryptionMode,l.aespassword=await eT(this._encryptionSecret),!this._joinAndNotLeaveYet)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this._encryptionSalt&&(l.aessalt=this._encryptionSalt)}this._startSession(this._sessionId,{channel:t,appId:e});const h=this._sessionId;setTimeout((()=>{\"CONNECTING\"===this.connectionState&&h===this._sessionId&&rv.joinChannelTimeout(this._sessionId,5)}),5e3);try{var u;let n;const r=l.cloudProxyServer;if(Pr(u=[\"proxy3\",\"proxy4\",\"proxy5\"]).call(u,r)){const e=kC(\"PROXY_SERVER_TYPE3\");Array.isArray(e)?l.proxyServer=e[0]:l.proxyServer=e}if(rv.setProxyServer(l.proxyServer),KC.setProxyServer(l.proxyServer),this.store.requestAPStart(),l.stringUid&&!l.uid){const e=await hP(l.stringUid,l,this._axiosCancelSource.token,this._config.httpRetryConfig||JT,this.store);KC.debug(\"[\".concat(this._clientId,\"] getUserAccount Success \").concat(l.stringUid,\" => \").concat(e)),l.uid=e,n=await lP(l,this._axiosCancelSource.token,this._config.httpRetryConfig||JT,!0,this.store)}else n=await lP(l,this._axiosCancelSource.token,this._config.httpRetryConfig||JT,!0,this.store);if(!this._joinAndNotLeaveYet)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this.store.requestAPEnd(),setTimeout((()=>{this._configDistribute.startGetConfigDistribute(l,this._axiosCancelSource.token),this._configDistribute.on(dI.UPDATE_BITRATE_LIMIT,(e=>{this._p2pChannel.updateBitrateLimit(e)}))}),0),this._key=i||e;const s=n.gatewayInfo;this._joinInfo=YM(YM({},l),{},{cid:s.cid,uid:l.uid?l.uid:s.uid,vid:s.vid,apResponse:s.res,uni_lbs_ip:s.uni_lbs_ip,gatewayAddrs:s.gatewayAddrs});const o=await this._joinGateway();if(!this._joinAndNotLeaveYet)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));d.onSuccess(o),this._appId=e,this._channelName=l.cname,this._uid=o,this.store.uid=o,setTimeout((()=>{this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2e3),window.addEventListener(Sg()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload)}),0);const a=l.stringUid?\"string uid: \".concat(l.stringUid,\",uid: \").concat(l.uid):\"uid: \".concat(this._uid);return KC.info(\"[\".concat(this._clientId,\"] Joining channel success: channel: \").concat(t,\",\").concat(a)),setTimeout((()=>{KC.startUpload()}),5e3),this.store.joinEnd(),p=this,Pr(cv).call(cv,p)||cv.push(p),o}catch(e){const t=Array.isArray(e)?e[0]:e;throw t&&t.code===xg.OPERATION_ABORTED?KC.warning(\"[\".concat(this._clientId,\"] join number: \").concat(s,\", Joining channel failed, rollback\"),t):KC.error(\"[\".concat(this._clientId,\"] join number: \").concat(s,\", Joining channel failed, rollback\"),t),t.code!==xg.OPERATION_ABORTED&&this._numberOfJoinCount===s&&(this._gateway.state=\"DISCONNECTED\",this._reset()),d.onError(t),t}var p}_joinGateway(){if(!this._joinInfo||!this._key)throw new xv(xg.INVALID_OPERATION);return this._gateway.join(this._joinInfo,this._key,!(\"disabled\"!==this._joinInfo.cloudProxyServer||this._joinInfo.proxyServer||!kC(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\"))).then((e=>e)).catch((e=>{if(e.code===xg.INIT_WEBSOCKET_TIMEOUT)return this._gateway.leave(!0,cT.FALLBACK),e;if(e.code===xg.INIT_DATACHANNEL_TIMEOUT)return this._gateway.leave(!0,cT.FALLBACK),e;throw e})).then((e=>{if(e instanceof xv){if(e.code===xg.INIT_WEBSOCKET_TIMEOUT){if(KC.info(\"[\".concat(this._clientId,\"] join timeout, fallback to proxy\")),!this._joinInfo||!this._key)throw new xv(xg.INVALID_OPERATION);this._joinInfo.cloudProxyServer=\"fallback\",this._cloudProxyServerMode=\"fallback\",this.store.cloudProxyServerMode=\"fallback\";const e=kC(\"PROXY_SERVER_TYPE3\");if(Array.isArray(e))if(this._joinInfo.apUrl){const t=/^https?:\\/\\/(.+?)(\\/.*)?$/.exec(this._joinInfo.apUrl)[1].split(\".\"),i=t.slice(t.length-2).join(\".\");e.forEach((e=>{this._joinInfo&&Pr(e).call(e,i)&&(this._joinInfo.proxyServer=e)})),this._joinInfo.proxyServer||(this._joinInfo.proxyServer=e[0])}else this._joinInfo.proxyServer=e[0];else this._joinInfo.proxyServer=e;const t=kC(\"LOG_UPLOAD_SERVER\").match(/.+:(\\d{1,5})$/);t&&t[1]&&\"443\"!==t[1]&&KC.setProxyServer(this._joinInfo.proxyServer),\"443\"!==kC(\"STATS_COLLECTOR_PORT\").toString()&&rv.setProxyServer(this._joinInfo.proxyServer);return rv.reportApiInvoke(this._sessionId,{name:sT.JOIN_FALLBACK_TO_PROXY,options:[this._joinInfo.proxyServer],tag:oT.TRACER}).onSuccess(),this.safeEmit(dT.JOIN_FALLBACK_TO_PROXY,this._joinInfo.proxyServer),kC(\"JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE\")&&this._joinInfo.turnServer.servers.forEach((e=>{\"forceturn\"in e&&(e.forceturn=!0)})),this._gateway.join(this._joinInfo,this._key)}if(KC.info(\"[\".concat(this._clientId,\"] join by datachannel timeout, fallback to websocket\")),!this._joinInfo||!this._key)throw new xv(xg.INVALID_OPERATION);return rv.reportApiInvoke(this._sessionId,{name:sT.DATACHANNEL_FAILBACK,options:[this.store.clientId],tag:oT.TRACER}).onSuccess(),this._joinGateway()}return e})).then((e=>e))}async leave(){KC.info(\"[\".concat(this._clientId,\"] Leaving channel\")),window.removeEventListener(Sg()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._reset(),function(e){const t=cv.indexOf(e);-1!==t&&cv.splice(t,1)}(this);const e=await this._leaveMutex.lock();if(\"DISCONNECTED\"===this.connectionState)return KC.info(\"[\".concat(this._clientId,\"] Leaving channel repeated, success\")),void e();await this._gateway.leave(\"CONNECTED\"!==this.connectionState),KC.info(\"[\".concat(this._clientId,\"] Leaving channel success\")),this._joinAndNotLeaveYet=!1,this.store.resetJoinChannelServiceRecords(),e()}async publish(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!Array.isArray(e)){if(!(e instanceof iA))return this._publishDataChannel(e);e=[e]}if(0===e.length)throw new xv(xg.INVALID_PARAMS,\"param list is empty\");const i=e;if(\"audience\"===this._gateway.role)throw new xv(xg.INVALID_OPERATION,\"audience can not publish stream\");for(const e of i){if(!(e instanceof iA))throw new xv(xg.INVALID_PARAMS,\"parameter is not local track\");if(!e._enabled&&t)throw new xv(xg.TRACK_IS_DISABLED,\"can not publish a disabled track: \".concat(e.getTrackId()))}KC.info(\"[\".concat(this._clientId,\"] Publishing tracks, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))));const n=await this._publishMutex.lock();await this._configDistribute.awaitConfigDistributeComplete(),t&&i.forEach((e=>{const t=this._configDistribute.getBitrateLimit();e instanceof Sb&&t&&e.setBitrateLimit(t.uplink)}));try{await this._publishHighStream(i),KC.info(\"[\".concat(this._clientId,\"] Publish success, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))))}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] publish error\"),e.toString()),e}finally{n()}}async _publishDataChannel(e){jg(e.id,\"id\",0,65535,!0),Fg(e.ordered,\"ordered\"),Wg(e.metadata,\"metadata\",0,512),KC.info(\"[\".concat(this._clientId,\"] Publishing datachannels, id \").concat(e.id));const t=await this._publishMutex.lock();try{if(-1!==this._p2pChannel.getAllDataChannels().findIndex((t=>t.id===e.id)))throw new xv(xg.INVALID_PARAMS,\"Invalid id: \".concat(e.id,\". If you want to republish the datachannel, unpublish first\"));if(!this._joinInfo||void 0===this._uid)throw new xv(xg.INVALID_OPERATION,\"Can't publish datachannel, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"can not publish datachannel in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&kC(\"FORCE_TURN\")&&!kC(\"TURN_ENABLE_TCP\")&&!kC(\"TURN_ENABLE_UDP\"))throw new xv(xg.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");const i=new sD(e);await this._p2pChannel.publishDataChannel([i]);try{const t={streamId:e.id,ordered:e.ordered,maxRetransmits:kC(\"DATASTREAM_MAX_RETRANSMITS\"),metadata:e.metadata,channelId:i._originDataChannelId};await this._gateway.publishDataChannel(this._uid,t,!0)}catch(e){if(e.code!==xg.DISCONNECT_P2P)throw e}return await i._waitTillOpen(),KC.info(\"[\".concat(this._clientId,\"] Publish dataChannels success, id \").concat(i.id)),i}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] publish datachannels error\"),e.toString()),e}finally{t()}}async unpublish(e){if(!this._joinInfo||void 0===this._uid)throw new xv(xg.INVALID_OPERATION,\"Can't unpublish stream, haven't joined yet!\");let t=[];if(e)if(Array.isArray(e))t=e;else{if(!(e instanceof iA))return this._unpublishDataChannel([e]);t=[e]}else this.store.useP2P||await this._unpublishDataChannel(),t=this._p2pChannel.getAllTracks(!0);KC.info(\"[\".concat(this._clientId,\"] Unpublish tracks, tracks \").concat(t.map((e=>\"\".concat(e.getTrackId(),\" \"))),\" \"));const i=await this._publishMutex.lock();try{if(this._p2pChannel instanceof PM){const e=await this._p2pChannel.unpublish(t);if(e){const t=await this._gateway.sendExtensionMessage(wI.UNPUBLISH,e);t&&await this._p2pChannel.setDescription(\"local\",t)}}else{const e=await this._p2pChannel.unpublish(t);e&&await this._gateway.unpublish(e,this._uid),KC.info(\"[\".concat(this._clientId,\"] Unpublish success,tracks \").concat(t.map((e=>\"\".concat(e.getTrackId())))))}}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] unpublish error\"),e.toString()),e}finally{i&&i()}}async _unpublishDataChannel(e){void 0!==e&&0!==e.length||(e=this._p2pChannel.getAllDataChannels()),KC.info(\"[\".concat(this._clientId,\"] Unpublish datachannels, datachannels \").concat(e.map((e=>\"\".concat(e.id,\" \"))),\" \"));const t=await this._publishMutex.lock();try{const i=await this._p2pChannel.unpublishDataChannel(e);i&&await this._gateway.unpublishDataChannel(i),KC.info(\"[\".concat(this._clientId,\"] Unpublish dataChannel success,dataChannel \").concat(e.map((e=>\"\".concat(e.id)))))}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] unpublish dataChannel error\"),e.toString()),e}finally{t&&t()}}async subscribe(e,t,i){return\"datachannel\"===t?this._subscribeDataChannel(e,i):this._subscribe(e,t)}async _subscribeDataChannel(e,t){var i;if(jg(t,\"channelId\",0,65535,!0),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe datachannel, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe datachannel in \".concat(this.connectionState,\" state\"));if(!this._users.find((t=>t===e)))throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");if(!e.hasAudio&&!e.hasVideo&&0===e._dataChannels.length)throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),new xv(xg.INVALID_REMOTE_USER,\"user is not published\");const n=null===(i=e._dataChannels)||void 0===i?void 0:i.find((e=>e.id===t));if(!n)throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, remote datachannel is not published\")),new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);const r=await this._subscribeMutex.lock();KC.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: datachannel\"));try{const t=await this._p2pChannel.subscribeDataChannel(e,[n]);if(t&&Pr(t).call(t,n.id))try{var s;if(!n._originDataChannelId)throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, cannot get RTCDatachannel\")),new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);const t={id:n.id,datachannelId:n._originDataChannelId,ordered:n.ordered,maxRetransmits:n.maxRetransmits,metadata:null!==(s=n.metadata)&&void 0!==s?s:\"\"};await this._gateway.subscribeDataChannel(e.uid,t,!0)}catch(t){if((null==t?void 0:t.code)!==xg.WS_ABORT)throw await this._p2pChannel.unsubscribeDataChannel(e,[n]),t;await this._p2pChannel.unsubscribeDataChannel(e,[n]),this._p2pChannel.setPendingRemoteDataChannel(e,n.id)}return await n._waitTillOpen(),KC.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: datachannel\")),n}finally{r()}}async _p2pSubscribe(e,t,i){if(Bg(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));if(!this._users.find((t=>t===e))){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not published\");throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!i&&(\"audio\"===t&&!e.hasAudio||\"video\"===t&&!e.hasVideo)){const i=new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}const n=await this._subscribeMutex.lock();KC.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));const r=\"audio\"===t?_I.LocalAudioTrack:this._joinInfo.defaultVideoStream===Uy.LOW_STREAM?_I.LocalVideoLowTrack:_I.LocalVideoTrack;try{await this._p2pChannel.hasRemoteMediaWithLock(e,t)?await this._p2pChannel.unmuteRemote(e,t):(this.store.subscribe(e.uid,t,Date.now()),this._p2pChannel instanceof PM&&await this._gateway.sendExtensionMessage(wI.SUBSCRIBE,{trackType:r})),KC.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{KC.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new xv(xg.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw KC.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{n()}}async _subscribe(e,t,i){if(this._p2pChannel instanceof PM)return this._p2pSubscribe(e,t);if(Bg(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));if(!this._users.find((t=>t===e))){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not published\");throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!(i||(\"audio\"!==t||e.hasAudio&&void 0!==e._audioSSRC)&&(\"video\"!==t||e.hasVideo&&void 0!==e._videoSSRC))){const i=new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);throw KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}let n=\"audio\"===t?e._audioSSRC:e._videoSSRC,r=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,o={stream_type:\"audio\"===t?hI.AUDIO:hI.VIDEO,ssrcId:n};const a=await this._subscribeMutex.lock();KC.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{const i=\"audio\"===t?e._audioSSRC:e._videoSSRC;void 0!==i&&i!==n&&(n=i,r=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,o={stream_type:\"audio\"===t?hI.AUDIO:hI.VIDEO,ssrcId:n}),cD.markSubscribeStart(this.store.clientId,n),this.store.subscribe(e.uid,t,Date.now()),await this._p2pChannel.subscribe(e,t,n,s,r);try{await this._gateway.subscribe(e.uid,o,!0)}catch(i){if((null==i?void 0:i.code)!==xg.WS_ABORT)throw await this._p2pChannel.unsubscribe(e,t),i;await this._p2pChannel.unsubscribe(e,t,!0),this._p2pChannel.setPendingRemoteMedia(e,t)}this.store.subscribe(e.uid,t,void 0,Date.now()),this._p2pChannel.reportSubscribeEvent(!0,null,e,t)}catch(i){throw this._p2pChannel.reportSubscribeEvent(!1,null==i?void 0:i.code,e,t),i}KC.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{KC.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new xv(xg.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw KC.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{a()}}async massSubscribe(e){if(Hg(e,\"subscribeList\"),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const t=Date.now(),i=new Map,n=await this._subscribeMutex.lock();KC.info(\"[\".concat(this._clientId,\"]start massSubscribe user \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \")));const r=(e=[...e]).map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i}})),s=await this._p2pChannel.globalLock();try{var o;for(let t=e.length-1;t>=0;t--){const n=e[t],{user:s,mediaType:o}=n;if(Bg(o,\"mediaType\",[\"audio\",\"video\"]),!s){const e=new xv(xg.INVALID_PARAMS,\"user property does not exist in subscribeList item\");throw KC.error(\"[\".concat(this._clientId,\"] user property does not exist in subscribeList item\")),e}if(!this._users.find((e=>e===s))){const i=new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");KC.error(\"[\".concat(this._clientId,\"] can not massSubscribe \").concat(s.uid,\", this user is not in the channel\")),r[t].error=i,e.splice(t,1);continue}if(\"audio\"===o&&(!s.hasAudio||void 0===s._audioSSRC)||\"video\"===o&&(!s.hasVideo||void 0===s._videoSSRC)){const i=new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);KC.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(s.uid,\" with mediaType \").concat(o,\", remote user is not published\")),r[t].error=i,e.splice(t,1);continue}const a=iI.Video|iI.LwoVideo,c=i.get(s);if(c){if(\"video\"===o?c&a:c&iI.Audio){e.splice(t,1),KC.warning(\"[\".concat(this._clientId,\"] repeat massSubscribe user:\").concat(s.uid,\", mediaType:\").concat(o,\" twice\"));continue}i.set(s,c|(\"video\"===o?a:iI.Audio))}else i.set(s,\"video\"===o?a:iI.Audio)}for(let t=e.length-1;t>=0;t--){const n=e[t],{user:r,mediaType:s}=n,o=iI.Video|iI.LwoVideo;if(this._p2pChannel.hasRemoteMedia(r,s)){await this._p2pChannel.unmuteRemoteNoLock(r,s);const n=i.get(r);i.set(r,\"video\"===s?n^o:n^iI.Audio),e.splice(t,1)}}this.store.massSubscribe(e.map((e=>({userId:e.user.uid,type:e.mediaType}))),t);const a=cS(o=Array.from(i.entries())).call(o,((e,t)=>{let[i,n]=t;if(0===n)return e;const r={stream_id:i.uid,stream_type:n};return n&iI.Audio&&(r.audio_ssrc=i._audioSSRC),n&iI.Video&&(r.video_ssrc=i._videoSSRC),e.push(r),e}),[]);try{e.length>0&&await this._p2pChannel.massSubscribeNoLock(e.map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i,ssrcId:i===hI.VIDEO?t._videoSSRC:t._audioSSRC,rtxSsrcId:i===hI.VIDEO?t._rtxSsrcId:void 0}})));const i=new Map;if(a.length>0){const e=await this._gateway.subscribeAll(a,!0);((null==e?void 0:e.users)||[]).forEach((e=>{let{stream_id:t,video_error_code:n,audio_error_code:r,error_code:s}=e;(n||r||s)&&i.set(t,{video_error_code:n,audio_error_code:r,error_code:s})}))}if(Array.from(i.entries()).length>0){const e=Array.from(i.entries()).map((e=>{let t,[i,n]=e;n.error_code||n.video_error_code&&n.audio_error_code?t=void 0:n.video_error_code?t=hI.VIDEO:n.audio_error_code&&(t=hI.AUDIO);return{user:this.remoteUsers.find((e=>e.uid===i)),mediaType:t}}));await this._p2pChannel.massUnsubscribeNoLock(e)}for(const e of r){const t=i.get(e.user.uid);if(t){const i=t.error_code||\"audio\"===e.mediaType&&t.audio_error_code||\"video\"===e.mediaType&&t.video_error_code;if(i){const t=UI(i);KC.error(\"user:\".concat(e.user.uid,\" mediaType:\").concat(e.mediaType,\" has massSubscribe error \").concat(t.desc)),e.error=new xv(xg.SUBSCRIBE_FAILED,\"code \".concat(i,\": \").concat(t.desc))}}e.error||(\"video\"===e.mediaType?e.track=e.user.videoTrack:e.track=e.user.audioTrack)}return this.store.massSubscribe(r.filter((e=>!e.error)).map((e=>({userId:e.user.uid,type:e.mediaType}))),void 0,Date.now()),r.forEach((e=>{var i;rv.subscribe(this.store.sessionId,{succ:!!e.error,ec:(null===(i=e.error)||void 0===i?void 0:i.code)||null,video:e.mediaType===hI.VIDEO,audio:e.mediaType===hI.AUDIO,peerid:e.user.uid,subscribeRequestid:e.mediaType===hI.VIDEO?e.user._videoSSRC:e.user._audioSSRC,p2pid:this.store.p2pId,eventElapse:Math.floor(performance.now()-t)},!0)})),KC.info(\"[\".concat(this._clientId,\"] massSubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \"))),r}catch(t){throw await this._p2pChannel.massUnsubscribeNoLock(e),t}}finally{s(),n()}}async unsubscribe(e,t,i){if(t||this.store.useP2P){if(\"datachannel\"===t)return this._unsubscribeDataChannel(e,i)}else await this._unsubscribeDataChannel(e,i);if(t&&Bg(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't unsubscribe stream, haven't joined yet!\");if(!this._users.find((t=>t===e))){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");throw KC.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}KC.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: \").concat(t));const n=await this._subscribeMutex.lock();try{if(this._p2pChannel instanceof PM)await this._gateway.sendExtensionMessage(wI.UNSUBSCRIBE,{mediaType:t});else{const i=await this._p2pChannel.unsubscribe(e,t);i&&await this._gateway.unsubscribe(i,e.uid),KC.info(\"[\".concat(this._clientId,\"] unsubscribe success uid: \").concat(e.uid,\", mediaType: \").concat(t))}}catch(t){if(t.code===xg.DISCONNECT_P2P)return void KC.warning(\"disconnecting p2p, abort unsubscribe request.\");throw KC.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}finally{n()}}async _unsubscribeDataChannel(e,t){if(t&&jg(t,\"id\",0,65535,!0),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't unsubscribe datachannel, haven't joined yet!\");if(!this._users.find((t=>t===e))){const t=new xv(xg.INVALID_REMOTE_USER,\"user is not in the channel\");throw KC.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}let i;if(\"number\"==typeof t){const n=e._dataChannels.find((e=>e.id===t));n&&(i=[n])}else i=e._dataChannels;if(void 0===i){const i=new xv(xg.REMOTE_USER_IS_NOT_PUBLISHED);throw KC.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\" with channelId \").concat(t,\", remote datachannel is not published\")),i}KC.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(i.map((e=>e.id))));try{const t=await this._p2pChannel.unsubscribeDataChannel(e,i);t&&await this._gateway.unsubscribeDataChannel(t,e.uid),KC.info(\"[\".concat(this._clientId,\"] unsubscribe datachannel success uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(t))}catch(t){if(t.code===xg.DISCONNECT_P2P)return void KC.warning(\"disconnecting p2p, abort unsubscribe request.\");throw KC.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}}async massUnsubscribe(e){if(Hg(e,\"unsubscribeList\"),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't unsubscribeAll stream, haven't joined yet!\");KC.info(\"[\".concat(this._clientId,\"] start massUnsubscribe \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join())),e=[...e];const t=new Map;for(let i=e.length-1;i>=0;i--){const{user:n,mediaType:r}=e[i];if(!n){const e=new xv(xg.INVALID_PARAMS,\"user property does not exist in unsubscribeList item\");throw KC.error(\"[\".concat(this._clientId,\"] user property does not exist in unsubscribeList item\")),e}Bg(r,\"mediaType\",[\"video\",\"audio\",void 0]);if(!this._users.find((e=>e===n))){KC.warning(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(n.uid,\", user is not in the channel\")),e.splice(i,1);continue}const s=iI.Video|iI.LwoVideo;if(t.has(n)){const o=t.get(n);let a;switch(r){case\"video\":a=o&s;break;case\"audio\":a=o&iI.Audio;break;default:a=o&(iI.Audio|s)}if(a){KC.warning(\"[\".concat(this._clientId,\"] repeat massUnsubscribe user:\").concat(n.uid,\",mediaType:\").concat(r,\" twice.\")),e.splice(i,1);continue}r?\"audio\"===r?t.set(n,o|iI.Audio):\"video\"===r&&t.set(n,o|s):t.set(n,o|iI.Audio|s)}else r?\"audio\"===r?t.set(n,iI.Audio):\"video\"===r&&t.set(n,s):t.set(n,iI.Audio|s)}try{const t=await this._p2pChannel.massUnsubscribe(e);t&&await this._gateway.massUnsubscribe(t),KC.info(\"[\".concat(this._clientId,\"] massUnsubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join()))}catch(e){if(e.code===xg.DISCONNECT_P2P)return void KC.warning(\"[\".concat(this._clientId,\"] disconnecting p2p, abort unsubscribe request.\"));throw KC.error(\"[\".concat(this._clientId,\"] massUnsubscribe error\"),e.toString()),e}}async setLowStreamParameter(e){!function(e){if(!e)throw new Vg(xg.INVALID_PARAMS);Kg(e.width)||Gg(e.width,\"streamParameter.width\"),Kg(e.height)||Gg(e.height,\"streamParameter.height\"),Kg(e.framerate)||Gg(e.framerate,\"streamParameter.framerate\"),Kg(e.bitrate)||jg(e.bitrate,\"streamParameter.bitrate\")}(e),(!e.width&&e.height||e.width&&!e.height)&&KC.warning(\"[\".concat(this._clientId,\"] The width and height parameters take effect only when both are set\")),KC.info(\"[\".concat(this._clientId,\"] set low stream parameter to\"),JSON.stringify(e));const t=this._configDistribute.getLowStreamConfigDistribute();if(t&&t.bitrate&&e.bitrate&&t.bitrate<e.bitrate&&(e.bitrate=t.bitrate),this._lowStreamParameter=e,this._isDualStreamEnabled)return this._p2pChannel.updateVideoStreamParameter(e,_I.LocalVideoLowTrack)}async enableDualStream(){if(!_A().supportDualStream)throw rv.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),new xv(xg.NOT_SUPPORTED,\"Your browser is not support dual stream\");if(this._isDualStreamEnabled)throw new xv(xg.INVALID_OPERATION,\"Dual stream is already enabled\");if(this._p2pChannel.canPublishLowStream())try{await this._publishLowStream()}catch(e){throw rv.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),e}this._isDualStreamEnabled=!0,rv.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!0}),KC.info(\"[\".concat(this._clientId,\"] enable dual stream\"))}async disableDualStream(){if(this._isDualStreamEnabled){if(!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(this._p2pChannel.getLocalMedia(_I.LocalVideoLowTrack))try{const e=await this._p2pChannel.unpublishLowStream();e&&await this._gateway.unpublish(e,this._joinInfo.stringUid||this._joinInfo.uid)}catch(e){throw rv.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!1}),e}this._isDualStreamEnabled=!1,rv.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!0}),KC.info(\"[\".concat(this._clientId,\"] disable dual stream\"))}}async setClientRole(e,t){if(function(e){Bg(e,\"role\",[\"audience\",\"host\"])}(e),t&&mT(t),\"rtc\"===this.mode)throw KC.warning(\"[\".concat(this._clientId,\"]rtc mode can not use setClientRole\")),new xv(xg.INVALID_OPERATION,\"rtc mode can not use setClientRole\");if(t&&t.level&&\"host\"===e)throw new xv(xg.INVALID_OPERATION,\"host mode can not set audience latency level\");if(\"audience\"===e&&this._p2pChannel.hasLocalMedia())throw new xv(xg.INVALID_OPERATION,\"can not set client role to audience when publishing stream\");await this._gateway.setClientRole(e,t),this._config.role=e,KC.info(\"[\".concat(this._clientId,\"] set client role to \").concat(e,\", level: \").concat(t&&t.level))}getRemoteInboundOffset(){var e;const t=null===(e=this._p2pChannel.getStats())||void 0===e?void 0:e.audioSend[0];if(!t||!t.timestamp)return 0;const i=t.timestamp-Date.now();return Math.abs(i)>1e3+t.rttMs+100?this.ntpAlignErrorCount+=1:this.ntpAlignErrorCount=0,this.ntpAlignErrorCount>=3?i:0}getNtpWallTimeInMs(){return\"visible\"===document.visibilityState&&(this.remoteInboundOffset=this.getRemoteInboundOffset()),this.remoteInboundOffset+Date.now()+this._gateway.ntpOffset}setProxyServer(e,t){if(Wg(e,\"proxyServer\"),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Set proxy server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new xv(xg.INVALID_OPERATION,\"You have already set the proxy\")}this._proxyServer=e,rv.setProxyServer(this._proxyServer),KC.setProxyServer(this._proxyServer),KC.info(\"[\".concat(this._clientId,\"] Set proxy server \").concat(t?\"by initialize call\":\"\",\" success.\"))}setTurnServer(e,t){if(Array.isArray(e)||(e=[e]),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Set turn server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new xv(xg.INVALID_OPERATION,\"You have already set the proxy\")}if(_T(e))return this._turnServer={servers:e,mode:\"original-manual\"},void KC.info(\"[\".concat(this._clientId,\"] Set original turnserver \").concat(t?\"by initialize call\":\"\",\" success: \").concat(e.map((e=>e.urls)).join(\",\"),\".\"));e.forEach((e=>ET(e))),this._turnServer={servers:e,mode:\"manual\"},KC.info(\"[\".concat(this._clientId,\"] Set turnserver \").concat(t?\"by initialize call\":\"\",\" success.\"))}setLicense(e){if(\"DISCONNECTED\"!==this.connectionState){throw new xv(xg.INVALID_OPERATION,\"you should set license before join channel\")}if(Wg(e,\"license\",32,32),!/^[A-Za-z\\d]+$/.test(e))throw new xv(xg.INVALID_PARAMS,\"license should only contains characters from A-Z a-z 0-9\");this._license=e,KC.info(\"[\".concat(this._clientId,\"] set license success\"),e)}startProxyServer(e){if(\"DISCONNECTED\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Start proxy server before join channel\");if(this._proxyServer||\"manual\"===this._turnServer.mode||this._useLocalAccessPoint)throw new xv(xg.INVALID_OPERATION,\"You have already set the proxy\");const t=[3,4,5];let i;switch(void 0===e&&(e=3),e){case 1:case 2:throw new xv(xg.NOT_SUPPORTED,\"proxy mode 1/2 has been deprecated and not supported.\");case 3:i=\"proxy3\";break;case 4:i=\"proxy4\";break;case 5:i=\"proxy5\";break;default:throw new xv(xg.INVALID_PARAMS,\"proxy server mode must be \".concat(t.join(\"|\")))}this._cloudProxyServerMode=i,this.store.cloudProxyServerMode=i,KC.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode)}stopProxyServer(){if(\"DISCONNECTED\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Stop proxy server after leave channel\");rv.setProxyServer(),KC.setProxyServer(),this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\",KC.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode),this._proxyServer=void 0,this._turnServer={mode:\"auto\",servers:[]}}setLocalAccessPointsV2(e){if(!e.accessPoints)throw new xv(xg.INVALID_PARAMS,\"accessPoints is required.\");Hg(e.accessPoints.serverList,\"accessPoints.serverList\"),Wg(e.accessPoints.domain,\"accessPoints.domain\");const t=(e,t)=>{jg(e,t,0,65535,!0)};let i=443;if(e.accessPoints.port&&(t(e.accessPoints.port,\"accessPoints.port\"),i=e.accessPoints.port),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new xv(xg.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");kC(\"CLOSE_AFB_FOR_LOCAL_AP\")&&(LC(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\",!1),LC(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\",!1));const n=/^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/,r=e.accessPoints.domain,s=e.accessPoints.serverList.map((e=>n.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(r):e)),o=s.map((e=>\"\".concat(e,\":\").concat(i)));this._useLocalAccessPoint=!0,this._setLocalAPVersion=2,LC(\"WEBCS_DOMAIN\",o),LC(\"WEBCS_DOMAIN_BACKUP_LIST\",o),LC(\"GATEWAY_DOMAINS\",[r]),e.report&&e.report.hostname&&Array.isArray(e.report.hostname)&&e.report.hostname.length?(Hg(e.report.hostname,\"report.hostname\"),LC(\"EVENT_REPORT_DOMAIN\",e.report.hostname[0]),LC(\"EVENT_REPORT_BACKUP_DOMAIN\",e.report.hostname[1]||e.report.hostname[0])):(LC(\"EVENT_REPORT_DOMAIN\",s[0]),LC(\"EVENT_REPORT_BACKUP_DOMAIN\",s[1]||s[0]));let a=6443;e.report&&e.report.port&&(t(e.report.port,\"report.port\"),a=e.report.port),LC(\"STATS_COLLECTOR_PORT\",a),e.report?LC(\"ENABLE_EVENT_REPORT\",!0):LC(\"ENABLE_EVENT_REPORT\",!1);let c=\"\";e.log&&e.log.hostname&&Array.isArray(e.log.hostname)&&e.log.hostname.length?(Hg(e.log.hostname,\"log.hostname\"),c=e.log.hostname[0]):c=s[0];let d=6444;e.log&&e.log.port&&(t(e.log.port,\"log.port\"),d=e.log.port),LC(\"LOG_UPLOAD_SERVER\",\"\".concat(c,\":\").concat(d));let l=[];e.cds&&e.cds.hostname&&Array.isArray(e.cds.hostname)&&e.cds.hostname.length?(Hg(e.cds.hostname,\"cds.hostname\"),l=e.cds.hostname):l=s;let h=443;e.cds&&e.cds.port&&(t(e.cds.port,\"cds.port\"),h=e.cds.port),LC(\"CDS_AP\",l.map((e=>\"\".concat(e,\":\").concat(h)))),e.cds?LC(\"ENABLE_CONFIG_DISTRIBUTE\",!0):LC(\"ENABLE_CONFIG_DISTRIBUTE\",!1),KC.info(\"set local access point v2 success\")}setLocalAccessPoints(e,t){if(Hg(e,\"serverList\"),Wg(t,\"domain\"),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new xv(xg.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");const i=/^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;e=e.map((e=>i.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(t):e)),this._useLocalAccessPoint=!0,this._setLocalAPVersion=1,LC(\"WEBCS_DOMAIN\",e),LC(\"WEBCS_DOMAIN_BACKUP_LIST\",e),LC(\"GATEWAY_DOMAINS\",[t]),LC(\"EVENT_REPORT_DOMAIN\",e[0]),LC(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]||e[0]),LC(\"LOG_UPLOAD_SERVER\",\"\".concat(e[0],\":6444\")),KC.info(\"[\".concat(this._clientId,\"] set local access point success\"))}async setRemoteDefaultVideoStreamType(e){if(Bg(e,\"streamType\",[0,1]),this._remoteDefaultVideoStreamType=e,this._joinInfo)try{await this._gateway.setDefaultRemoteVideoStreamType(e),this._joinInfo.defaultVideoStream=this._remoteDefaultVideoStreamType}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] set default remote video stream type error\"),e.toString()),e}else KC.debug(\"[\".concat(this._clientId,\"] haven't joined yet, cache remoteDefaultVideoStreamType \").concat(e))}async setRemoteVideoStreamType(e,t){Bg(t,\"streamType\",[0,1]);try{await this._gateway.setRemoteVideoStreamType(e,t),setTimeout((()=>{const t=this._users.find((t=>t.uid===e));t&&t.videoTrack&&t.videoTrack.updateMediaStreamTrackResolution()}),2e3)}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] set remote video stream type error\"),e.toString()),e}KC.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" video stream type to \").concat(t)),this._remoteStreamTypeCacheMap.set(e,t)}async setStreamFallbackOption(e,t){Bg(t,\"fallbackType\",[0,1,2]);try{await this._gateway.setStreamFallbackOption(e,t)}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] set stream fallback option\"),e.toString()),e}KC.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" stream fallback type to \").concat(t)),this._streamFallbackTypeCacheMap.set(e,t)}setEncryptionConfig(e,t,i){!function(e){Bg(e,\"encryptionMode\",[\"aes-128-xts\",\"aes-256-xts\",\"aes-128-ecb\",\"sm4-128-ecb\",\"aes-128-gcm\",\"aes-256-gcm\",\"aes-128-gcm2\",\"aes-256-gcm2\",\"none\"])}(e),Wg(t,\"secret\");const n=[\"aes-128-gcm2\",\"aes-256-gcm2\"];if(Pr(n).call(n,e)){if(!i||!(i instanceof Uint8Array&&32===i.length))throw new xv(xg.INVALID_PARAMS,\"salt must be an Uint8Array and exactly equal to 32 bytes\")}else if(i)throw new xv(xg.INVALID_PARAMS,\"current encrypt mode does not need salt\");new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'\\\"|{}\\\\[\\\\]])(?=.{8,})\").test(t)||KC.warning(\"The secret is not strong:\\n      The secret must contain at least 1 lowercase alphabetical character,\\n      The secret must contain at least 1 uppercase alphabetical character,\\n      The secret must contain at least 1 numeric character,\\n      The secret must contain at least one special character,\\n      The secret must be eight characters or longer.\\n      \"),this._encryptionMode=e,this._encryptionSecret=t,i&&(this._encryptionSalt=PT(i))}async renewToken(e){if(Wg(e,\"token\",1,2047),!this._key||!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"renewToken should not be called before user join\");const t=this._key;this._key=e,this._joinInfo&&(this._joinInfo.token=e);const i=await this._renewTokenMutex.lock();try{if(kC(\"USE_NEW_TOKEN\")){KC.debug(\"[\".concat(this._clientId,\"] start renew token with ticket from unilbs\"));const t=await mP(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||JT);KC.debug(\"[\".concat(this._clientId,\"] get ticket from unilbs success\")),await this._gateway.renewToken({token:e,ticket:t})}else KC.debug(\"[\".concat(this._clientId,\"] start renew token without ticket\")),await this._gateway.renewToken({token:e});KC.debug(\"[\".concat(this._clientId,\"] renewToken success\"))}catch(e){throw this._key=t,this._joinInfo.token=t,KC.error(\"[\".concat(this._clientId,\"] renewToken failed\"),e.toString()),e}finally{i()}}enableAudioVolumeIndicator(){this._audioVolumeIndicationInterval?KC.warning(\"you have already enabled audio volume indicator!\"):this._audioVolumeIndicationInterval=window.setInterval((()=>{const e=this._p2pChannel.getAudioLevels();this.safeEmit(dT.VOLUME_INDICATOR,e)}),kC(\"AUDIO_VOLUME_INDICATION_INTERVAL\")||2e3)}getRTCStats(){const e=this._statsCollector.getRTCStats(),t=this._gateway.getInChannelInfo();return e.Duration=Math.round(t.duration/1e3),e}async startLiveStreaming(e,t){if(!t){if(\"h264\"!==this.codec)throw new xv(xg.LIVE_STREAMING_INVALID_RAW_STREAM,\"raw streaming is only support h264\");if(!this._p2pChannel.hasLocalMedia())throw new xv(xg.LIVE_STREAMING_INVALID_RAW_STREAM,\"can not find stream to raw streaming\")}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(e)||this._liveTranscodeStreamingClient&&this._liveTranscodeStreamingClient.hasUrl(e))throw new xv(xg.LIVE_STREAMING_TASK_CONFLICT);const i=t?yv.TRANSCODE:yv.RAW;return this._createLiveStreamingClient(i).startLiveStreamingTask(e,i)}setLiveTranscoding(e){return this._createLiveStreamingClient(yv.TRANSCODE).setTranscodingConfig(e)}async stopLiveStreaming(e){const t=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient].filter((t=>t&&t.hasUrl(e)));if(!t.length)throw new xv(xg.INVALID_PARAMS,\"can not find live streaming url to stop\");await tg.all(t.map((t=>t&&t.stopLiveStreamingTask(e))))}async addInjectStreamUrl(e,t){if(!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"can not addInjectStreamUrl, no joininfo\");const i=this._createLiveStreamingClient(yv.INJECT);i.setInjectStreamConfig(t,0),await i.startLiveStreamingTask(e,yv.INJECT)}async removeInjectStreamUrl(){var e;const t=this._createLiveStreamingClient(yv.INJECT),i=Array.from(kv(e=t.streamingTasks).call(e)).find((e=>e.mode===yv.INJECT));if(!this._joinInfo||!i)throw new xv(xg.INVALID_OPERATION,\"can remove addInjectStreamUrl, no joininfo or inject task\");await t.stopLiveStreamingTask(i.url)}async startChannelMediaRelay(e){bP(e);const t=this._createChannelMediaRelayClient();await t.startChannelMediaRelay(e)}async updateChannelMediaRelay(e){bP(e);const t=this._createChannelMediaRelayClient();await t.updateChannelMediaRelay(e)}async stopChannelMediaRelay(){const e=this._createChannelMediaRelayClient();await e.stopChannelMediaRelay(),this._statsCollector.onStatsChanged&&(this._statsCollector.onStatsChanged=void 0)}sendStreamMessage(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"can not send data stream, not joined\");if((\"string\"==typeof e||e instanceof Uint8Array)&&(e={payload:e}),\"string\"==typeof e.payload){const t=new TextEncoder;e.payload=t.encode(e.payload)}if(new Blob([e.payload]).size>1024)throw new xv(xg.INVALID_PARAMS,\"stream message out of range.\");return this._gateway.signal.request(Tv.DATA_STREAM,{payload:PT(e.payload),syncWithAudio:e.syncWithAudio,sendTs:Date.now()-UM},!t)}sendMetadata(e){if(!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"can not send metadata, not joined\");if(new Blob([e]).size>1024)throw new xv(xg.METADATA_OUT_OF_RANGE);return this._gateway.signal.request(Tv.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:PT(e)})}async sendCustomReportMessage(e){if(Array.isArray(e)||(e=[e]),e.forEach(JC),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"can not send custom report, not joined\");await rv.sendCustomReportMessage(this._joinInfo.sid,e)}getLocalAudioStats(){return this._statsCollector.getLocalAudioTrackStats()}getRemoteAudioStats(){return this._statsCollector.getRemoteAudioTrackStats()}getLocalVideoStats(){return this._statsCollector.getLocalVideoTrackStats()}getRemoteVideoStats(){return this._statsCollector.getRemoteVideoTrackStats()}getRemoteNetworkQuality(){return this._statsCollector.getRemoteNetworkQualityStats()}async pickSVCLayer(e,t){Bg(t.spatialLayer,\"spatialLayer\",[0,1,2,3]),Bg(t.temporalLayer,\"temporalLayer\",[0,1,2,3]);try{await this._gateway.pickSVCLayer(e,t)}catch(e){throw KC.error(\"[\".concat(this._clientId,\"] pick SVC layer failed\"),e.toString()),e}}setRTM2Flag(e){if(Bg(e,\"flag\",[0,1]),!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"Can't setRtm2Flag, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"Can't setRtm2Flag in \".concat(this.connectionState,\" state\"));return this._gateway.setRTM2Flag(e)}_reset(){if(KC.debug(\"[\".concat(this._clientId,\"] reset client\")),this._axiosCancelSource.cancel(),this._axiosCancelSource=EC.CancelToken.source(),this._streamFallbackTypeCacheMap=new Map,this._remoteStreamTypeCacheMap=new Map,this._configDistribute.stopGetConfigDistribute(),this._joinInfo=void 0,this._proxyServer=void 0,this._defaultStreamFallbackType=void 0,this._sessionId=null,this.store.sessionId=null,this._statsCollector.reset(),this._key=void 0,this._appId=void 0,this._uid=void 0,this.store.uid=void 0,this._channelName=void 0,this._encryptionMode=\"none\",this._encryptionSecret=null,this._encryptionSalt=null,this._pendingPublishedUsers=[],this._users.forEach((e=>{e._audioTrack&&e._audioTrack._destroy(),e._videoTrack&&e._videoTrack._destroy(),e._dataChannels&&(e._dataChannels.forEach((e=>e._close())),e._dataChannels.length=0)})),this._users=[],this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0),\"fallback\"===this._cloudProxyServerMode&&(this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\"),this._p2pChannel.reset(),this._publishMutex=new YT(\"client-publish\"),this._subscribeMutex=new YT(\"client-subscribe\"),this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0),this._injectStreamingClient&&(this._injectStreamingClient.terminate(),this._injectStreamingClient.removeAllListeners(),this._injectStreamingClient=void 0),this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0),this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0),this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0),this._inspect)try{this._inspect.close(),this._inspect=void 0}catch(e){}if(this._moderation)try{this.setImageModeration(!1)}catch(e){}}_startSession(e,t){const i=e||VT();e?KC.debug(\"[\".concat(this._clientId,\"] new Session \").concat(i)):KC.debug(\"[\".concat(this._clientId,\"] renewSession \").concat(this._sessionId,\" => \").concat(i)),this._sessionId=i,this.store.sessionId=i,t?rv.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:t.channel,appid:t.appId,mode:this.mode}):this._joinInfo?rv.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._joinInfo.cname,appid:this._joinInfo.appId,mode:this.mode}):this._gateway.joinInfo&&rv.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._gateway.joinInfo.cname,appid:this._gateway.joinInfo.appId,mode:this.mode}),this._joinInfo&&(this._joinInfo.sid=i),this._gateway.joinInfo&&(this._gateway.joinInfo.sid=i)}async _publishHighStream(e){if(!this._joinInfo||void 0===this._uid)throw new xv(xg.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&kC(\"FORCE_TURN\")&&!kC(\"TURN_ENABLE_TCP\")&&!kC(\"TURN_ENABLE_UDP\"))throw new xv(xg.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");KC.debug(\"[\".concat(this._clientId,\"] publish high stream\"));try{if(this._p2pChannel instanceof PM){const t=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter);if(t)try{await this._gateway.sendExtensionMessage(wI.PUBLISH,t)}catch(t){throw this._p2pChannel.unpublish(e),t}}else{const i=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter),n=(await i.next()).value;if(n){var t;let e;try{e=await this._gateway.publish(this._uid,n,!0)}catch(e){if(e.code!==xg.DISCONNECT_P2P)throw i.throw(e),e}await i.next((null===(t=e)||void 0===t?void 0:t.ortc)||[])}this._p2pChannel.reportPublishEvent(!0,null);for(const t of e)t instanceof Sb&&t._encoderConfig&&this._gateway.setVideoProfile(t._encoderConfig),!t.muted&&t.enabled||await this._p2pChannel.muteLocalTrack(t)}}catch(t){if(this._p2pChannel.reportPublishEvent(!1,null==t?void 0:t.code,e),(null==t?void 0:t.code)===xg.WS_ABORT)return;throw t}}async _publishLowStream(){if(!this._joinInfo||void 0===this._uid)throw new xv(xg.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new xv(xg.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));KC.debug(\"[\".concat(this._clientId,\"] publish low stream\"));const e=this._configDistribute.getLowStreamConfigDistribute();e&&e.bitrate&&(this._lowStreamParameter||(this._lowStreamParameter={width:160,height:120,framerate:15,bitrate:50}),this._lowStreamParameter&&this._lowStreamParameter.bitrate&&e.bitrate<this._lowStreamParameter.bitrate&&(this._lowStreamParameter.bitrate=e.bitrate));try{const e=await this._p2pChannel.publishLowStream(this._lowStreamParameter),i=(await e.next()).value;if(i){var t;let n;try{n=await this._gateway.publish(this._uid,i,!0)}catch(t){if(t.code!==xg.DISCONNECT_P2P)throw e.throw(t),t}e.next((null===(t=n)||void 0===t?void 0:t.ortc)||[]),this._p2pChannel.reportPublishEvent(!0,null,void 0,!0)}}catch(e){if(this._p2pChannel.reportPublishEvent(!1,null==e?void 0:e.code,void 0,!0),(null==e?void 0:e.code)===xg.WS_ABORT)return;throw e}}_createLiveStreamingClient(e){if(!this._joinInfo||!this._appId){return new xv(xg.INVALID_OPERATION,\"can not create live streaming client, please join channel first\").throw()}const t=()=>new yP(this._joinInfo,this._config.websocketRetryConfig||JT,this._config.httpRetryConfig||JT),i=e=>{e.onLiveStreamError=(e,t)=>{rv.reportApiInvoke(this._sessionId,{name:sT.ON_LIVE_STREAM_ERROR,options:[e,t],tag:oT.TRACER}).onSuccess(),this.safeEmit(dT.LIVE_STREAMING_ERROR,e,t)},e.onLiveStreamWarning=(e,t)=>{rv.reportApiInvoke(this._sessionId,{name:sT.ON_LIVE_STREAM_WARNING,options:[e,t],tag:oT.TRACER}).onSuccess(),this.safeEmit(dT.LIVE_STREAMING_WARNING,e,t)},e.on(Yv.REQUEST_WORKER_MANAGER_LIST,((e,t,i)=>{if(!this._joinInfo)return i(new xv(xg.INVALID_OPERATION,\"can not find join info to get worker manager\"));_P(e,this._joinInfo,this._axiosCancelSource.token,JT).then(t).catch(i)}))};switch(e){case yv.RAW:return this._liveRawStreamingClient||(this._liveRawStreamingClient=t(),i(this._liveRawStreamingClient)),this._liveRawStreamingClient;case yv.TRANSCODE:return this._liveTranscodeStreamingClient||(this._liveTranscodeStreamingClient=t(),i(this._liveTranscodeStreamingClient)),this._liveTranscodeStreamingClient;case yv.INJECT:return this._injectStreamingClient||(this._injectStreamingClient=t(),this._injectStreamingClient.on(Yv.REQUEST_WORKER_MANAGER_LIST,((e,t,i)=>{if(!this._joinInfo)return i(new xv(xg.INVALID_OPERATION,\"can not find join info to get worker manager\"));_P(e,this._joinInfo,this._axiosCancelSource.token,JT).then(t).catch(i)})),this._injectStreamingClient.onInjectStatusChange=(e,t,i)=>{this.safeEmit(dT.INJECT_STREAM_STATUS,e,t,i)}),this._injectStreamingClient}}_createChannelMediaRelayClient(){if(!this._joinInfo){return new xv(xg.INVALID_OPERATION,\"can not create channel media relay client, please join channel first\").throw()}if(!this._channelMediaRelayClient){const{sendResolutionWidth:e,sendResolutionHeight:t}=this.getLocalVideoStats(),i={width:e,height:t};this._channelMediaRelayClient=new OP(this._joinInfo,this._clientId,this._config.websocketRetryConfig||JT,this._config.httpRetryConfig||JT,i),this._channelMediaRelayClient.on(\"state\",(e=>{e===Qv.RELAY_STATE_FAILURE&&this._channelMediaRelayClient&&this._channelMediaRelayClient.dispose(),this.safeEmit(dT.CHANNEL_MEDIA_RELAY_STATE,e)})),this._channelMediaRelayClient.on(\"event\",(e=>{this.safeEmit(dT.CHANNEL_MEDIA_RELAY_EVENT,e)})),this._statsCollector.onStatsChanged=(e,t)=>{var i;\"resolution\"===e&&(null===(i=this._channelMediaRelayClient)||void 0===i||i.setVideoProfile(t))}}return this._channelMediaRelayClient}_handleUpdateDataChannel(e,t){const{added:i,deleted:n}=e,r=[];Array.isArray(i)&&i.length>0&&i.forEach((e=>{const{uid:i,stream_id:n,ordered:s,max_retrans_times:o,metadata:a}=e,c=this._users.find((e=>e._uintid===i));if(!c)return void KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_data_channel)\"));KC.debug(\"[\".concat(this._clientId,\"] data_channel added with uid \").concat(i)),Pr(r).call(r,c)||r.push(c),c._uintid||(c._uintid=i);if(!(-1!==c._dataChannels.findIndex((t=>t.id===e.stream_id)))){const e={id:n,ordered:!!s,maxRetransmits:o,metadata:a},i=new rD(e);c._dataChannels.push(i),KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(c.uid,\" published datachannel\")),t||this.safeEmit(dT.USER_PUBLISHED,c,\"datachannel\",e)}this._p2pChannel.hasPendingRemoteDataChannel(c,e.stream_id)&&(KC.debug(\"[\".concat(this._clientId,\"] resubscribe datachannel for user \").concat(c.uid,\" after reconnect.\")),this._subscribeDataChannel(c,e.stream_id).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] resubscribe datachannel error\"),e.toString())})))})),t&&(this.safeEmit(dT.PUBLISHED_USER_LIST,this._pendingPublishedUsers),this._pendingPublishedUsers=[]),Array.isArray(n)&&n.length>0&&n.forEach((e=>{const{uid:t,stream_id:i}=e,n=this._users.find((e=>e._uintid===t));if(!n)return void KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_delete_data_channel)\"));const r=n._dataChannels.find((t=>t.id===e.stream_id));r&&(KC.debug(\"[\".concat(this._clientId,\"] data_stream delete with uid \").concat(t)),this._p2pChannel.unsubscribeDataChannel(n,[r]).then((e=>{if(e)return n._dataChannels=n._dataChannels.filter((e=>e!==r)),this._gateway.unsubscribeDataChannel(e,n.uid)})),KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished datachannel ,id:\").concat(r.id)),this.safeEmit(dT.USER_UNPUBLISHED,n,\"datachannel\",r._config))}))}_handleRemoveDataChannels(e){const t=this._users.find((t=>t.uid===e.uid));if(t){if(void 0!==t._dataChannels&&t._dataChannels.length>0){KC.debug(\"[\".concat(this._clientId,\"] datachannel removed with uid \").concat(e.uid));const i=()=>{KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished datachannel\")),t._dataChannels.forEach((e=>{this.safeEmit(dT.USER_UNPUBLISHED,t,\"datachannel\",e._config)}))};this._p2pChannel.unsubscribeDataChannel(t,t._dataChannels).then((e=>{if(e)return this._gateway.unsubscribeDataChannel(e,t.uid)})),i()}}else KC.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_datachannel)\"))}_handleGatewayEvents(){this._gateway.on(eI.DISCONNECT_P2P,(async()=>{await this._p2pChannel.disconnectForReconnect()})),this._gateway.on(eI.CONNECTION_STATE_CHANGE,((e,t,i)=>{var n;if(i===cT.FALLBACK)return;const r=()=>{this.safeEmit(dT.CONNECTION_STATE_CHANGE,e,t,i)};if(rv.reportApiInvoke(this._sessionId||(null===(n=this._gateway.joinInfo)||void 0===n?void 0:n.sid)||null,{name:sT.CONNECTION_STATE_CHANGE,options:[e,t,i],tag:oT.TRACER}).onSuccess(JSON.stringify({cur:e,prev:t,reason:i})),KC.info(\"[\".concat(this._clientId,\"] connection state change: \").concat(t,\" -> \").concat(e)),\"DISCONNECTED\"===e)return this._reset(),void r();if(\"RECONNECTING\"===e)this._users.forEach((e=>{e._trust_in_room_=!1,e._trust_audio_enabled_state_=!1,e._trust_video_enabled_state_=!1,e._trust_audio_mute_state_=!1,e._trust_video_mute_state_=!1,e._trust_audio_stream_added_state_=!1,e._trust_video_stream_added_state_=!1,e._audioSSRC=void 0,e._videoSSRC=void 0,e._videoOrtc=void 0,e._audioOrtc=void 0,e._cname=void 0,e._rtxSsrcId=void 0})),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._userOfflineTimeout=void 0,this._streamRemovedTimeout=void 0;else if(\"CONNECTED\"===e){var s;this._streamFallbackTypeCacheMap.forEach(((e,t)=>{this._gateway.setStreamFallbackOption(t,e).catch((e=>{KC.warning(\"[\".concat(this._clientId,\"] auto set stream fallback option failed\"),e)}))})),this._remoteStreamTypeCacheMap.forEach(((e,t)=>{this._gateway.setRemoteVideoStreamType(t,e).catch((e=>{KC.warning(\"[\".concat(this._clientId,\"] auto set remote stream type failed\"),e)}))})),void 0!==this._remoteDefaultVideoStreamType&&void 0===(null===(s=this._joinInfo)||void 0===s?void 0:s.defaultVideoStream)&&this.setRemoteDefaultVideoStreamType(this._remoteDefaultVideoStreamType).then((()=>{KC.debug(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway connected\"))})).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway failed, \").concat(e))})),this.store.useP2P||(this._p2pChannel.republish(),this._userOfflineTimeout=window.setTimeout((()=>{if(\"CONNECTED\"!==this.connectionState)return;this._userOfflineTimeout=void 0;this._users.filter((e=>!e._trust_in_room_)).forEach((e=>{KC.debug(\"[\".concat(this._clientId,\"] user offline timeout, emit user offline \").concat(e.uid)),this._handleUserOffline({uid:e.uid})}))}),3e3),this._streamRemovedTimeout=window.setTimeout((()=>{\"CONNECTED\"===this.connectionState&&(this._streamRemovedTimeout=void 0,this._users.forEach((e=>{e._trust_audio_mute_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch audio unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,hI.AUDIO,!1)),e._trust_video_mute_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch video unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,hI.VIDEO,!1)),e._trust_audio_enabled_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local audio \").concat(e.uid)),this._handleSetStreamLocalEnable(\"audio\",e.uid,!0)),e._trust_video_enabled_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local video \").concat(e.uid)),this._handleSetStreamLocalEnable(\"video\",e.uid,!0)),e._trust_video_stream_added_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch reset video stream added \").concat(e.uid)),this._handleResetAddStream(e,\"video\")),e._trust_audio_stream_added_state_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch reset audio stream added \").concat(e.uid)),this._handleResetAddStream(e,\"audio\")),e._video_added_||e._audio_added_||(KC.debug(\"[\".concat(this._clientId,\"] auto dispatch stream remove \").concat(e.uid)),this._handleRemoveStream({uid:e.uid,uint_id:e._uintid}))})))}),1e3))}r()})),this._gateway.on(eI.REQUEST_NEW_GATEWAY_LIST,((e,t)=>{if(!this._joinInfo)return t(new xv(xg.UNEXPECTED_ERROR,\"can not recover, no join info\"));dP(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||JT,this.store).then((t=>{this._joinInfo&&(this._joinInfo.apResponse=t.gatewayInfo.res,this._joinInfo.gatewayAddrs=t.gatewayInfo.gatewayAddrs,this._joinInfo.uni_lbs_ip=t.gatewayInfo.uni_lbs_ip);const i=[];t.gatewayInfo.gatewayAddrs.forEach((e=>{let{address:t}=e;const[n,r]=t.split(\":\");this._joinInfo&&this._joinInfo.proxyServer?i.push({proxy:this._joinInfo.proxyServer,host:n,port:r}):i.push({host:n,port:r})})),e(i)})).catch(t)})),this._gateway.on(eI.NETWORK_QUALITY,(e=>{\"normal\"===this._networkQualitySensitivity&&this.safeEmit(dT.NETWORK_QUALITY,e)})),this._gateway.on(eI.STREAM_TYPE_CHANGE,((e,t)=>{this.safeEmit(dT.STREAM_TYPE_CHANGED,e,t);rv.reportApiInvoke(this._sessionId,{name:sT.STREAM_TYPE_CHANGE,options:[e,t],tag:oT.TRACER}).onSuccess(JSON.stringify({uid:e,streamType:t}))})),this._gateway.on(eI.IS_P2P_DISCONNECTED,(e=>{this._p2pChannel.isP2PDisconnected()?e(!0):this._p2pChannel.hasLocalMedia()||this._p2pChannel.hasRemoteMedia()?e(!1):e(!0)})),this._gateway.on(eI.NEED_RENEW_SESSION,(()=>{this._startSession()})),this._gateway.on(eI.REQUEST_P2P_CONNECTION_PARAMS,(async(e,t,i)=>{try{t(await this._p2pChannel.startP2PConnection(e))}catch(e){i(e)}})),this._gateway.on(eI.JOIN_RESPONSE,((e,t)=>{if(this.store.useP2P)return;const{dtlsParameters:i,iceParameters:n,candidates:r,rtpCapabilities:s,setup:o,cname:a}=QP(e.ortc,t);this._p2pChannel.connect(n,i,r,s,o,a)})),this._gateway.on(eI.REQUEST_DC_CONNECTION_PARAMS,(e=>{e(this._p2pChannel.getEstablishParams())})),this._gateway.on(eI.RESET_SIGNAL,(e=>{this._p2pChannel.resetConnection(e),this._handleGatewaySignalEvents()})),this._gateway.on(eI.DATACHANNEL_FAILBACK,(()=>{this._joinGateway()})),this._gateway.on(eI.DATACHANNEL_PRECONNECT,(async(e,t,i,n)=>{var r,s,o,a,c,d;await this._p2pChannel.startP2PConnection({turnServer:null===(r=this._joinInfo)||void 0===r?void 0:r.turnServer},!0);const l=function(e,t){let i;return t&&t.ip&&\"number\"==typeof t.port?(i=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip,port:t.port.toString(),type:\"host\",extension:{}}],KC.debug(\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),t.ip6&&(i.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip6,port:t.port.toString(),type:\"host\",extension:{}}),KC.debug(\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)))):i=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip,port:e.port.toString(),type:\"host\",extension:{}}],i}(e,t);return this._p2pChannel.preConnect({iceUfrag:\"\".concat(null===(s=this._joinInfo)||void 0===s?void 0:s.apResponse.cid,\"_\").concat(null===(o=this._joinInfo)||void 0===o?void 0:o.apResponse.cert),icePwd:\"\".concat(null===(a=this._joinInfo)||void 0===a?void 0:a.apResponse.cid,\"_\").concat(null===(c=this._joinInfo)||void 0===c?void 0:c.apResponse.cert)},{fingerprints:[{hashFunction:\"sha-256\",fingerprint:null!==(d=kC(\"FINGERPRINT\"))&&void 0!==d?d:e.fingerprint}]},l,{send:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},recv:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]}},\"active\",\"o/i14u9pJrxRKAsu\").then(i).catch(n)}))}_handleGatewaySignalEvents(){this._gateway.signal.on(Rv.ON_USER_ONLINE,this._handleUserOnline),this._gateway.signal.on(Rv.ON_USER_OFFLINE,this._handleUserOffline),this._gateway.signal.on(Rv.ON_ADD_AUDIO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"audio\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc))),this._gateway.signal.on(Rv.ON_ADD_VIDEO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"video\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc,e.rtxSsrcId))),this._gateway.signal.on(Rv.ON_REMOTE_DATASTREAM_UPDATE,(e=>{this._handleUpdateDataChannel(e)})),this._gateway.signal.on(Rv.ON_REMOTE_FULL_DATASTREAM_INFO,(e=>{this._handleUpdateDataChannel({added:e.datastreams,deleted:[]},!0)})),this._gateway.signal.on(Rv.ON_REMOVE_STREAM,this._handleRemoveStream),this._gateway.signal.on(Rv.ON_P2P_LOST,this._handleP2PLost),this._gateway.signal.on(Rv.MUTE_AUDIO,(e=>this._handleMuteStream(e.uid,hI.AUDIO,!0))),this._gateway.signal.on(Rv.UNMUTE_AUDIO,(e=>this._handleMuteStream(e.uid,hI.AUDIO,!1))),this._gateway.signal.on(Rv.MUTE_VIDEO,(e=>this._handleMuteStream(e.uid,hI.VIDEO,!0))),this._gateway.signal.on(Rv.UNMUTE_VIDEO,(e=>this._handleMuteStream(e.uid,hI.VIDEO,!1))),this._gateway.signal.on(Rv.RECEIVE_METADATA,(e=>{const t=DT(e.metadata);this.safeEmit(dT.RECEIVE_METADATA,e.uid,t)})),this._gateway.signal.on(Rv.ON_DATA_STREAM,(async e=>{if(!e)return;let t=0;if(e.ordered||e.syncWithAudio){const i=this._p2pChannel.getStats(),n=this.remoteUsers.find((t=>t.uid===e.uid)),r=null==i?void 0:i.audioRecv.find((e=>e.ssrc===(null==n?void 0:n._audioSSRC)));t=null==r?void 0:r.jitterBufferMs}null==t&&(t=0),GM(e,t,{id:this._clientId,onStreamMessage:\"function\"==typeof this.onStreamMessage?this.onStreamMessage.bind(this):void 0,safeEmit:this.safeEmit.bind(this)})})),this._gateway.signal.on(Rv.ON_CRYPT_ERROR,(()=>{NT((()=>{KC.warning(\"[\".concat(this._clientId,\"] on crypt error\")),this.safeEmit(dT.CRYPT_ERROR)}),this._sessionId)})),this._gateway.signal.on(Rv.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire),this._gateway.signal.on(Rv.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{KC.warning(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeDidExpire, please get new token and join again\")),this._gateway.leave(!0,cT.TOKEN_EXPIRE),this.safeEmit(dT.ON_TOKEN_PRIVILEGE_DID_EXPIRE),this._reset()})),this._gateway.signal.on(Rv.ON_STREAM_FALLBACK_UPDATE,(e=>{KC.debug(\"[\".concat(this._clientId,\"] stream fallback peerId: \").concat(e.stream_id,\", attr: \").concat(e.stream_type)),this.safeEmit(dT.STREAM_FALLBACK,e.stream_id,1===e.stream_type?\"fallback\":\"recover\")})),this._gateway.signal.on(Rv.ON_PUBLISH_STREAM,(e=>{this.uid===this._uid&&(this._p2pChannel.reportPublishEvent(!0,null,void 0,!1,JSON.stringify({proxy:e.proxy})),KC.info(\"[\".concat(this._clientId,\"] on publish stream, \").concat(JSON.stringify(e))))})),this._gateway.signal.on(Rv.ENABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!0)})),this._gateway.signal.on(Rv.DISABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!1)})),this._gateway.signal.on(gv.REQUEST_TIMEOUT,((e,t)=>{if(this._joinInfo)switch(e){case Tv.PUBLISH:{if(!t)return;const e=t.ortc;if(e){var i,n;const r=e.some((e=>{let{stream_type:t}=e;return t===$v.Audio})),s=e.some((e=>{let{stream_type:t}=e;return t!==$v.Audio})),o=e.some((e=>{let{stream_type:t}=e;return t===$v.Screen||t===$v.ScreenLow}));\"offer\"===t.state&&rv.publish(this._joinInfo.sid,{eventElapse:cD.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:!1,ec:xg.TIMEOUT,audio:r,video:s,p2pid:t.p2p_id,publishRequestid:this.store.pubId,screenshare:o,audioName:r?null===(i=e.find((e=>{let{stream_type:t}=e;return t===$v.Audio})))||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId.toString():void 0,videoName:s?null===(n=e.find((e=>{let{stream_type:t}=e;return t!==$v.Audio})))||void 0===n||null===(n=n.ssrcs[0])||void 0===n?void 0:n.ssrcId.toString():void 0})}break}case Tv.SUBSCRIBE:t&&rv.subscribe(this._joinInfo.sid,{succ:!1,ec:xg.TIMEOUT,audio:t.stream_type===hI.AUDIO,video:t.stream_type===hI.VIDEO,peerid:t.stream_id,subscribeRequestid:t.ssrcId,p2pid:this.store.p2pId,eventElapse:cD.measureFromSubscribeStart(this.store.clientId,t.ssrcId)})}})),this._gateway.signal.on(Rv.ON_P2P_OK,(e=>{this.uid,this._uid})),this._gateway.signal.on(Rv.ON_PUBLISHED_USER_LIST,(e=>{if(null==e||!e.users)return;kC(\"BLOCK_LOCAL_CLIENT\")&&(e.users=e.users.filter((e=>!dv(e.string_id||e.stream_id,this.channelName))));const t=[],i=[];for(const n of e.users){let e=this._users.find((e=>e._uintid===n.stream_id));e?e._trust_in_room_=!0:(e=new NP(n.string_id||n.stream_id,n.stream_id),this._users.push(e),0===this.getListeners(dT.PUBLISHED_USER_LIST).length&&(KC.debug(\"[\".concat(this._clientId,\"] user online\"),n.stream_id),this.safeEmit(dT.USER_JOINED,e)));const r=iI.Audio&n.stream_type,s=(iI.Video|iI.LwoVideo)&n.stream_type,o=0!=(65280&n.stream_type),a=r&&e.hasAudio,c=s&&e.hasVideo;s&&(e._trust_video_stream_added_state_=!0,e._video_added_=!0,e._videoSSRC=n.video_ssrc,e._rtxSsrcId=n.video_rtx),r&&(e._trust_audio_stream_added_state_=!0,e._audio_added_=!0,e._audioSSRC=n.audio_ssrc),r&&!a&&0===this.getListeners(dT.PUBLISHED_USER_LIST).length&&(KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published audio\")),this.safeEmit(dT.USER_PUBLISHED,e,\"audio\")),s&&!c&&0===this.getListeners(dT.PUBLISHED_USER_LIST).length&&(KC.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published video\")),this.safeEmit(dT.USER_PUBLISHED,e,\"video\")),(r&&!a||s&&!c||o)&&t.push(e),s&&this._p2pChannel.hasPendingRemoteMedia(e,\"video\")&&i.push({user:e,mediaType:\"video\"}),r&&this._p2pChannel.hasPendingRemoteMedia(e,\"audio\")&&i.push({user:e,mediaType:\"audio\"})}i.length>0&&(KC.debug(\"[\".concat(this._clientId,\"] RE massSubscribe after reconnect \").concat(i.map((e=>\"user: \".concat(e.user.uid,\", mediaType: \").concat(e.mediaType))).join(\"; \"),\" \")),this.massSubscribe(i).catch((e=>{KC.error(\"[\".concat(this._clientId,\"] mass resubscribe error\"),e.toString())}))),this.getListeners(dT.PUBLISHED_USER_LIST).length>0?kC(\"ENABLE_DATASTREAM_2\")?this._pendingPublishedUsers=t:(KC.info(\"[\".concat(this._clientId,\"] client emit user-list event, users: \").concat(t.map((e=>e.uid)).join(\", \"))),this.safeEmit(dT.PUBLISHED_USER_LIST,t)):KC.info(\"[\".concat(this._clientId,\"] client not emit user-list event case there is no user-list listener, users: \").concat(t.map((e=>e.uid)).join(\", \")))})),this._gateway.signal.on(Rv.ON_RTP_CAPABILITY_CHANGE,(e=>{const{video_codec:t}=e;this._p2pChannel instanceof _k&&this._p2pChannel.updateRemoteRTPCapabilities(t.map((e=>e.toLowerCase())).filter((e=>{var t;return Pr(t=Object.keys(UC)).call(t,e)})))}))}_handleP2PEvents(){this._gateway.signal.on(Rv.ON_USER_OFFLINE,(()=>{this._p2pChannel.disconnectForReconnect()})),this._gateway.signal.on(wI.PUBLISH,(async(e,t)=>{e.forEach((e=>e.kind===hI.VIDEO?(this._handleP2PAddAudioOrVideoStream(\"video\",t),e.isMuted?this._handleMuteStream(t,hI.VIDEO,!0):this._handleMuteStream(t,hI.VIDEO,!1)):(this._handleP2PAddAudioOrVideoStream(\"audio\",t),e.isMuted?this._handleMuteStream(t,hI.AUDIO,!0):this._handleMuteStream(t,hI.AUDIO,!1))))})),this._gateway.signal.on(gv.P2P_START,(async(e,t)=>{if(this._p2pChannel instanceof PM){var i;t(await this._p2pChannel.startP2P({turnServer:null===(i=this._joinInfo)||void 0===i?void 0:i.turnServer},e))}})),this._gateway.signal.on(gv.P2P_CONNECTION,(async e=>{this._p2pChannel instanceof PM&&await this._p2pChannel.p2pConnect(e)})),this._gateway.signal.on(gv.P2P_REMOTE_CANDIDATE_UPDATE,(e=>{this._p2pChannel instanceof PM&&this._p2pChannel.addRemoteCandidate(JSON.parse(e))})),this._gateway.signal.on(wI.SUBSCRIBE,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{trackType:n}=JSON.parse(e);try{await this._p2pChannel.dopublish(n),t()}catch(e){i(e)}}})),this._gateway.signal.on(wI.UNSUBSCRIBE,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{mediaType:n}=JSON.parse(e);try{await this._p2pChannel.doUnpublish(n),t()}catch(e){i(e)}}})),this._gateway.signal.on(wI.EXCHANGE_SDP,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{type:n,sdp:r}=JSON.parse(e);try{t(await this._p2pChannel.setDescription(n,r))}catch(e){i(e)}}})),this._gateway.signal.on(wI.UNPUBLISH,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{unpubMsg:n,uid:r}=e;if(1===n.length){const s=n[0].stream_type===$v.Audio?hI.AUDIO:hI.VIDEO;this._handleMuteStream(r,s,!0);const{sdp:o}=e;if(this._p2pChannel instanceof PM&&o){const e=this._users.find((e=>e.uid===r));if(!e)return KC.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(r)),void t();this._p2pChannel.unsubscribe(e,o,s).then((e=>{e&&t(e)})).catch(i)}else t()}else this._handleRemoveStream(e,t,i)}})),this._gateway.signal.on(wI.CONTROL,(async(e,t,i)=>{const{action:n,sdp:r,isMuteAll:s,uid:o}=e;switch(n){case OI.MUTE_LOCAL_VIDEO:this._handleMuteStream(o,hI.VIDEO,!0,r,t,i);break;case OI.MUTE_LOCAL_AUDIO:t(),this._handleMuteStream(o,hI.AUDIO,!0);break;case OI.UNMUTE_LOCAL_VIDEO:t(),this._handleP2PAddAudioOrVideoStream(\"video\",o),this._handleMuteStream(o,hI.VIDEO,!1);break;case OI.UNMUTE_LOCAL_AUDIO:t(),this._handleP2PAddAudioOrVideoStream(\"audio\",o),this._handleMuteStream(o,hI.AUDIO,!1)}s&&this._handleRemoveStream(e,t,i)})),this._gateway.signal.on(wI.DO_SUBSCRIBE,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{kind:n,sdp:r,ssrcId:s,uid:o}=e,a=this._users.find((e=>e.uid===o));if(!a)return KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\")),void t();try{t(await this._p2pChannel.subscribe(a,n,r,s))}catch(e){i(e)}}})),this._gateway.signal.on(wI.DO_UNSUBSCRIBE,(async(e,t,i)=>{if(this._p2pChannel instanceof PM){const{uid:n,kind:r,sdp:s}=e,o=this._users.find((e=>e.uid===n));if(!o)return KC.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\")),void t();try{t(await this._p2pChannel.unsubscribe(o,s,r))}catch(e){i(e)}}})),this._gateway.signal.on(wI.RESTART_ICE,(async(e,t,i)=>{if(this._p2pChannel instanceof PM)try{t(await this._p2pChannel.setDescription(\"remote\",e))}catch(e){i(e)}})),this._p2pChannel.on(mI.RequestP2PRestartICE,(async(e,t,i)=>{try{t(await this._gateway.sendExtensionMessage(wI.RESTART_ICE,e))}catch(e){i(e)}})),this._p2pChannel.on(mI.LocalCandidate,(e=>{this._gateway.sendExtensionMessage(wI.CANDIDATE,JSON.stringify(e))})),this._p2pChannel.on(mI.RequestP2PMuteLocal,(async(e,t,i)=>{try{t(await this._gateway.sendExtensionMessage(wI.CONTROL,e))}catch(e){i(e)}})),this._p2pChannel.on(mI.RequestP2PPublish,(async(e,t,i)=>{try{t(await this._gateway.sendExtensionMessage(wI.DO_SUBSCRIBE,e))}catch(e){i(e)}})),this._p2pChannel.on(mI.RequestP2PUnPublish,(async(e,t,i)=>{try{t(await this._gateway.sendExtensionMessage(wI.DO_UNSUBSCRIBE,e))}catch(e){i(e)}})),this._p2pChannel.on(mI.RequestP2PUnmuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xg.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(mI.RequestP2PMuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xg.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(mI.StateChange,((e,t)=>{t===EI.Connected&&this._p2pChannel.republish()}))}_handleP2PChannelEvents(){this._p2pChannel.on(mI.RequestMuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xg.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(mI.RequestUnmuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xg.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(mI.RequestRePublish,((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),this._p2pChannel.on(mI.RequestRePublishDataChannel,((e,t,i)=>{tg.all(e.map((async e=>{await this._p2pChannel.publishDataChannel([e]);const t={streamId:e.id,ordered:e.ordered,maxRetransmits:e.maxRetransmits,metadata:e.metadata,channelId:e._originDataChannelId};try{await this._gateway.publishDataChannel(this._uid,t,!0)}catch(e){if(e.code!==xg.DISCONNECT_P2P)throw e}}))).then(t).catch(i)})),this._p2pChannel.on(mI.RequestReSubscribe,(async(e,t,i)=>{try{for(const{user:t,kind:i}of e)i===hI.VIDEO?await this.subscribe(t,\"video\"):await this.subscribe(t,\"audio\");t()}catch(e){i(e)}})),this._p2pChannel.on(mI.RequestUploadStats,((e,t)=>{this._gateway.uploadStats(e,t)})),this._p2pChannel.on(mI.MediaReconnectStart,(e=>{this.safeEmit(dT.MEDIA_RECONNECT_START,e)})),this._p2pChannel.on(mI.MediaReconnectEnd,(e=>{this.safeEmit(dT.MEDIA_RECONNECT_END,e)})),this._p2pChannel.on(mI.NeedSignalRTT,(e=>{e(this._gateway.getSignalRTT())})),this._p2pChannel.on(mI.RequestRestartICE,(async e=>{if(this._p2pChannel instanceof PM)return;const t=await this._p2pChannel.restartICE(e),i=await t.next();if(i.done)return;const n=i.value;let r;try{r=await this._gateway.restartICE({iceParameters:n})}catch(e){return void t.throw(e)}const{iceParameters:s}=function(e){const t=e.iceParameters;return{iceParameters:{iceUfrag:t.iceUfrag,icePwd:t.icePwd}}}(r);await t.next({remoteIceParameters:s})})),this._p2pChannel.on(mI.RequestReconnect,(async()=>{this._gateway.reconnect()})),this._p2pChannel.on(mI.RequestReconnectPC,(async()=>{var e;const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=await this._p2pChannel.startP2PConnection({turnServer:null===(e=this._joinInfo)||void 0===e?void 0:e.turnServer}),{gatewayEstablishParams:r,gatewayAddress:s}=await this._gateway.reconnectPC({iceParameters:t,dtlsParameters:i,rtpCapabilities:n}),{dtlsParameters:o,iceParameters:a,candidates:c,rtpCapabilities:d,setup:l,cname:h}=QP(r,s);await this._p2pChannel.connect(a,o,c,d,l,h),await this._p2pChannel.republish(),await this._p2pChannel.reSubscribe()})),this._p2pChannel.on(mI.RequestUnpublishForReconnectPC,(async(e,t,i)=>{this._joinInfo&&void 0!==this._uid?(await this._gateway.unpublish(e,this._uid),t()):i()})),this._p2pChannel.on(mI.P2PLost,(()=>{this.safeEmit(dT.P2P_LOST,this.store.uid)})),this._p2pChannel.on(mI.UpdateVideoEncoder,(e=>{e._encoderConfig&&this._gateway.setVideoProfile(e._encoderConfig)})),this._p2pChannel.on(mI.ConnectionTypeChange,(e=>{this.safeEmit(dT.IS_USING_CLOUD_PROXY,e)})),this._p2pChannel.on(mI.RequestLowStreamParameter,(e=>{e(this._lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50})})),this._p2pChannel.on(mI.QueryClientConnectionState,(e=>{e(this.connectionState)}))}getKeyMetrics(){return this.store.keyMetrics}async enableContentInspect(e){if(\"CONNECTED\"!==this.connectionState||!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client did not join channel\"));if(this._inspect)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Inspect content service already in connecting/connected state\"));if(!e)throw new xv(xg.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig is necessary\"));if(!e.inspectType||!Array.isArray(e.inspectType))throw new xv(xg.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig.inspectType is necessary and is an instance of Array.\"));{const t=[...new Set(e.inspectType)];t.forEach((e=>{var t;if(!Pr(t=[\"supervise\",\"moderation\"]).call(t,e))throw new xv(xg.INVALID_PARAMS,\"[\".concat(this._clientId,\"] \").concat(e,\" is not a valid inspect type.\"))})),e.inspectType=t}if(e&&e.extraInfo&&e.extraInfo.length>1024)throw new xv(xg.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig.extraInfo length cannot exceed 1024 bytes\"));try{const t=new Kk(e);this._inspect=t,this.handleVideoInspectEvents(this._inspect),await t.init({appId:this._joinInfo.appId,areaCode:\"\",cname:this._joinInfo.cname,sid:this._joinInfo.sid,token:this._joinInfo.token,uid:this._joinInfo.uid,cid:this._joinInfo.cid,vid:this._joinInfo.vid?Number(this._joinInfo.vid):0},JT)}catch(e){throw Array.isArray(e)?e[0]:e}}async disableContentInspect(){if(!this._inspect)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] inspectVideoContent not started\"));try{this._inspect.close(),this._inspect=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}async setImageModeration(e,t){if(Fg(e,\"enabled\"),e){if(!t)throw new xv(xg.INVALID_PARAMS,\"[\".concat(this._clientId,\"] config is necessary\"));if(jg(t.interval,\"interval\",1e3,1/0),\"CONNECTED\"!==this.connectionState||!this._joinInfo)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,'] can not enable image moderation, not joined\"'));try{if(this._moderation)return void this._moderation.updateConfig(t);const e=new IM(t);this._moderation=e,this.handleImageModerationEvents(this._moderation),await e.init({appId:this._joinInfo.appId,areaCode:\"\",cname:this._joinInfo.cname,sid:this._joinInfo.sid,token:this._joinInfo.token,uid:this._joinInfo.uid,cid:this._joinInfo.cid,vid:this._joinInfo.vid?Number(this._joinInfo.vid):0},JT)}catch(e){throw Array.isArray(e)?e[0]:e}}else{if(!this._moderation)throw new xv(xg.INVALID_OPERATION,\"[\".concat(this._clientId,\"] image moderation not started\"));try{this._moderation.close(),this._moderation.removeAllListeners(),this._moderation=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}}handleImageModerationEvents(e){e.on(AI.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(dT.IMAGE_MODERATION_CONNECTION_STATE_CHANGE,t,i),t===yI.CONNECTED){if(\"CONNECTED\"!==this.connectionState)throw this.setImageModeration(!1),new xv(xg.OPERATION_ABORTED,\"Image moderation was cancelled because it left the channel\");e.inspectImage()}})),e.on(AI.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}handleVideoInspectEvents(e){e.on(SI.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(dT.CONTENT_INSPECT_CONNECTION_STATE_CHANGE,t,i),i===gI.CONNECTED){if(\"CONNECTED\"!==this.connectionState)return void this.safeEmit(dT.CONTENT_INSPECT_ERROR,new xv(xg.OPERATION_ABORTED,\"Content inspect was cancelled because it left the channel\"));e.inspectImage()}})),e.on(SI.INSPECT_RESULT,((e,t)=>{var i;if((null==t?void 0:t.code)===xg.INVALID_OPERATION&&\"DISCONNECTED\"===this.connectionState)return KC.debug(\"Stop inspect content because that has left channel\"),null==this||null===(i=this._inspect)||void 0===i||i.close(),void(this._inspect=void 0);this.safeEmit(dT.CONTENT_INSPECT_RESULT,e,t)})),e.on(SI.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}getJoinChannelServiceRecords(){return KC.debug(\"getJoinChannelServiceRecords\"),this.store.joinChannelServiceRecords}async setPublishAudioFilterEnabled(e){Fg(e,\"enabled\"),LC(\"ENABLE_PUBLISH_AUDIO_FILTER\",e),this._joinInfo&&await this._gateway.setPublishAudioFilterEnabled(e)}_handleResetAddStream(e,t){switch(t){case\"audio\":e._audio_added_=!1,e._trust_audio_stream_added_state_=!0;break;case\"video\":e._video_added_=!1,e._trust_video_stream_added_state_=!0}}}Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"leave\",null),Mv([nv({argsMap:(e,t)=>{if(!Array.isArray(t)){if(!(t instanceof iA))return[t];t=[t]}return t.map((e=>e?Object(e).toString():\"null\"))}}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Boolean]),Uv(\"design:returntype\",tg)],qM.prototype,\"publish\",null),Mv([nv({argsMap:(e,t)=>(t||(t=[]),t instanceof sD?[t.getChannelId()]:(Array.isArray(t)||(t=[t]),t.map((e=>e.getTrackId()))))}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"unpublish\",null),Mv([nv({argsMap:(e,t,i,n)=>[t.uid,i,n]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"subscribe\",null),Mv([nv({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return[null==t?void 0:t.uid,i]}))}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],qM.prototype,\"massSubscribe\",null),Mv([nv({argsMap:(e,t,i,n)=>[t.uid,i,n]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[NP,String,Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"unsubscribe\",null),Mv([nv({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return{uid:null==t?void 0:t.uid,mediaType:i}}))}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array]),Uv(\"design:returntype\",tg)],qM.prototype,\"massUnsubscribe\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"setLowStreamParameter\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"enableDualStream\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"disableDualStream\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"setClientRole\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Boolean]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setProxyServer\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Boolean]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setTurnServer\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setLicense\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",void 0)],qM.prototype,\"startProxyServer\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],qM.prototype,\"stopProxyServer\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setLocalAccessPointsV2\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Array,String]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setLocalAccessPoints\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"setRemoteDefaultVideoStreamType\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"setRemoteVideoStreamType\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"setStreamFallbackOption\",null),Mv([nv({argsMap:(e,t)=>[t]}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,String,Uint8Array]),Uv(\"design:returntype\",void 0)],qM.prototype,\"setEncryptionConfig\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],qM.prototype,\"renewToken\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",void 0)],qM.prototype,\"enableAudioVolumeIndicator\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Boolean]),Uv(\"design:returntype\",tg)],qM.prototype,\"startLiveStreaming\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"setLiveTranscoding\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String]),Uv(\"design:returntype\",tg)],qM.prototype,\"stopLiveStreaming\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[String,Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"addInjectStreamUrl\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"removeInjectStreamUrl\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[AP]),Uv(\"design:returntype\",tg)],qM.prototype,\"startChannelMediaRelay\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[AP]),Uv(\"design:returntype\",tg)],qM.prototype,\"updateChannelMediaRelay\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"stopChannelMediaRelay\",null),Mv([nv({argsMap:(e,t)=>(Array.isArray(t)||(t=[t]),[JSON.stringify(t)])}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"sendCustomReportMessage\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object,Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"pickSVCLayer\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Number]),Uv(\"design:returntype\",tg)],qM.prototype,\"setRTM2Flag\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"enableContentInspect\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",tg)],qM.prototype,\"disableContentInspect\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean,Object]),Uv(\"design:returntype\",tg)],qM.prototype,\"setImageModeration\",null),Mv([nv({reportResult:!0}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[]),Uv(\"design:returntype\",Array)],qM.prototype,\"getJoinChannelServiceRecords\",null),Mv([nv(),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[Boolean]),Uv(\"design:returntype\",tg)],qM.prototype,\"setPublishAudioFilterEnabled\",null);class JM{constructor(e,t){nu(this,\"id\",0),nu(this,\"element\",void 0),nu(this,\"peerPair\",void 0),nu(this,\"context\",void 0),nu(this,\"audioPlayerElement\",void 0),nu(this,\"audioTrack\",void 0),JM.count+=1,this.id=JM.count,this.element=e,this.context=t}initPeers(){this.peerPair=[new RTCPeerConnection,new RTCPeerConnection],this.peerPair[1].ontrack=e=>{const t=document.createElement(\"audio\");t.srcObject=new MediaStream([e.track]),t.play(),this.audioPlayerElement=t}}async switchSdp(){if(!this.peerPair)return;const e=async(e,t)=>{const i=\"offer\"===t?await e.createOffer():await e.createAnswer();return await e.setLocalDescription(i),\"complete\"===e.iceGatheringState?e.localDescription:new tg((t=>{e.onicegatheringstatechange=()=>{\"complete\"===e.iceGatheringState&&t(e.localDescription)}}))},t=async(e,t)=>await e.setRemoteDescription(t);try{const i=await e(this.peerPair[0],\"offer\");await t(this.peerPair[1],i);const n=await e(this.peerPair[1],\"answer\");await t(this.peerPair[0],n)}catch(e){throw new xv(xg.LOCAL_AEC_ERROR,e.toString()).print()}}async getTracksFromMediaElement(e){if(this.audioTrack)return this.audioTrack;let t;try{e instanceof HTMLVideoElement&&(e.captureStream?e.captureStream():e.mozCaptureStream()),t=this.context.createMediaStreamDestination();this.context.createMediaElementSource(e).connect(t)}catch(e){throw new xv(xg.LOCAL_AEC_ERROR,e.toString()).print()}if(!t){throw new xv(xg.LOCAL_AEC_ERROR,\"no dest node when local aec\").print()}const i=t.stream.getAudioTracks()[0];return this.audioTrack=i,i}getElement(){return this.element}async startEchoCancellation(){this.context.resume(),this.peerPair&&this.close(),this.initPeers();const e=this.element,t=await this.getTracksFromMediaElement(e);this.peerPair&&this.peerPair[0].addTrack(t),await this.switchSdp()}close(){KC.debug(\"close echo cancellation unit, id is\",this.id),this.audioPlayerElement&&this.audioPlayerElement.pause(),this.peerPair&&this.peerPair.forEach((e=>{e.close()})),this.peerPair=void 0,this.audioPlayerElement=void 0}}nu(JM,\"count\",0);const zM=window.AudioContext||window.webkitAudioContext;class XM{constructor(){nu(this,\"units\",[]),nu(this,\"context\",void 0)}processExternalMediaAEC(e){if(!this._doesEnvironmentNeedAEC())return KC.debug(\"the system does not need to process local aec\"),-1;this.context||(this.context=new zM);let t=this.units.find((t=>t&&t.getElement()===e));return t||(t=new JM(e,this.context),this.units.push(t)),t.startEchoCancellation(),KC.debug(\"start processing local audio echo cancellation, id is\",t.id),t.id}_doesEnvironmentNeedAEC(){return pg().name!==cg.SAFARI}}Mv([nv({report:rv}),Uv(\"design:type\",Function),Uv(\"design:paramtypes\",[HTMLAudioElement]),Uv(\"design:returntype\",Number)],XM.prototype,\"processExternalMediaAEC\",null);const QM=new XM;function ZM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function $M(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ZM(Object(i),!0).forEach((function(t){nu(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ZM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const eU=window||document;function tU(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!eU)return;const i=iU._cspEventHandlerPointer;if(i&&t)return void console.error(i,t);const n=e=>{if(!(e&&e.blockedURI&&(iU.onSecurityPolicyViolation||iU.getListeners(vI.SECURITY_POLICY_VIOLATION).length>0)))return;const t=e.blockedURI;kC(\"CSP_DETECTED_HOSTNAME_LIST\").some((e=>Pr(t).call(t,e)))&&(iU.onSecurityPolicyViolation&&\"function\"==typeof iU.onSecurityPolicyViolation&&iU.onSecurityPolicyViolation(e),iU.getListeners(vI.SECURITY_POLICY_VIOLATION).length>0&&iU.safeEmit(vI.SECURITY_POLICY_VIOLATION,e))};i&&eU.removeEventListener(\"securitypolicyviolation\",i),(t||e&&\"function\"==typeof e||iU.getListeners(vI.SECURITY_POLICY_VIOLATION).length>0)&&eU.addEventListener(\"securitypolicyviolation\",n),iU._cspEventHandlerPointer=n}LC(\"PROCESS_ID\",\"process-\".concat(xT(8,\"\"),\"-\").concat(xT(4,\"\"),\"-\").concat(xT(4,\"\"),\"-\").concat(xT(4,\"\"),\"-\").concat(xT(12,\"\"))),function(){const e=pg();pA.getDisplayMedia=function(e){if(navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)return!0;return!1}(),pA.getStreamFromExtension=e.name===cg.CHROME&&Number(e.version)>34,pA.supportUnifiedPlan=function(){if(!window.RTCRtpTransceiver)return!1;if(!(\"currentDirection\"in RTCRtpTransceiver.prototype))return!1;const e=new RTCPeerConnection;let t=!1;try{e.addTransceiver(\"audio\"),t=!0}catch(e){}return e.close(),t}(),pA.supportMinBitrate=e.name===cg.CHROME||e.name===cg.EDGE,pA.supportSetRtpSenderParameters=function(){const e=pg();if(!window.RTCRtpSender||!window.RTCRtpSender.prototype.setParameters||!window.RTCRtpSender.prototype.getParameters)return!1;return!!kg()||(!(!Sg()&&!mg())||e.name===cg.FIREFOX&&Number(e.version)>=64)}(),e.name===cg.SAFARI&&(Number(e.version)>=14?pA.supportDualStream=!0:pA.supportDualStream=!1),pA.webAudioMediaStreamDest=function(){const e=pg();if(e.name===cg.SAFARI&&Number(e.version)<12)return!1;return!0}(),pA.supportReplaceTrack=function(){if(!window.RTCRtpSender)return!1;if(\"function\"==typeof RTCRtpSender.prototype.replaceTrack)return!0;return!1}(),pA.supportWebGL=\"undefined\"!=typeof WebGLRenderingContext,pA.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack,kg()||(pA.webAudioWithAEC=!0),pA.supportShareAudio=function(){const e=pg();if((e.os===ag.WIN_10||e.os===ag.WIN_81||e.os===ag.WIN_7||e.os===ag.LINUX||e.os===ag.MAC_OS)&&e.name===cg.CHROME&&Number(e.version)>=74)return!0;return!1}(),pA.supportDataChannel=function(){if(vg(76)||function(e){const t=pg();return!(t.name!==cg.FIREFOX||!t.osVersion)&&Number(t.version)>=e}(68)||function(e){const t=pg();return!(t.name!==cg.SAFARI||!t.osVersion)&&Number(t.version)>=e}(14))return!0;return!1}(),pA.supportPCSetConfiguration=function(){const e=window.RTCPeerConnection;return!Rg()&&!!e&&e.prototype.setConfiguration instanceof Function}(),pA.supportWebRTCEncodedTransform=function(){const e=pg();return\"Chrome\"===e.name&&Number(e.version)>=86}(),pA.supportWebRTCInsertableStream=function(){const e=pg();return(e.name===cg.CHROME||e.name===cg.EDGE)&&Number(e.version)>=94&&\"MediaStreamTrackGenerator\"in window&&\"MediaStreamTrackProcessor\"in window}(),AT((()=>{pA.supportDualStreamEncoding=function(){const e=pg();if(kC(\"DISABLE_WEBAUDIO\"))return!0;return\"Safari\"===e.name&&Number(e.version)>=14||!!(\"Chrome\"===e.name&&/Windows/i.test(e.os||\"\")&&Number(e.version)>=100&&kC(\"CHROME_DUAL_STREAM_USE_ENCODING\"))}(),KC.info(\"browser compatibility\",JSON.stringify(pA),JSON.stringify(e))}))}(),function(){let e;try{e=window.localStorage.getItem(\"websdk_ng_global_parameter\")}catch(e){return void KC.error(\"Error loading sdk config\",e.message)}if(e)try{const t=JSON.parse(window.atob(e)),i=Date.now();KC.debug(\"Loading global parameters from cache\",t),Object.keys(t).forEach((e=>{if(Object.prototype.hasOwnProperty.call(PC,e)){const{value:n,expires:r}=t[e];if(r&&r<=i)return;MC[e]=n,PC[e]=n}}))}catch(t){KC.error(\"Error loading mutableParamsCache: \".concat(e),t.message)}}(),Array.isArray(MC.AREAS)&&MC.AREAS.length>0&&qD(MC.AREAS,!0);const iU=function(e){const t=new iT,i=e,n={getListeners:t.getListeners.bind(t),on:(e,i)=>(function(e,t){e===vI.SECURITY_POLICY_VIOLATION&&tU(t,!0)}(e,i),t.on.bind(t)(e,i)),addListener:t.addListener.bind(t),once:t.once.bind(t),off:t.off.bind(t),removeAllListeners:t.removeAllListeners.bind(t),emit:t.emit.bind(t),safeEmit:t.safeEmit.bind(t)};return $M($M({},i),n)}({__TRACK_LIST__:Dy,VERSION:OC,BUILD:DC,ESM_BUNDLER:!1,ESM:!1,UMD:!0,DEV:!1,setParameter:(e,t,i)=>{KC.debug(\"setParameter key:\".concat(e,\", value:\").concat(JSON.stringify(t))),LC(e,t,i)},getParameter:kC,getSupportedCodec:async function(){let e={audio:[],video:[]};try{let t=new RTCPeerConnection;t.addTransceiver(\"video\",{direction:\"recvonly\"}),t.addTransceiver(\"audio\",{direction:\"recvonly\"});const i=(await t.createOffer()).sdp;if(!i)return e;t.close(),t=null,e=function(e){const t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push(\"VP8\"),e.match(/ VP9/i)&&t.video.push(\"VP9\"),e.match(/ AV1/i)&&t.video.push(\"AV1\"),e.match(/ H264/i)&&t.video.push(\"H264\"),e.match(/ H265/i)&&t.video.push(\"H265\"),e.match(/ opus/i)&&t.audio.push(\"OPUS\"),e.match(/ PCMU/i)&&t.audio.push(\"PCMU\"),e.match(/ PCMA/i)&&t.audio.push(\"PCMA\"),e.match(/ G722/i)&&t.audio.push(\"G722\"),t}(i)}catch(e){throw new xv(xg.CREATE_OFFER_FAILED,e.toString&&e.toString()).print()}return e},checkSystemRequirements:function(){const e=rv.reportApiInvoke(null,{name:sT.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:oT.TRACER});let t=!1;try{const e=window.RTCPeerConnection,i=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,n=window.WebSocket;t=!!(e&&i&&n)}catch(e){return KC.error(\"check system requirement failed: \",e),!1}let i=!1;const n=pg();n.name===cg.CHROME&&Number(n.version)>=58&&(!gg()||fg())&&(i=!0),n.name===cg.FIREFOX&&Number(n.version)>=56&&(i=!0),n.name===cg.OPERA&&Number(n.version)>=45&&(i=!0),n.name===cg.SAFARI&&Number(n.version)>=11&&(i=!0),(Pg()||pg().name===cg.QQ)&&(i=!0),KC.debug(\"checkSystemRequirements, api:\",t,\"browser\",i);const r=t&&i;return e.onSuccess(r),r},getDevices:function(e){return OA.enumerateDevices(!0,!0,e)},getMicrophones:function(e){return OA.getRecordingDevices(e)},getCameras:function(e){return OA.getCamerasDevices(e)},getElectronScreenSources:SA,getPlaybackDevices:function(e){return OA.getSpeakers(e)},createClient:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{codec:\"vp8\",audioCodec:\"opus\",mode:\"rtc\"};const t=rv.reportApiInvoke(null,{name:sT.CREATE_CLIENT,options:[e],tag:oT.TRACER});try{!function(e){Bg(e.codec,\"config.codec\",[\"vp8\",\"vp9\",\"av1\",\"h264\",\"h265\"]),Bg(e.mode,\"config.mode\",[\"rtc\",\"live\"]),void 0!==e.audioCodec&&Bg(e.audioCodec,\"config.audioCodec\",[\"opus\",\"pcmu\",\"pcma\",\"g722\"]),void 0!==e.proxyServer&&Wg(e.proxyServer,\"config.proxyServer\",1,1e4),void 0!==e.turnServer&&ET(e.turnServer),void 0!==e.httpRetryConfig&&pT(e.httpRetryConfig),void 0!==e.websocketRetryConfig&&pT(e.websocketRetryConfig)}(e)}catch(e){throw t.onError(e),e}return HM()||(\"vp9\"===e.codec&&(e.codec=\"vp8\",KC.debug(\"browser not support vp9, force use vp8\")),LC(\"UNSUPPORTED_VIDEO_CODEC\",[\"vp9\"])),void 0===e.audioCodec&&(e.audioCodec=\"opus\"),t.onSuccess(),new qM(YM(YM({forceWaitGatewayResponse:!0},e),{},{role:\"rtc\"===e.mode?\"host\":e.role||\"audience\"}))},createCameraVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_CAM_VIDEO_TRACK,options:[vb({},e)]}),i=ib(e),n=xT(8,\"track-cam-\");let r=null;const s=\"720p_auto\"===e.encoderConfig;KC.info(\"start create camera video track with config\",JSON.stringify(e),\"trackId\",n);try{r=(await yA({video:i},n)).getVideoTracks()[0]||null}catch(e){throw t.onError(e),e}if(!r){const e=new Vg(xg.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw(KC)}e.optimizationMode&&Ib(n,r,e,Ay(e.encoderConfig));const o=new Rb(r,e,i,e.scalabiltyMode?wy(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,n);return s&&o.startMonitorStats(),t.onSuccess(o.getTrackId()),KC.info(\"create camera video success, trackId:\",n),o},createCustomVideoTrack:function(e){const t=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_CUSTOM_VIDEO_TRACK,options:[e]}),i=new Sb(e.mediaStreamTrack,{width:e.width,height:e.height,frameRate:e.frameRate,bitrateMax:e.bitrateMax,bitrateMin:e.bitrateMin},e.scalabiltyMode?wy(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,xT(8,\"track-cus-\"),[ky.CUSTOM_TRACK]);return t.onSuccess(i.getTrackId()),KC.info(\"create custom video track success with config\",e,\"trackId\",i.getTrackId()),i},createScreenVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"disable\";const i=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_SCREEN_VIDEO_TRACK,options:[vb({},e),t]}),n=\"720p_auto\"===e.encoderConfig;e.encoderConfig?\"string\"==typeof e.encoderConfig||e.encoderConfig.width&&e.encoderConfig.height||(e.encoderConfig.width={max:1920},e.encoderConfig.height={max:1080}):e.encoderConfig=\"1080p_2\";const r=function(e){const t={};e.screenSourceType&&(t.mediaSource=e.screenSourceType),e.extensionId&&Tg()&&(t.extensionId=e.extensionId);const{displaySurface:i,selfBrowserSurface:n,surfaceSwitching:r,systemAudio:s}=e;(vg(107)||Ig(107)||yg(93))&&(i&&(Bg(i,\"displaySurface\",[\"browser\",\"window\",\"monitor\"]),t.displaySurface=i),n?(Bg(n,\"selfBrowserSurface\",[\"exclude\",\"include\"]),t.selfBrowserSurface=n):t.selfBrowserSurface=\"include\",r&&(Bg(r,\"surfaceSwitching\",[\"exclude\",\"include\"]),t.surfaceSwitching=r)),(vg(105)||Ig(105)||yg(91))&&s&&(Bg(s,\"systemAudio\",[\"exclude\",\"include\"]),t.systemAudio=s),e.electronScreenSourceId&&(t.sourceId=e.electronScreenSourceId);const o=e.encoderConfig?by(e.encoderConfig):null;return t.mandatory={chromeMediaSource:\"desktop\",maxWidth:o?o.width:void 0,maxHeight:o?o.height:void 0},o&&(o.frameRate&&(\"number\"==typeof o.frameRate?(t.mandatory.maxFrameRate=o.frameRate,t.mandatory.minFrameRate=o.frameRate):(t.mandatory.maxFrameRate=o.frameRate.max||o.frameRate.ideal||o.frameRate.exact||void 0,t.mandatory.minFrameRate=o.frameRate.min||o.frameRate.ideal||o.frameRate.exact||void 0),t.frameRate=o.frameRate),o.width&&(t.width=o.width),o.height&&(t.height=o.height)),t}(e),s=xT(8,\"track-scr-v-\");let o=null,a=null;const c=_A();if(!c.supportShareAudio&&\"enable\"===t){const e=new Vg(xg.NOT_SUPPORTED,\"your browser or platform is not support share-screen with audio\");return i.onError(e),e.throw(KC)}KC.info(\"start create screen video track with config\",e,\"withAudio\",t,\"trackId\",s);try{const e=await yA({screen:r,screenAudio:\"auto\"===t?c.supportShareAudio:\"enable\"===t},s);o=e.getVideoTracks()[0]||null,a=e.getAudioTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new Vg(xg.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw(KC)}if(!a&&\"enable\"===t){o&&o.stop();const e=new Vg(xg.SHARE_AUDIO_NOT_ALLOWED);return i.onError(e),e.throw(KC)}if(e.optimizationMode||(e.optimizationMode=\"detail\"),e.optimizationMode){Ib(s,o,e,e.encoderConfig&&by(e.encoderConfig)||void 0),e.encoderConfig&&\"string\"!=typeof e.encoderConfig&&(e.encoderConfig.bitrateMin=e.encoderConfig.bitrateMax)}const d=new Sb(o,e.encoderConfig?by(e.encoderConfig):{},e.scalabiltyMode?wy(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,s,[ky.SCREEN_TRACK]);if(n&&d.startMonitorStats(),!a)return i.onSuccess(d.getTrackId()),KC.info(\"create screen video track success\",\"video:\",d.getTrackId()),d;const l=new ZA(a,void 0,xT(8,\"track-scr-a-\"),!1,!0);return i.onSuccess([d.getTrackId(),l.getTrackId()]),KC.info(\"create screen video track success\",\"video:\",d.getTrackId(),\"audio:\",l.getTrackId()),[d,l]},createMicrophoneAndCameraTracks:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_MIC_AND_CAM_TRACKS,options:[e,t]}),n=\"720p_auto\"===t.encoderConfig,r=ib(t),s=nb(e),o=xT(8,\"track-mic-\"),a=xT(8,\"track-cam-\");let c=null,d=null;KC.info(\"start create camera video track(\".concat(a,\") and microphone audio track(\").concat(o,\") with config, audio: \").concat(JSON.stringify(e),\", video: \").concat(JSON.stringify(t)));try{const e=await yA({audio:s,video:r},\"\".concat(o,\"-\").concat(a));c=e.getAudioTracks()[0],d=e.getVideoTracks()[0]}catch(e){throw i.onError(e),e}if(!c||!d){const e=new Vg(xg.UNEXPECTED_ERROR,\"can not find tracks in media stream\");return i.onError(e),e.throw(KC)}t.optimizationMode&&Ib(a,d,t,Ay(t.encoderConfig));const l=new $A(c,e,s,o),h=new Rb(d,t,r,t.scalabiltyMode?wy(t.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},t.optimizationMode,a);return n&&h.startMonitorStats(),i.onSuccess([l.getTrackId(),h.getTrackId()]),KC.info(\"create camera video track(\".concat(a,\") and microphone audio track(\").concat(o,\") success\")),[l,h]},createMicrophoneAudioTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_MIC_AUDIO_TRACK,options:[e]}),i=nb(e),n=xT(8,\"track-mic-\");let r=null;KC.info(\"start create microphone audio track with config\",JSON.stringify(e),\"trackId\",n);try{r=(await yA({audio:i},n)).getAudioTracks()[0]||null}catch(e){throw t.onError(e),e}if(!r){const e=new Vg(xg.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw(KC)}const s=new $A(r,e,i,n);return t.onSuccess(s.getTrackId()),KC.info(\"create microphone audio track success, trackId:\",n),s},createCustomAudioTrack:function(e){const t=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_CUSTOM_AUDIO_TRACK,options:[e]}),i=new ZA(e.mediaStreamTrack,e.encoderConfig?Ny(e.encoderConfig):{},xT(8,\"track-cus-\"),!1,!0);return KC.info(\"create custom audio track success with config\",e,\"trackId\",i.getTrackId()),t.onSuccess(i.getTrackId()),i},createBufferSourceAudioTrack:async function(e){var t;const{cacheOnlineFile:i,encoderConfig:n}=e;let{source:r}=e;const s={source:r instanceof AudioBuffer?\"AudioBuffer\":r instanceof File?null!==(t=File.name)&&void 0!==t?t:\"File\":r,cacheOnlineFile:i,encoderConfig:n},o=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CREATE_BUFFER_AUDIO_TRACK,options:[s]});if(kC(\"DISABLE_WEBAUDIO\"))throw new Vg(xg.NOT_SUPPORTED,\"can not create BufferSourceAudioTrack when WebAudio disabled\");const a=xT(8,\"track-buf-\");KC.info(\"start create buffer source audio track with config\",JSON.stringify(s),\"trackId\",a);const c=r;if(!(r instanceof AudioBuffer))try{r=await ob(r,i)}catch(e){return o.onError(e),e.throw(KC)}const d=new rb(r),l=new eb(c,d,n?Ny(n):{},a);return KC.info(\"create buffer source audio track success, trackId:\",a),o.onSuccess(l.getTrackId()),l},setAppType:function(e){if(KC.debug(\"setAppType: \".concat(e)),!(Number.isInteger(e)&&e>=0))throw KC.debug(\"Invalid appType\"),new xv(xg.INVALID_PARAMS,\"invalid app type\",e);LC(\"APP_TYPE\",Math.floor(e))},setLogLevel:function(e){KC.setLogLevel(e)},enableLogUpload:function(){kC(\"USE_NEW_LOG\")?LC(\"UPLOAD_LOG\",!0):KC.enableLogUpload()},disableLogUpload:function(){kC(\"USE_NEW_LOG\")?LC(\"UPLOAD_LOG\",!1):KC.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new AP},checkAudioTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof ZA||e instanceof Ob)){const e=new xv(xg.INVALID_TRACK,\"the parameter is not a audio track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof ZA?e.getTrackLabel():\"remote_track\",r=e.getVolumeLevel();let s=r,o=r;const a=Date.now();return new tg((r=>{const c=setInterval((()=>{const d=e.getVolumeLevel();s=d>s?d:s,o=d<o?d:o;const l=s-o>1e-4,h=Date.now()-a;if(l||h>t){clearInterval(c);const t=l,o={duration:h,deviceLabel:n,maxVolumeLevel:s,result:t};KC.info(\"[track-\".concat(e.getTrackId(),\"] check audio track active completed. \").concat(JSON.stringify(o))),i.onSuccess(o),r(t)}}),200)}))},checkVideoTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=rv.reportApiInvoke(null,{tag:oT.TRACER,name:sT.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof Sb||e instanceof wb)){const e=new xv(xg.INVALID_TRACK,\"the parameter is not a video track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof Sb?e.getTrackLabel():\"remote_track\",r=e.getMediaStreamTrack(!0),s=document.createElement(\"video\");s.style.width=\"1px\",s.style.height=\"1px\",s.setAttribute(\"muted\",\"\"),s.muted=!0,s.setAttribute(\"playsinline\",\"\"),s.controls=!1,(Sg()||mg())&&(s.style.opacity=\"0.01\",s.style.position=\"fixed\",s.style.left=\"0\",s.style.top=\"0\",document.body.appendChild(s)),s.srcObject=new MediaStream([r]),s.play();const o=document.createElement(\"canvas\");o.width=160,o.height=120;let a=0,c=0;try{const e=Date.now();a=await function(e,t,i,n){let r,s=0,o=null;return new tg(((a,c)=>{function d(){s>n&&r&&(r(),a(s));const t=i.getContext(\"2d\");if(!t){const e=new xv(xg.UNEXPECTED_ERROR,\"can not get canvas 2d context.\");return KC.error(e.toString()),void c(e)}t.drawImage(e,0,0,160,120);const d=t.getImageData(0,0,i.width,i.height),l=Math.floor(d.data.length/3);if(o){for(let e=0;e<l;e+=3)if(d.data[e]!==o[e])return s+=1,void(o=d.data);o=d.data}else o=d.data}setTimeout((()=>{r&&(r(),a(s))}),t),r=uA((()=>{d()}),30)}))}(s,t,o,4),c=Date.now()-e}catch(e){throw i.onError(e),e}WM===cg.SAFARI&&(s.pause(),s.remove()),s.srcObject=null;const d=a>4,l={duration:c,changedPicNum:a,deviceLabel:n,result:d};return KC.info(\"[track-\".concat(e.getTrackId(),\"] check video track active completed. \").concat(JSON.stringify(l))),i.onSuccess(l),d},setArea:qD,audioElementPlayCenter:xA,processExternalMediaAEC:function(e){QM.processExternalMediaAEC(e)},registerExtensions:function(e){e.forEach((e=>{const t=e;t.__registered__=!0,t.logger.hookLog=KC.extLog,t.reporter.hookApiInvoke=rv.extApiInvoke,t.parameters&&Object.keys(t.parameters).forEach((e=>{t.parameters[e]=kC(e)}))}))},ChannelMediaRelayError:Zv,ChannelMediaRelayEvent:Xv,ChannelMediaRelayState:Qv,RemoteStreamFallbackType:xy,RemoteStreamType:Uy,ConnectionDisconnectedReason:cT,AudienceLatencyLevelType:aT,AREAS:rI});return Object.defineProperties(iU,{onAudioAutoplayFailed:{get:()=>DA.onAudioAutoplayFailed,set:e=>{DA.onAudioAutoplayFailed=e}},onAutoplayFailed:{get:()=>DA.onAutoplayFailed,set:e=>{DA.onAutoplayFailed=e}},_onSecurityPolicyViolation:{value:void 0,writable:!0},_cspEventHandlerPointer:{value:void 0,writable:!0},onSecurityPolicyViolation:{get:()=>iU._onSecurityPolicyViolation,set(e){iU._onSecurityPolicyViolation=e,tU(e)}},__CLIENT_LIST__:{get:()=>kC(\"SHOW_GLOBAL_CLIENT_LIST\")?cv:[]}}),OA.on(Qy.CAMERA_DEVICE_CHANGED,(e=>{KC.info(\"camera device changed\",JSON.stringify(e)),iU.onCameraChanged&&iU.onCameraChanged(e),iU.safeEmit(vI.CAMERA_CHANGED,e)})),OA.on(Qy.RECORDING_DEVICE_CHANGED,(e=>{KC.info(\"microphone device changed\",JSON.stringify(e)),iU.onMicrophoneChanged&&iU.onMicrophoneChanged(e),iU.safeEmit(vI.MICROPHONE_CHANGED,e)})),OA.on(Qy.PLAYOUT_DEVICE_CHANGED,(e=>{KC.debug(\"playout device changed\",JSON.stringify(e)),iU.onPlaybackDeviceChanged&&iU.onPlaybackDeviceChanged(e),iU.safeEmit(vI.PLAYBACK_DEVICE_CHANGED,e)})),xA.onAutoplayFailed=()=>{KC.info(\"detect audio element autoplay failed\"),DA.onAudioAutoplayFailed&&DA.onAudioAutoplayFailed()},oA.on(\"autoplay-failed\",(()=>{KC.info(\"detect webaudio autoplay failed\"),DA.onAudioAutoplayFailed&&DA.onAudioAutoplayFailed(),iU.safeEmit(vI.AUTOPLAY_FAILED)})),RT.on(uT.NETWORK_STATE_CHANGE,((e,t)=>{KC.info(\"[network-indicator] network state changed, \".concat(t,\" => \").concat(e))})),window&&(window.__ARTC__=iU),iU}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js\n"));

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzM3NzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/ZWJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "./pages/videoMeet/conference.js":
/*!***************************************!*\
  !*** ./pages/videoMeet/conference.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Ethereum_web3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Ethereum/web3 */ \"./Ethereum/web3.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! agora-rtc-sdk-ng */ \"./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js\");\n/* harmony import */ var agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_4__);\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst DynamicComponentWithNoSSR = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(_c = ()=>Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! agora-rtc-sdk-ng */ \"./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js\", 23)), {\n    loadableGenerated: {\n        modules: [\n            \"videoMeet\\\\conference.js -> \" + \"agora-rtc-sdk-ng\"\n        ]\n    },\n    ssr: false\n});\n_c1 = DynamicComponentWithNoSSR;\nconst MeetPage = ()=>{\n    _s();\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const APP_ID = \"b81053e90307440381920a540ba00586\";\n    const TOKEN = \"007eJxTYKjMOz5pQkjM7QNNZQ/OecvyXHzcKLV6yaY2LWFGud9mazgUGJIsDA1MjVMtDYwNzE1MDIwtDC2NDBJNTQySEg0MTC3Mru5PTG0IZGTwmv6XkZEBAkF8FobcxMw8BgYAGsIecQ==\";\n    const CHANNEL = \"main\";\n    const CLIENT = agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_4___default().createClient({\n        mode: \"rtc\",\n        codec: \"vp8\"\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initialize = async ()=>{\n            if ( true && window.ethereum) {\n                try {\n                    await window.ethereum.request({\n                        method: \"eth_requestAccounts\"\n                    });\n                    const accounts = await _Ethereum_web3__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eth.getAccounts();\n                    setAccount(accounts[0]);\n                } catch (err) {\n                    if (err.code === 4001) {\n                        console.log(\"User rejected the request.\");\n                    } else {\n                        console.log(err);\n                    }\n                }\n            } else {\n                console.log(\"Install Metamask\");\n            }\n            console.log(\"Current account:\", account);\n        };\n        initialize();\n        console.log(\"Current account:\", account);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n        children: \"This is your meet!\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\91930\\\\Meety\\\\pages\\\\videoMeet\\\\conference.js\",\n        lineNumber: 43,\n        columnNumber: 9\n    }, undefined);\n};\n_s(MeetPage, \"uvVbIIk91/2HpqdLbrA7lBpBOUg=\");\n_c2 = MeetPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MeetPage);\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"DynamicComponentWithNoSSR$dynamic\");\n$RefreshReg$(_c1, \"DynamicComponentWithNoSSR\");\n$RefreshReg$(_c2, \"MeetPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy92aWRlb01lZXQvY29uZmVyZW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDWjtBQUNKO0FBQ0s7QUFFeEMsTUFBTU0sNEJBQTRCRixtREFBT0EsTUFBQyxJQUFNLDhLQUFPOzs7Ozs7SUFDbkRHLEtBQUs7OztBQUlULE1BQU1DLFdBQVc7O0lBQ2IsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdSLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU1TLFNBQVM7SUFDZixNQUFNQyxRQUFRO0lBQ2QsTUFBTUMsVUFBVTtJQUVoQixNQUFNQyxTQUFTVCxvRUFBcUIsQ0FBQztRQUFFVyxNQUFNO1FBQU9DLE9BQU87SUFBTTtJQUVqRWhCLGdEQUFTQSxDQUFDO1FBQ04sTUFBTWlCLGFBQWE7WUFDZixJQUFJLEtBQWtCLElBQWVDLE9BQU9DLFFBQVEsRUFBRTtnQkFDbEQsSUFBSTtvQkFDQSxNQUFNRCxPQUFPQyxRQUFRLENBQUNDLE9BQU8sQ0FBQzt3QkFBRUMsUUFBUTtvQkFBc0I7b0JBQzlELE1BQU1DLFdBQVcsTUFBTXBCLDBEQUFRLENBQUNzQixXQUFXO29CQUMzQ2YsV0FBV2EsUUFBUSxDQUFDLEVBQUU7Z0JBQzFCLEVBQUUsT0FBT0csS0FBSztvQkFDVixJQUFJQSxJQUFJQyxJQUFJLEtBQUssTUFBTTt3QkFDbkJDLFFBQVFDLEdBQUcsQ0FBQztvQkFDaEIsT0FBTzt3QkFDSEQsUUFBUUMsR0FBRyxDQUFDSDtvQkFDaEI7Z0JBQ0o7WUFDSixPQUFPO2dCQUNIRSxRQUFRQyxHQUFHLENBQUM7WUFDaEI7WUFDQUQsUUFBUUMsR0FBRyxDQUFDLG9CQUFvQnBCO1FBQ3BDO1FBQ0FTO1FBQ0FVLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JwQjtJQUNwQyxHQUFHLEVBQUU7SUFFTCxxQkFDSSw4REFBQ3FCO2tCQUFHOzs7Ozs7QUFFWjtHQWxDTXRCO01BQUFBO0FBb0NOLCtEQUFlQSxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL3ZpZGVvTWVldC9jb25mZXJlbmNlLmpzPzljMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB3ZWIzIGZyb20gJy4uLy4uL0V0aGVyZXVtL3dlYjMnO1xyXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnO1xyXG5pbXBvcnQgQWdvcmFSVEMgZnJvbSAnYWdvcmEtcnRjLXNkay1uZyc7XHJcblxyXG5jb25zdCBEeW5hbWljQ29tcG9uZW50V2l0aE5vU1NSID0gZHluYW1pYygoKSA9PiBpbXBvcnQoJ2Fnb3JhLXJ0Yy1zZGstbmcnKSwge1xyXG4gICAgc3NyOiBmYWxzZSxcclxufSk7XHJcblxyXG5cclxuY29uc3QgTWVldFBhZ2UgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBbYWNjb3VudCwgc2V0QWNjb3VudF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBBUFBfSUQgPSBcImI4MTA1M2U5MDMwNzQ0MDM4MTkyMGE1NDBiYTAwNTg2XCI7XHJcbiAgICBjb25zdCBUT0tFTiA9IFwiMDA3ZUp4VFlLak1PejVwUWtqTTdRTk5aUS9PZWN2eVhIemNLTFY2eWFZMkxXRkd1ZDltYXpnVUdKSXNEQTFNalZNdERZd056RTFNREl3dERDMk5EQkpOVFF5U0VnME1UQzNNcnU1UFRHMElaR1R3bXY2WGtaRUJBa0Y4Rm9iY3hNdzhCZ1lBR3NJZWNRPT1cIjtcclxuICAgIGNvbnN0IENIQU5ORUwgPSBcIm1haW5cIjtcclxuXHJcbiAgICBjb25zdCBDTElFTlQgPSBBZ29yYVJUQy5jcmVhdGVDbGllbnQoeyBtb2RlOiAncnRjJywgY29kZWM6ICd2cDgnIH0pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaW5pdGlhbGl6ZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5ldGhlcmV1bSkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2ViMy5ldGguZ2V0QWNjb3VudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRBY2NvdW50KGFjY291bnRzWzBdKTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIuY29kZSA9PT0gNDAwMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXNlciByZWplY3RlZCB0aGUgcmVxdWVzdC4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbnN0YWxsIE1ldGFtYXNrJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDdXJyZW50IGFjY291bnQ6XCIsIGFjY291bnQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ3VycmVudCBhY2NvdW50OlwiLCBhY2NvdW50KTtcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxoMT5UaGlzIGlzIHlvdXIgbWVldCE8L2gxPlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1lZXRQYWdlO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIndlYjMiLCJkeW5hbWljIiwiQWdvcmFSVEMiLCJEeW5hbWljQ29tcG9uZW50V2l0aE5vU1NSIiwic3NyIiwiTWVldFBhZ2UiLCJhY2NvdW50Iiwic2V0QWNjb3VudCIsIkFQUF9JRCIsIlRPS0VOIiwiQ0hBTk5FTCIsIkNMSUVOVCIsImNyZWF0ZUNsaWVudCIsIm1vZGUiLCJjb2RlYyIsImluaXRpYWxpemUiLCJ3aW5kb3ciLCJldGhlcmV1bSIsInJlcXVlc3QiLCJtZXRob2QiLCJhY2NvdW50cyIsImV0aCIsImdldEFjY291bnRzIiwiZXJyIiwiY29kZSIsImNvbnNvbGUiLCJsb2ciLCJoMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/videoMeet/conference.js\n"));

/***/ })

});